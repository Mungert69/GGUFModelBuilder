[
  {
    "input": "Who are the authors and contributors to the \"Quantum Safe Cryptography and Security\" document and what are their affiliations?",
    "summary": "The text outlines the authors and contributors to a report on quantum-safe cryptography and security. It covers the basics of cryptography and quantum computing, explaining their impact on current security systems. The report then surveys existing cryptographic technologies and explores potential upgrades to security protocols like X.509, IKEv2, TLS, S/MIME, and SSH to ensure they remain secure against quantum threats. It also discusses application areas, economic considerations, and future research directions in quantum-safe cryptography.",
    "output": "Authors & contributors\nAuthors and contributors:\nMatthew Campagna, Ph.D., IQC Affiliate.\nLidong Chen, Ph.D, Mathematician, National Institute of Standards and Technology\nDr Özgür Dagdelen, TU Darmstadt\nJintai Ding, Ph.D. Department of Mathematical Sciences, University of Cincinnati\nJennifer K. Fernick, B.Sc, Institute for Quantum Computing, University of Waterloo\nNicolas Gisin, Department of Applied Physics, University of Geneva, Switzerland\nDonald Hayford, National Security Division, Battelle\nThomas Jennewein, PhD, Institute for Quantum Computing, University of Waterloo\nNorbert Lütkenhaus, PhD, Institute for Quantum Computing, University of Waterloo\nMichele Mosca, D.Phil., Institute for Quantum Computing, University of Waterloo\nBrian Neill, CISSP, CSSLP, Institute for Quantum Computing, University of Waterloo\nMark Pecen, Approach Infinity, Inc.\nRay Perlner, Computer Scientist, National Institute of Standards and Technology\nGrégoire Ribordy, PhD, Chief Executive Officer, ID Quantique\nJohn M. Schanck, Institute for Quantum Computing, University of Waterloo\nDr Douglas Stebila, Queensland University of Technology\nNino Walenta, Ph.D., National Security Division, Battelle\nWilliam Whyte, D. Phil., Chief Scientist, Security Innovation\nDr Zhenfei Zhang, Security Innovation Inc.\nOther contributors:\nSarah Kaiser, B.Sc, Institute for Quantum Computing, University of Waterloo\nAlbrecht Petzold, Technical University of Darmstadt\nDaniel Smith-Tone, Mathematician, National Institute of Standards and Technology Assistant\nProfessor, University of Louisville\nRapporteur:\nMark Pecen, Approach Infinity, Inc.\nQuantum Safe Cryptography and Security 1\nContents\nAuthors & contributors 1\nContents 2\nExecutive summary 5\n1 Scope and purpose 7\n2 Overview 8\n2.1 What is cryptography and how is it used? 8\n2.2 What is quantum computing? 9\n2.3 How does quantum computing impact cryptography and security? 11\n2.4 Why is quantum safety an important issue? 11\n2.5 What does quantum-safe mean? 13\n3 Technology survey – current state of the art 15\n3.1 Pervasiveness of RSA and ECC in security products 15\n3.2 Cryptographic primitives that are quantum safe 17\n3.2.1 Quantum Key Distribution 18\n3.2.2 Code-based cryptosystems 23\n3.2.3 Lattice-based cryptosystems 23\n3.2.4 Hash based cryptosystems 25\n3.2.5 Multivariate cryptosystems 26\n3.3 Comparison: classical and quantum safe 26\n4 Security protocols: potential for upgrade 29\n4.1 X.509 certificates 29\n4.1.1 Analysis of current algorithms 29\n4.1.2 Recommendations for quantum-safe X.509 certificates 30\n4.1.3 Technical concerns 30\n4.1.4 QKD and X.509 certificates 30\n4.2 Internet key exchange version 2 (IKEv2) 30\n4.2.1 Analysis 31\n4.2.2 Important security aspects of IKE 31\n4.2.3 Recommendations for quantum safe IKE 31\nQuantum Safe Cryptography and Security 2\n4.2.4 On the use of QKD in IKE 32\n4.3 Transport layer security (TLS) version 1.2 32\n4.3.1 Analysis of current TLS ciphersuites 32\n4.3.2 Recommendations for quantum-safe TLS 33\n4.3.3 Technical concerns 33\n4.3.4 On the use of QKD in TLS 34\n4.4 S/MIME 34\n4.4.1 Analysis of current algorithms in S/MIME version 3.2 34\n4.4.2 Recommendations for quantum-safe S/MIME 35\n4.4.3 Technical concerns 35\n4.5 Secure shell (SSH) version 2 35\n4.5.1 Analysis of current algorithms 36\n4.5.2 Recommendations for quantum-safe SSH 36\n4.5.3 Technical concerns for SSH 37\n4.5.4 On the use of QKD in the context of SSH 37\n5 Fields of Application and Use Cases 38\n5.1 Use Cases 38\n5.1.1 Encryption and authentication of endpoint devices 38\n5.1.2 Network infrastructure encryption 39\n5.1.3 Cloud Storage and computing 40\n5.1.4 Big data, data mining and machine learning 40\n5.1.5 SCADA (Supervisory Control and Data Acquisition) systems 41\n5.2 Fields of application 41\n5.2.1 Medicine and health 41\n5.2.2 Financial Services 42\n5.2.3 Mobile Applications 43\n5.2.4 Mobile Network Operator Wholesale 44\n6 Economics of quantum safe security 45\n6.1 Benefits of quantum safe security 45\n6.2 Challenges for quantum safe security 45\n6.3 Risk management: cryptography or insurance premiums 46\n6.4 Technology switching costs: gradual vs. immediate 47\nQuantum Safe Cryptography and Security 3\n6.4.1 Avoiding technology switching costs 48\n7 Conclusions and opportunities for further work 50\n8 References 52\n9 Definitions, symbols and abbreviations 57\n9.1 Definitions 57\n9.2 Abbreviations 60\nQuantum Safe Cryptography and Security 4"
  },
  {
    "input": "What are the implications of quantum computing on current cryptographic techniques and what steps are needed to transition to quantum safe cryptography?",
    "summary": "Recent research in quantum computing threatens current cryptographic methods, which rely on computational hardness. Quantum computers can solve these problems efficiently, making existing encryption vulnerable. To address this, quantum-safe techniques have been developed, offering protection against quantum attacks, but transitioning to them requires effort and support from various stakeholders. The paper provides an overview of the issue, its implications, and practical steps for adopting quantum-safe cryptography.",
    "output": "Executive summary\nRecent research in the field of quantum computing and quantum information theory has brought about\na credible threat to the current state-of-the-art for information protection. The current data protection\nmechanisms that typically comprise cryptographic systems rely on computational hardness as a means\nto protect sensitive data. This is to say that there are cryptographic problems that are difficult or\nimpossible to solve using conventional computing.\nBecause of recent advances in quantum computing and quantum information theory, the quantum\ncomputer presents a serious challenge to widely used current cryptographic techniques. This is because\nsome of the same cryptographic problems, which are difficult or impossible to solve using conventional\ncomputing, become fairly trivial for the quantum computer.\nIn the practical case, even encrypted information sitting in a database for 25 years, for instance, will be\nsubject to discovery by those having access to quantum computing platforms. The discovery of the\ncontent of such data may lead to serious consequences. These include the possible misuse of bank\naccount numbers, identity information, items relating to military security and other sensitive\ninformation.\nThe current state-of-the-art cryptographic principles use well-studied methods that have been relied\nupon for more than 20 years. Amongst cryptographic experts, well-studied, proven and mature\ntechniques are the most preferred for security reasons. However, such techniques were not designed to\nresist quantum attacks, because at the time of their invention, research into quantum computation was\nobscure and unknown to most cryptographic practitioners.\nNew cryptographic techniques have emerged in recent decades that do provide protection against\nquantum threats. These techniques are termed “quantum safe” and consist of both techniques based\non quantum properties of light that prevent interception of messages, as well as classic computational\ntechniques, all of which were designed to resist quantum attacks emerging from the rapidly accelerating\nresearch field of quantum computation.\nCryptographic techniques are commonly found in many industries and fielded systems, usually as a\ncomponent of broader network security products. These commonly available security products need to\nbe upgraded with quantum safe cryptographic techniques, and this paper explores some of the most\npervasive security systems while giving practical recommendations for upgrading to a quantum safe\nstate. This is not a trivial undertaking, and requires the interest and support of security product\nvendors, industry customers, academic researchers, and standards groups.\nAn important consideration is the cost of transitioning to quantum safe technologies. New products and\ntrends tend to follow a standard cycle of innovation starting with early adopters who pay high\npremiums, and ending with commoditized product offerings with abundant competition. Quantum safe\nfeatures will reset the innovation cycle for many common commoditized security products, but the real\ncosts of concern are related to switching to new quantum safe technologies.\nQuantum safe communication techniques are not compatible with techniques incumbent in products\nvulnerable to quantum attacks. In a well-ordered and cost efficient technology transition, there is a\nperiod of time where the new products are gradually phased in and legacy products are phased out.\nQuantum Safe Cryptography and Security 5\nCurrently, quantum safe and quantum vulnerable products can co-exist in a network; in some cases,\nthere is time for a well-ordered transition. However, the window of opportunity for orderly transition is\nshrinking and with the growing maturity of quantum computation research, for data that needs to be\nkept secret for decades into the future, the window for transitioning may already be closed.\nThis paper is designed to be a practical introduction and reference for those in the Information and\nCommunication Technology (ICT) community. The primary objective is to help raise awareness of the\npotential impacts of quantum computing on information security globally. This includes a 1) survey of\ncurrent cryptographic principles, 2) the possible impact of quantum computing on their effectiveness\nand 3) what can be done to mitigate the risks in an economically and technically practical manner. We\nfurther include discussion of the enablers of quantum safe cryptographic techniques along with the\nrealistic economic and technical challenges to its deployment in existing systems and the impact of\nglobal standards. We also present a section defining acronyms and related terminology, which is\ndesigned to be a reference for those operating in the ICT space in fields other than information security\nand cryptography.\nQuantum Safe Cryptography and Security 6"
  },
  {
    "input": "What are the potential impacts of quantum computing on information security and what measures can be taken to mitigate these risks?",
    "summary": "The ICT industry has long assumed that encryption is secure against quantum computing, but recent research shows quantum computers can break many current cryptosystems. This poses a serious threat to sensitive data, including financial and military information, which could be exposed if quantum-safe encryption is not implemented. The paper provides an overview of current cryptographic principles, the impact of quantum computing on them, and practical steps to mitigate these risks.",
    "output": "1 Scope and purpose\nUntil fairly recently, the Information and Communication Technology (ICT) industry has considered\ninformation interchange transactions across electronic networks to be secure when encrypted using\nwhat are considered to be an unbroken conventional cryptographic system. Recent research in the\nfield of quantum computing has produced a credible and serious threat to this assumption. Some\nproblems that are considered difficult or impossible to solve using conventional computation platforms\nbecome fairly trivial for a quantum computer. Any information that has been encrypted, or will be\nencrypted using many of the industry’s state-of-the-art cryptosystems based on computational-\nhardness is now under threat of both eavesdropping and attack by future adversaries who have access\nto quantum computation.\nThis means that even encrypted information sitting in a database for 25 years for example, will be\nsubject to discovery by those with access to quantum computing platforms. The discovery of the\ncontent of such data could lead to very serious consequences. These include the misuse of bank\naccount numbers, identity information, items relating to military security and other sensitive\ninformation. Without quantum-safe encryption, everything that has been transmitted, or will ever be\ntransmitted, over a network is vulnerable to eavesdropping and public disclosure.\nThis paper is designed to be a practical introduction and reference for those in the Information and\nCommunication Technology (ICT) community. The primary objective is to help raise awareness of the\npotential impacts of quantum computing on information security globally. This includes a 1) survey of\ncurrent cryptographic principles, 2) the possible impact of quantum computing on their effectiveness\nand 3) what can be done to mitigate the risks in an economically and technically practical manner. We\nfurther include discussion of the enablers of quantum safe cryptographic techniques along with the\nrealistic economic and technical challenges to its deployment in existing systems and the impact of\nglobal standards.\nQuantum Safe Cryptography and Security 7"
  },
  {
    "input": "What are the implications of quantum computing on current cryptographic systems and what types of cryptography are considered quantum-safe?",
    "summary": "Cryptography is the practice of securing communication by transforming data into an unreadable format and ensuring confidentiality, integrity, and authentication. It includes symmetric key and public key cryptography, with the latter being more complex and allowing secure communication even if the private key is known. Quantum computing poses a threat to current cryptographic systems, particularly those based on integer factorization and discrete logarithms, as quantum algorithms can break these systems much faster than classical computers. To address this, quantum-safe cryptography is needed to protect data from future quantum attacks.",
    "output": "2 Overview\n2.1 What is cryptography and how is it used?\nCryptography is literally the art of “secret writing”. It is used to secure communication by protecting the\nconfidentiality and integrity of messages and sensitive data. Without it, anyone could read a message or\nforge a private conversation. Messages are made secret by transforming them from “plaintext” into\n“ciphertext” using a cipher and performing the process of encryption. Decryption turns scrambled and\nunreadable ciphertext back into plaintext.\nWhen cryptographers talk about a “key”, they are referring to a shared secret that controls the ability to\nhide and un-hide information. There are two types of cryptography that are often referred to as\n“symmetric key” and “public key” cryptography:\n1. In symmetric key cryptography, the same key is used for both encryption and decryption, and\nthat key needs to be kept a secret by everyone who is sending and receiving private messages.\nThe major difficulty of symmetric key cryptography is to provide the secret keys to legitimate\nparties without divulging the keys to eavesdroppers.\n2. Public key cryptography1 is more involved and complex. There are two keys, one for encrypting\nand another key for decrypting. The two keys are mathematically related, and only one key is\nintended to be kept a secret. Public key cryptography allows anyone to send an encrypted\nmessage, but only one person, with the private key, can decrypt the message. Public key\ncryptography can also be used for digital signatures where someone with a private key can sign\na message that anyone can verify with the public key.\nFigure 1 - Cryptography Basics - Encryption and Decryption\nA - Symmetric Key Cryptography B - Public Key Cryptography\n1 Also sometimes referred to as “asymmetric key cryptography”\nQuantum Safe Cryptography and Security 8\nCryptography is necessary but not sufficient for secure transmission of information. In practice,\ninformation is secured using cryptography within the context of security protocols which handle\nmessage formatting, key management and a plethora of other considerations that are used to broaden\nthe primitive concept of secret message passing to the more practical art of modern secure\ncommunications.\nWhile cryptography is not the entirety of security, it is an essential part. If the cryptography fails, all of\nthe secret messages that are sent over public channels become readable to anyone who can passively\nobserve.\nCryptography is important because without it, everyone could read anything they intercept, regardless\nof whether it was intended for them. Cryptography keeps sensitive data a secret (confidentiality), it is\nused to protect against changes to data over an unreliable public channel (data integrity), and it can\nensure that communicating parties are indeed who they claim to be (authentication).\n2.2 What is quantum computing?\nToday’s computers are governed by the laws of classical physics and Moore’s law2 which states that,\nhistorically speaking, computers double their speed and capacity every 18 months because chip makers\nare able to squeeze twice as many transistors onto a computer chip. In order for these computing\nimprovements to continue, placing more transistors on a computer chip means that transistors need to\nget smaller. But physics presents a natural barrier in that once technology has shrunk a transistor to the\nsize of a single atom there are no more improvements to be made to transistor size. But what if the\ntransistor could be replaced with a better technology, a technology that allows for a new paradigm of\ncomputing?\nThe laws of physics that can be seen, observed, and understood through experiences in everyday life are\nreferred to as classical physics, and these laws govern the workings and computational capabilities of\ncomputers as they are known today. However, everything that is described by classical physics at a\nmacroscopic level can be described by quantum physics at a nanoscopic level, and these different\nphysical laws are known as quantum mechanics. In the past few decades, researchers have realized that\nthe ways in which the laws of physics allow different things to happen to very small objects can be\nharnessed to make computers out of novel materials, with hardware that looks and behaves very\ndifferently from the typical classical computers that people use in their homes and offices today.\nQuantum computers, obeying the laws of quantum mechanics, can calculate things in ways that are\nunimaginable from the perspective of people’s regular day-to-day experiences.\nIn classical computing, information is stored in fundamental units called bits, where a bit can hold a\nbinary digit with the value of 0 or 1. In quantum computing, the fundamental unit can hold both a 0 and\na 1 value at the same time; this is known as a superposition of two states. These quantum bits are\nknown as qubits and measuring the state of a qubit causes it to select or “collapse into”, being a 0 or a 1.\nInterestingly, if you prepare a string of qubits of the same length in the same way, the resulting bit string\n2\nMoore’s law is not an actual law of physics, but instead a general observation and prediction made by a co-founder of Intel that describes the\nspeed in which computing has matured.\nQuantum Safe Cryptography and Security 9\nwill not always be the same. This gives quantum computers an advantage over classical computers in\nthat they can perform very rapid parallel computations.\nQuantum mechanics has some novel properties that researchers have realized can be harnessed to\nmake quantum computers that behave very differently than the classical computers commonly used\ntoday. Using these novel quantum properties, a quantum computer is able to solve certain problems like\nsearching and factoring much faster than the time it would take a classical computer, with the best\nknown algorithms, to solve the same problem.\nFigure 2 - Breaks of the RSA cryptosystem in recent years using conventional computation.\nFor certain classes of problems, including integer factorization and discrete logarithms, quantum\ncomputers are able to perform computational tasks with efficiencies that are not known to be possible\nwith classical computers. The development and analysis of patterns of computation carried out by\nquantum computers is a field known as quantum algorithms, and the most well-known quantum\nalgorithms – Shor’s algorithm and Grover's algorithm – are used to quickly factor numbers and speed up\nsearches, respectively. These algorithms consequently threaten many widely used cryptosystems that\nbase their security on the premises that certain computational problems are difficult to solve.\nQuantum computers, employing quantum algorithms, can solve these classes of problems quickly\nenough to jeopardize the security of the information that is encrypted. Current public-key cryptography\nrelies on the assumption that some problems take an extremely long time to solve - and consequently,\nthat it would take a very long time for their messages to be decrypted - but the speed with which\nquantum algorithms can solve some of these problems severely challenges that assumption.\nQuantum Safe Cryptography and Security 10\nIn practice, there are a number of physical systems that realize different implementations of quantum\ncomputers. Some common systems are nuclear spins, superconducting qubits, ion traps, and optical\ncavity quantum electrodynamics. Each research direction is at a different level of maturity, with some\nbeing stronger contenders than others for large-scale quantum computing.\n2.3 How does quantum computing impact cryptography and\nsecurity?\nCryptography plays a very important role in most secure electronic communication systems today\nbecause it ensures that only authentic parties can read each other’s exchanged messages. Quantum\ncomputing threatens the basic goal of secure, authentic communication because in being able to do\ncertain kinds of computations that conventional computers cannot, cryptographic keys can be broken\nquickly by a quantum computer and this allows an eavesdropper to listen into private communications\nand pretend to be someone whom they are not. Quantum computers accomplish this by quickly reverse\ncalculating or guessing secret cryptographic keys, a task that is considered very hard and improbable for\na conventional computer.\nA quantum computer cannot break all types of cryptographic keys and some cryptographic algorithms in\nuse today are also safe to use in a world of widespread quantum computing. The following sections will\ndescribe which types of cryptography are safe from quantum attacks and which ciphers, protocols and\nsecurity systems are most vulnerable.\nFigure 3 - Cryptography Basics - Effect of a quantum attack.\nA – Eavesdropper obtains public key from B – Quantum computer can break\npublic channel security by reverse computing private\nkey faster than a conventional\ncomputer\n2.4 Why is quantum safety an important issue?\nInformation in many ways equates to geopolitical, social, and economic power. The economic, social,\nand political well-being of developed countries depends on integrity, confidentiality, and authenticity of\nQuantum Safe Cryptography and Security 11\nsensitive data sent over networks. Corporations and governments have legal responsibilities to their\ninvestors, constituents, and customers to preserve the confidentiality of sensitive information. Whether\nthis information consists of military communications, secret government documents, industrial trade\nsecrets, or financial and medical records, interception of information allows adversaries to not only\nlearn about the contents of these communications, but also to discover metadata in patterns within a\nnetwork of communicators, to extract general patterns using machine learning, and even to insert false\nor misleading information or malware into a data stream.\nPreviously, communications and transactions were considered secure when encrypted using an\nunbroken cryptosystem as part of an otherwise rigorous information security framework. Quantum\ncomputing challenges this assumption, because it offers a new and powerful set of tools under which\nmany of these cryptosystems may collapse. Many ciphersuites have already been demonstrated to be\ninsecure in the presence of a quantum computer, including some of our most pervasive cryptosystems\nsuch as RSA and Elliptic Curve Cryptography. Any data that has been encrypted using many\ncryptosystems whose security was based on the computational intractability of the so-called “hard\nproblems” of discrete log and integer factorization is under threat of both eavesdropping and attack by\nfuture adversaries in possession of quantum computers. Without quantum-safe encryption, everything\ntransmitted over an observable network is vulnerable to such an adversary. These issues do not only\nimpact data that may be encrypted in this manner in the future, but apply to the information that is\ncurrently stored in this manner, or has been transmitted over an observable channel in the past.\nChoosing to ignore quantum-safe cryptography and security before quantum computers are able to\nperform these functions leaves almost all of present and future data vulnerable to adversarial attack.\nIt is essential for industries with interest in keeping secret information safe from adversaries to be\nforward thinking in their approach to information security. This involves considering more than merely\nhow soon a quantum computer may be built. It also means thinking about how long information needs\nto stay secure, and how long it will take to update the existing IT infrastructure to be quantum-safe.\nSpecifically, it is necessary to consider:\nx: \"how many years we need our encryption to be secure\"\ny: \"how many years it will take us to make our IT infrastructure quantum-safe\"\nz: \"how many years before a large-scale quantum computer will be built\"\nIf a large-scale quantum computer (z) is built before the infrastructure has been re-tooled to be\nquantum-safe and the required duration of information-security has passed (x+y), then the encrypted\ninformation will not be secure, leaving it vulnerable to adversarial attack.\nIn real-world application, the value of x must be carefully considered, specifically: what are the practical\nconsequences of a certain category of information becoming public knowledge after x number of years?\nFor example, would it be a problem if your credit card numbers of today are made available to everyone\nin the world after x = 5 years? Probably not, because it is very likely that you would have a new credit\ncard issued, having a new expiry date and security code.\nOn the other hand, if personal identity information is made public after x = 5 years, you may be exposed\nto identity theft and any resulting consequences. Indeed, one would also need to be cautious about\ndefining the value of x in the case of certain other information categories such as top-secret military\ninformation, e.g. the orbits of secret military satellites, location of military bases and their resources and\nQuantum Safe Cryptography and Security 12\ncapabilities. Therefore, defining the value of x is a non-trivial matter, and requires a fair amount of\nthought, risk analysis and modelling. [Mosca13]\nFigure 4 - Lead time required for quantum safety\n2.5 What does quantum-safe mean?\nNot all security protocols and cryptographic algorithms are vulnerable to quantum attacks; some are\nbelieved to be safe from quantum attacks, while some are known to be vulnerable. A security control\nthat is believed to be quantum-safe today might - over time and with sufficient research - be shown to\nbe vulnerable tomorrow. Without proof that an algorithm is vulnerable to a quantum attack, a\ncryptographic primitive and the protocols that use it are presumed to be quantum-safe if they are well\nstudied and resists attacks using all known quantum algorithms.\nSecurity controls that are known to be highly vulnerable to quantum attack, and can be easily broken by\na quantum computer, include:\n1. Any cryptosystem that is built on top of the mathematical complexities of Integer Factoring and\nDiscrete Logarithms. This includes RSA, DSA, DH, ECDH, ECDSA and other variants of these\nciphers. It is important to point out that almost all public key cryptography in fielded security\nproducts and protocols today use these types of ciphers.\n2. Any security protocols that derive security from the above public key ciphers.\n3. Any products or security systems that derive security from the above protocols.\nControls that are known to be somewhat vulnerable to quantum attack, but can be easily repaired\ninclude symmetric key algorithms like AES that can be broken faster by a quantum computer running\nGrover’s algorithm than by a classical computer. However, a quantum computer can be made to work\njust as hard as a conventional computer by doubling the cipher’s key length. This is to say that AES-128\nis as difficult for a classical computer to break as AES-256 would be for a quantum computer.\nAES is considered quantum-safe because the cipher can adapt to a quantum attack by increasing its key\nsize to rectify a vulnerability introduced by quantum computing.\nCiphers like RSA and ECC are not quantum safe because they are not able to adapt by increasing their\nkey sizes to outpace the rate of development of quantum computing. In order to attack a 3072-bit RSA\nkey, for instance, a quantum computer must have a few thousand logical qubits. In general, the number\nof logical qubits needed scales in a linear fashion with the bit length of the RSA key. When such a\nquantum computer becomes available, moving to a larger RSA key size would thwart a quantum attack\nuntil a larger quantum computer is invented. However, doubling the size of an RSA or ECC key increases\nQuantum Safe Cryptography and Security 13\nthe running time of the cipher on a conventional computer by a factor of 8. That means that if the size\nof keys that a quantum computer can attack doubles every two years, then the running time of keys on\na conventional computer increases by a factor of 8 every two years, outstripping Moore’s Law and\nrapidly becoming impractical both in terms of speed and in terms of channel size, i.e. the required\nbandwidth to transmit the key information over an electronic medium.\nSymmetric key ciphers like AES are believed to be quantum-safe, whereas many public key ciphers like\nRSA are known not to be. A protocol that relies exclusively on ciphers like RSA is vulnerable to quantum\nattack, but a protocol that can adapt to use quantum-safe ciphers is itself considered quantum-safe. In\nprotocols and applications where public key cryptography is preferred over symmetric-key cryptography\n(usually, to overcome the difficulty of key distribution and key management problems), quantum safe\ncryptographic ciphers must be substituted in place of RSA or ECC in order to resist quantum attack.\nTable 1 - Comparison of conventional and quantum security levels of some popular ciphers.\nAlgorithm Key Length Effective Key Strength / Security Level\nConventional Computing Quantum Computing\nRSA-1024 1024 bits 80 bits 0 bits\nRSA-2048 2048 bits 112 bits 0 bits\nECC-256 256 bits 128 bits 0 bits\nECC-384 384 bits 256 bits 0 bits\nAES-128 128 bits 128 bits 64 bits\nAES-256 256 bits 256 bits 128 bits\nNote : Effective key strength for conventional computing derived from NIST SP 800-57\n“Recommendation for Key Management”\nQuantum Safe Cryptography and Security 14"
  },
  {
    "input": "What are the main cryptographic algorithms currently in use and how are they being replaced or enhanced with quantum-safe alternatives?",
    "summary": "The text discusses the importance of security researchers and cryptanalysts in improving cryptographic tools and ciphers. It highlights the current reliance on RSA and ECC in security protocols, which are vulnerable to quantum attacks. To address this, quantum-safe algorithms are being developed, with symmetric key cryptography and quantum key distribution (QKD) offering promising solutions. QKD uses quantum physics principles to ensure secure key exchange, while lattice-based and code-based cryptosystems are also considered quantum-safe. Despite their potential, these quantum-safe methods face challenges in implementation and adoption due to their complexity and less widespread use compared to classical algorithms.",
    "output": "3 Technology survey – current state of the art\nSome of the most important people responsible for the ongoing strength of our security tools are the\npeople who try to break them. At the network level this includes approaches such as penetration\ntesting, or sometimes security research, and at the cryptography level it is called cryptanalysis. The\nresearchers that perform this level of testing are exceptionally creative when it comes to circumventing\nsecurity systems or compromising ciphers and it is directly because of their research and efforts that\nstate-of-the-art tools and ciphers are constantly improved.\nWhen the security of a software system, network implementation or end-user device needs to be fixed\nit is not uncommon to receive a software security update. This may come in the form of a software\npatch, a special system configuration, or an added security control. In the case of a broken cipher, there\nmay be a standard parameter adjustment or a change to the algorithm implementation that is pushed\nout to products and buried deep in the software update.\nSecurity research and cryptanalysis is a long practiced art form. The designers of security products are\nso accustomed to people trying to break their security systems that they build in redundant controls and\nlayer these controls so that, over time, if a particular safeguard fails then the security of the system may\nstill be recovered. With regards to cryptography, security architects will also design in recoverable\nsecurity features, for instance, if a cipher is broken or discovered to be weak then the system can\naccommodate with a change in key size, parameter, or possibly even a new cipher or ciphersuite\ncombination.\nMany generic security protocols have some form of cryptographic agility, but in most cases, the only\npublic key cryptography options designed into these protocols are variants of RSA or ECC, as well as\nDiffie-Hellman for key exchange, which from the perspective of quantum computing are not resilient\nagainst quantum attacks. Even if the protocols support other algorithms, RSA and ECC are the most\nwidely deployed in practice. RSA and ECC are the most popular and pervasive public key cryptographic\nalgorithms in use today due to their historical precedent as well as their efficiencies. RSA was the first\npractical public-key cryptosystem discovered and was built into early versions of the Secure Sockets\nLayer (SSL) protocol; ECC was the first algorithm discovered after RSA to offer considerably smaller keys\nand comparable-speed operations. Unfortunately, due to Shor’s algorithms and the progressing\nmaturity of quantum computing, ECC and RSA will become increasingly vulnerable to quantum attacks\nover time.\nChanging from classical algorithms to quantum safe algorithms is not a simple task. It takes a long time\nfor a particular algorithm to be accepted by security practitioners, researchers and standards bodies.\nClassical algorithms like ECC and RSA are widely studied and well accepted by the security community.\nQuantum safe algorithms have been around for a long time, but have not benefited from nearly as much\npublic scrutiny and cryptanalysis, so they are less prevalent in standards and a difficult feature to find in\nsecurity products.\n3.1 Pervasiveness of RSA and ECC in security products\nClassical public key algorithms like RSA and ECC are used pervasively in security protocols and\napplications to provide some of the following general security services:\nPublic Key Infrastructure typically this takes the form of a Certificate Authority (CA) where an entity that\neveryone implicitly trusts will attest that a particular cryptographic key belongs to a particular person or\nQuantum Safe Cryptography and Security 15\nentity. Communication between two parties is assumed authentic because the trusted third party has\npreviously confirmed each identity and issued each a certificate. For example, this is accomplished on\nthe Internet where a WebTrust(c) accredited CA sends their self-signed root certificate to web browser\nmakers to be embedded in the web browser software that is distributed to PC and mobile phone users.\nCompanies that want to be trusted will purchase an SSL Certificate from a registrar that resolves to the\nroot CA embedded in the browsers so that PC or mobile phone users who visit the company’s website\ncan be sure that they are not talking to an impostor. A secure lock icon is displayed to the web browser\nuser, and the user may examine the details of the SSL certificate. As of 2014, almost all certificates\nissued by commercial CAs use RSA public keys of at least 2048 bits.\nSecure Software Distribution is often achieved using public key based Digital Signatures where\nimportant information is digitally signed and the resulting signature is appended, transmitted and stored\nbeside the original information and later used to authenticate. For example, software updates to a\nmobile handset’s operating system will usually include a digital signature and before the mobile handset\nwill install the software update, it will first verify that the update is authentic and was issued by the\nphone manufacturer and not an impostor. This ensures that the mobile handset may only run operating\nsystem software designed by the manufacturer that has not been tampered with prior to or during\ntransmission. For example, Apple and Microsoft issue developers with code signing certificates\ncontaining RSA public keys.\nFederated Authorization is a method of “single sign on” that allows a user of a website to enter their\nlogin credentials once, and be granted access to a number of other websites without divulging logon\ncredentials to the other websites.\nKey Exchange over a Public Channel is a common way to establish a secure connection where two\nindividuals can use their public keys to exchange messages in public that allow them to agree on a\nprivate shared secret. Anyone who eavesdrops on the public messages cannot derive the shared secret,\nwhich is subsequently used to encrypt confidential messages. Key exchange, and key agreement\nprotocols are used extensively in some of the most pervasive network security protocols like SSL/TLS,\nSSH and IKE/IPsec that protect private communications on the Internet. These protocols almost\nexclusively rely on key exchange using RSA, Diffie-Hellman, or elliptic curve cryptography.\nSecure Email (i.e. S/MIME) is popular within government entities and regulated enterprises for\nexchanging confidential and authentic emails and is often a required feature by these high security\norganizations. Most S/MIME certificates contain RSA public keys.\nVirtual Private Networks (i.e. IPsec) are used by enterprises to provide company network access, and\nwork related application access, to its mobile workforce. VPNs are also commonly used by expats living\nin foreign countries with Internet restrictions, where the expat uses a VPN to create a network “tunnel”\nback to their native country, avoiding the visiting country’s network filtering technologies. RSA and ECC\nare commonly used to setup the secure network tunnel using a key establishment protocol called IKE or\nmobileIKE.\nSecure Web Browsing (SSL/TLS) is most commonly associated with the secure “lock” icon displayed on a\nweb browser when visiting an SSL enabled website. Typically websites that accept credit card payments\nor deal with a user’s private information will SSL enable their webpages due to regulatory requirements\n(i.e. Payment Card Industry compliance), or because their user base has been trained to only use\nwebsites that display the lock icon when asked to disclose their private information. . Almost all SSL/TLS\nQuantum Safe Cryptography and Security 16\ncertificates contain RSA keys for authentication. As of 2014, use of elliptic curve cryptography for key\nexchange is increasing but still not widespread.\n3.2 Cryptographic primitives that are quantum safe\nMost of the public key cryptography that is used on the Internet today is based on algorithms that are\nvulnerable to quantum attacks. These include public key algorithms such as RSA, ECC, Diffie-Hellman\nand DSA. All of these examples are easily broken by Shor’s algorithms [Sho97] and are deemed to be\ninsecure as quantum computing matures.\nThe reason Shor’s algorithms break these public key cryptosystems is that they are based on two\nspecific computational problems - namely, Integer factorization and discrete logarithm. These problems\nare believed to be hard for a classical computer to solve, but are known to be easily solved by a\nquantum computer. In order to sustain the security of the Internet and other technologies reliant on\ncryptography it is necessary to identify new mathematical techniques upon which cryptography can be\nbuilt that are resilient against quantum attacks.\nThe main classes of computational problems that are currently believed to resist quantum algorithm\nattacks stem from the fields of lattice theory, coding theory and the study of multivariate quadratic\npolynomials. Each of these classes of computational problems offers new possible frameworks within\nwhich to build public key cryptography. The quantum safe ciphers that are built on these methods do\nadmittedly present some challenges. Typically, they suffer from large key sizes and signature sizes when\ncompared to popular, current public key algorithms that are not quantum safe. However, in terms of\nperformance, some quantum-safe algorithms are competitive with – or even faster than – widely used\npublic key algorithms such as RSA or ECC.\nSome forms of symmetric-key cryptography are guaranteed to be quantum-safe. These primitives make\nno computational assumptions and are thus information-theoretically secure. An example of this is\nVernam’s One Time Pad, which has been proven to have perfect unconditional security against\narbitrarily powerful eavesdroppers [SHA49]. Wegman-Carter Authentication [CW79] is also known to be\nresistant against quantum attacks [PER09].\nThere are also other types of symmetric key cryptography that are believed (but not proven) to be\nresilient against quantum attacks. For example, generic quantum search only provides a quadratic\nspeedup over classical search [BEN97], indicating that quantum computers could not perform a brute\nforce search to find symmetric keys much faster than could classical computers. Thus, unless the\nsymmetric key algorithm happens to have a particular structure that can be exploited by a quantum\ncomputer, the bit security of a symmetric cipher can be retained in the presence of a quantum\nadversary by simply doubling the key length. Since quantum search does not provide exponential\nspeedups, symmetric key encryption like AES is believed to be quantum-safe. Similarly, good hash\nfunctions are also believed to be resistant to quantum adversaries.\nFrom these examples, it is clear that some forms of symmetric key cryptography are guaranteed to be\nan important example of secure cryptography in a post-quantum world. However, the need for\nestablishing shared secret symmetric keys between communicating parties invites the challenge of how\nto securely distribute these keys. For key establishment, quantum-safe options include both\ncomputational and physics-based methods. These physics-based methods are collectively known as\nQuantum Key Distribution.\nQuantum Safe Cryptography and Security 17\n3.2.1 Quantum Key Distribution\nWhile there are several symmetric key cryptographic tools that are either believed or known to be\nquantum-safe, establishing shared secret symmetric keys through an untrusted medium is traditionally\naccomplished with public key methods that are known to be vulnerable to quantum attacks, which is\nthe main vulnerability of symmetric key schemes in the presence of a quantum computer. This opens up\nthe question of how to securely distribute symmetric keys between distant parties, without relying on\ninsecure legacy public key algorithms. One of the proposed solutions to the key distribution problem is\nknown as Quantum Key Distribution (QKD).\nThere do exist alternative key distribution algorithms using public key schemes that are not RSA or ECC.\nHowever, in contrast to these public key schemes, QKD as a cryptographic primitive offers security that\nis guaranteed by the laws of physics. QKD as a method for secure key establishment [GIS02] is proven to\nbe information theoretically secure against arbitrary attacks, including quantum attacks. This means that\neven assuming an adversary to have unlimited computational resources, including unlimited classical\nand quantum computing resources, QKD is secure now and always will be. By enabling provable security\nbased on fundamental laws of quantum physics, QKD remains resilient even to future advances in\ncryptanalysis or in quantum computing.\nConsequently, quantum key distribution provides the means to securely distribute secret keys that can\nbe used with quantum safe symmetric key algorithms like Advanced Encryption Standard (AES), or one-\ntime pad encryption.\nConceptually, the security of QKD is achieved by encoding information in quantum states of light. Using\nquantum states allows security to be based on fundamental laws in quantum physics and quantum\ninformation theory. There are three deeply related notions from quantum physics that illustrate the\nsource of the unique security properties of QKD:\n1. The Heisenberg uncertainty principle implies that by measuring an unknown quantum-\nmechanical state, it is physically changed. In the context of QKD, this means that an\neavesdropper observing the data stream will physically change the values of some of the bits in\na detectable way.\n2. The no cloning theorem states that it is physically impossible to make a perfect copy of an\nunknown quantum state. This means that it is impossible for an adversary to make a copy of a\nbit in the data stream to only measure one of the copies in hopes of hiding their eavesdropping.\n(See ‘Prepare-and-measure QKD’ in section 3.2.1.3)\n3. There exist properties of quantum entanglement that set fundamental limits on the information\nleaked to unauthorized third parties. (See ‘Entanglement-based QKD’ in section 3.2.1.3).\nImportantly, these are not technological limitations that can be overcome by clever advances in\nengineering, but rather are fundamental and irrefutable laws of quantum physics.\nInterestingly, due to the laws of quantum mechanics, it is physically impossible for an adversary to\ninvisibly eavesdrop on quantum key distribution. Looking at the information encoded in quantum states\nactually changes the information in ways that can be detected by the legitimate parties. The mere act of\nher observing the data in transmission will physically change the bits of information in the data stream\nand introduce errors in ways that the sender and recipient can readily detect and quantify. The\npercentage of errors which an eavesdropper necessarily introduces allow the sender and recipient to\nQuantum Safe Cryptography and Security 18\ncalculate not only whether an eavesdropper was present, but also precisely how much of the\ninformation about the key the adversary could have gained in the worst possible case with the most\npowerful algorithms and hardware. This allows them to use well-studied post-processing methods to\nremove any information an eavesdropper could have gained about the shared key.\nAn important characteristic of quantum key distribution is that any attack (e.g. any attempt to exploit a\nflaw in an implementation of transmitters or receivers) must be carried out in real time. Contrary to\nclassical cryptographic schemes, in QKD there is no way to save the information for later decryption by\nmore powerful technologies. This greatly reduces the window of opportunity for performing an attack\nagainst QKD; the window is much wider for conventional cryptography.\nThe security of QKD has been proven in a number of frameworks including the universal composability\n[BHL05, Sca09], the abstract cryptography framework [MAU11], or the authenticated key exchange\nframework [MSU13]. The composability of QKD as a cryptographic primitive allows safely combining the\ndistributed keys with other provably secure schemes such as Wegman-Carter authentication or onetime\npad encryption while maintaining quantifiable long-term security.\n3.2.1.1 How quantum key distribution works\nQuantum key distribution is a process that uses an authenticated communication channel together with\na quantum communication channel in order to establish a secret key. There are several different\nprotocols for implementing quantum key distribution, all of which require both a quantum channel (to\nsend quantum states of light), and an authenticated classical channel (for the sender, Alice, and the\nrecipient, Bob, to compare certain measurements related to these quantum states and perform certain\npost-processing steps to distil a correct and secret key). The quantum channel uses optical fibres or free\nspace/ satellite links to send photons (quantum states of light) between Alice and Bob, whereas the\nclassical channel could be a simple (authenticated) telephone line that Alice and Bob use to talk to each\nother. Interestingly, both of these can be public. It is described in section 3.2.1 that the quantum\nchannel necessarily shows Alice and Bob when an eavesdropper has been listening in, and it is a fact of\nthe QKD protocols that the classical channel could be broadcast publicly without compromising security.\nQuantum Key Distribution begins by Alice deciding to distribute some cryptographic key to Bob. Both\nAlice and Bob have the specialized optical equipment necessary for establishing the quantum channel,\nas well as access to a classical channel where they can communicate with one another. Alice uses a light\nsource to send a stream of photons (quantum states) one-at-a-time. Each photon can be thought of as\none bit of information. As each photon is sent, she randomly chooses to prepare it in one of two\n‘’bases’’. Basis can be described as a perspective from which a photon is measured.\nQuantum Safe Cryptography and Security 19\nFigure 5 - Illustration of a typical prepare-and-measurement QKD setup.\nAs the recipient, Bob needs to record values for each photon he receives via the quantum channel. To\ndo this, he must, like Alice, make a measurement of each one, and he therefore also chooses one of the\ntwo possible ‘’bases’’ and records which one he measured in. These choices are random and do not\nrequire any information about the bases that Alice chose when she was sending each bit. Afterward,\nAlice and Bob then communicate over the classical channel to compare which basis each bit was\nmeasured in at each end of the quantum channel. Sometimes Alice and Bob will randomly choose the\nsame basis, and these are the bits for which they will get the same value for the photon (which is useful,\nso they will keep this bit as part of the key). When Alice and Bob measure the photon using different\nbases, they throw this bit away and do not use it in the final key.\nAfter each bit has been sent and received, Alice and Bob can speak publicly about which basis they used\nto measure each photon, and this can provide enough information for each of them to generate key\nfrom the received quantum states, but not enough information for an adversary to reconstruct the key.\nThus, an eavesdropper will not be able to discover the transmitted key for two important reasons.\nFirstly, the adversary cannot directly observe the photon without changing them, therefore being\ndetected and having these bits discarded by Alice and Bob. Secondly, the adversary cannot indirectly\nobserve the photon through observing the measurements of Alice and Bob, either, since Alice and Bob\ndo not disclose the final measurement result for each quantum state. Rather, they only disclose which\nbasis they used to measure it. By this time, it is too late for the adversary to measure the photon,\nbecause it has already been received by Bob, so knowing the basis that Alice used is not useful. It is well-\nestablished using information theoretic proofs that the measurement information is inadequate for an\nadversary to use to reconstruct the generated key.\nQuantum Safe Cryptography and Security 20\n3.2.1.2 Authenticating the QKD channel\nAn important methodological consideration in quantum key distribution is how to authenticate the\nclassical communication channel to ensure that the two people communicating are actually Alice and\nBob. The authenticated classical communication channel may be realized a few different ways.\nThe most secure method for authentication does not require any computational assumptions and uses a\nsmall amount of random secret data that is initially shared between Alice and Bob. Combining this form\nof authentication with QKD may be viewed as an expansion of the initial secret data without sacrificing\nrandomness or secrecy. Subsequent communication using QKD normally uses part of the generated key\nmaterial for authenticating subsequent QKD sessions, and part of the keying material for encryption.\nIf initially Alice and Bob do not share an authentication key, a natural alternative is to use public key\nsignatures to authenticate their initial QKD session. Provided the public key signature is not broken\nduring the QKD session, the resulting key is information theoretically secure and thus cannot be broken\nby future algorithmic advances, even if the public key signature is later broken [PPS07, IM11, MSU13].\nSubsequent QKD sessions between Alice and Bob may be authenticated using a portion of previous QKD\nkeys, so that they only need to rely on the short-term security of the public key signature once.\n3.2.1.3 QKD protocols and their implementations\nSeveral QKD protocols have been successfully implemented in academic and commercial research labs,\ntransmitting keys over long distances through either optical fibres or free space. These protocols fall into\ntwo categories, and while theoretically identical in their analysis, are differentiated experimentally in\npart by how eavesdropping is detected:\n1. Prepare-and-measure QKD allows legitimate parties to detect eavesdroppers by comparing the\namount of error they might expect in their communications to the actual error of their\nmeasurements. This technique relies upon the fact that an adversary intercepting a quantum\nstate must measure it, and in this adversary attempting to guess the original state to forward it\nto the recipient, they will introduce a percentage of identifiable error.\n2. Entanglement-based QKD allows legitimate parties to detect eavesdroppers by virtue of the fact\nthat if the sender and recipient each have a photon the two of which are related by quantum-\nmechanical entanglement -interception or measurement by an adversary will change the two-\nphoton system in a way that the legitimate parties can readily detect.\nOne example of a QKD protocol is the BB84 protocol [BB84], which was the first protocol proposed for\nquantum key distribution and remains one of the most widely implemented protocols inside of\ncommercial products and used within research labs. QKD based on the BB84 protocol has been\ndemonstrated over distances over 100 km in length in both optical fibre and free space, reaching\ntransmission speeds on the order of one megabit per second over shorter distances ([SMA07, LUC13]).\nOptical fibre based QKD products have already been commercially deployed and are in use today to\ndistribute quantum safe keys in real networks.\nThe SARG protocol [SARG04] is similar to BB84 and has been used over a period of 21 months of\ncontinuous operation on the international SwissQuantum network [STU11].\nMore recent protocols which aim to have convenient implementations while still enabling long-distance\nand high transmission rate QKD are the Differential-Phase-Shift protocol [WAN12] and the Coherent\nOneWay protocol [STU09], which both have exceeded 250 km transmission distance in optical fibre.\nQuantum Safe Cryptography and Security 21\nThere is also Continuous Variable QKD protocol that is the only QKD protocol that does not require\nsingle-photon detectors. This protocol relies upon homodyne detection and continuous encoding of\nquantum states [GRO02, QLI].\nIn addition to the above commonly used protocols, there is on-going research into protocols that aim to\nreduce the security assumptions of the actual implementation of the QKD devices. For example, the\nmeasurement device independent (MDI) QKD protocol allows for the complete removal of the single\nphoton detectors and measurement devices from the security consideration [BHM96, Ina02, LCQ12].\nThat means that users of the QKD system do not need to trust the distributors of their measurement\ndevices. Another possibility exists in the Ekert protocol [EKE91], which proposes the use of quantum\nentanglement to implement QKD with complete device-independent security. Once implemented, this\nwould ultimately mean that trust assumptions of the QKD system implementation by a manufacturer\ncould be reduced to a minimum.\nQuantum key distribution penetration testing and security research (‘quantum hacking’) is an active\narea of academic and commercial work, and has identified some implementation specific vulnerabilities\nin QKD systems, leading to improved system designs.\n3.2.1.4 QKD in networks\nQuantum Key Distribution is intrinsically a point-to-point technology, but has been demonstrated in a\nrouted network topology over multiuser optical fibre networks [SEC09, CHE10, STU11, SAS11] to secure\ndata transmissions such as encrypted telephone communication and videoconferences throughout all\nnodes in a network. Therefore, the point-to-point nature of QKD can be implemented in such a way as\nto secure communications throughout a multiuser network. These networks are currently being\nexplored through industrial and academic research into optical fibre networks. Additionally, current\nwork on free space QKD links are also progressing toward the ultimate goal of using a satellite as a\ntrusted node to enable free space quantum key distribution around the globe.\nOptical fibre quantum key distribution can be implemented on existing optical infrastructures, but the\nquantum channel cannot pass through optical amplifiers. The maximum distance over which QKD\nphotons can travel is limited because of the absorption of the signal that occurs over long distance\ntransmission in optical fibre. Classical signals in the optical infrastructure use repeater nodes throughout\nthe network to amplify and propagate the signal. However, due to the no cloning theorem of quantum\ninformation, there are challenges in developing a repeater system for a QKD network. The present\nsolution to this problem is to concatenate multiple QKD systems to let keys propagate via intermediate\nnodes, which requires that the intermediate nodes must all be trusted to some extent.\nWhile routing QKD using trusted nodes is one solution to the distance limitations and point-to-point\nnature of quantum key distribution, current research is exploring quantum repeater architectures that\nexploit something known as quantum entanglement in order to extend the range of QKD links beyond\n400 km.\nAnother way of overcoming distance related challenges to implementing QKD is to send the signals\nthrough free space rather than optical fibre, as signals are diffracted less rapidly through the medium of\nair than they are through the medium of optical fibre. There is a trade-off with this approach; it is a\nmore difficult engineering problem to protect against noise from atmospheric fluctuations. Several\ninternational research teams are currently working to develop satellites for use in quantum key\ndistribution. These systems would have the benefit of not only being able to receive point-to-point\nQuantum Safe Cryptography and Security 22\nsignals over distances of a few hundred kilometres from the ground to low earth orbit [ELS12], but\nfurthermore, a network of these satellites could act as trusted intermediary nodes capable of\ntransmitting free space links all around the world. While this is an area of active research, satellite based\nquantum key distribution has yet to be demonstrated.\nCurrent limitations of quantum key distribution, in general, are its higher costs for dedicated hardware,\nits transmission distance of a few hundred kilometres, and its key generation rate which decreases with\nincreasing distance between sender and receiver. However, for specific applications for which strong\nsecurity conditions must be met, QKD will likely become an increasingly attractive option in the\nupcoming years as research extends the distances over which quantum key distribution can be\nperformed.\n3.2.2 Code-based cryptosystems\nError correcting codes have played a prominent role in communication technology for a long time. They\nprovide added redundancy to digital communications so that the receiver in real time can correct errors,\nwhich inevitably occur during transmission. An example of efficient error correcting codes are Goppa\ncodes which can be turned into a secure coding scheme by keeping the encoding and decoding\nfunctions a secret, and to only publicly communicate a disguised encoding function that allows the\nmapping of a plaintext message to a scrambled set of code words. Only in possession of the secret\ndecoding function can the secret mapping be removed in order to recover the plaintext. This technique\nis computational hard to reverse using either a conventional or quantum computer, it is based on a\nmathematical problem called syndrome decoding which is known to be an NP-complete problem if the\nnumber of errors is unbounded.\nThe notion of code-based cryptography was first introduced by an encryption scheme published by\nMcEliece in 1978. The McEliece cryptosystem [McE78] builds on (binary) Goppa codes and its security is\nbased on the syndrome decoding problem. It is known to be extremely fast in encryption and reasonably\nfast in decryption. The biggest drawback of this cryptosystem that prevents its practical adoption is the\nextremely large key sizes that are required.\nIn 2001, Courtois, Finiasz, and Sendrier [CFS01] proposed the first code-based signature scheme called\nCFS. CFS signatures are very short in length and are very fast to verify. However, CFS signatures suffer\nfrom the same extremely large key size drawback as the McEliece cryptosystem. In addition, the\ngeneration of signatures is highly inefficient. The security of the CFS signature is also based on the\nsyndrome decoding problem. The fastest implementation of CFS can be found in [BCS13] and, on\naverage, is roughly 100 times slower than signing with the RSA signature scheme.\nA popular way to obtain signature schemes is by applying the Fiat-Shamir transformation on\nidentification protocols. In this vein, the scheme by Stern [Stern94] and Cayrel et al [CVE10] can be\ntransformed to a signature scheme outperforming CFS (see more details in [A+13]). Still, code-based\nsignature schemes perform weakest among the quantum safe alternative primitives.\n3.2.3 Lattice-based cryptosystems\nAmong all computational problems believed to be quantum safe, lattice-based problems have received\nthe most attention during the past decade. Like code-based and multivariate-based algorithms, lattice-\nbased algorithms are very fast and are considered quantum safe.\nQuantum Safe Cryptography and Security 23\nLattice problems also benefit from something called worst-case to average-case reduction, which means\nthat all keys are as hard to break in the easiest case as in the worst case when setting up any of the\nparameters of a lattice based cryptosystem. In a crypto system like RSA, generating keys involves\npicking two very large random numbers, that should be prime and should yield a hard instance of the\nfactorization problem, but there is a certain degree of probability of choosing wrong and resulting in a\nweak security level. In lattice-based cryptography, all possible key selections are strong and hard to\nsolve.\nThe core problem among all lattice problems, named Shortest Vector Problem (SVP), is to find the\nshortest non-zero vector within the lattice. This problem is NP-hard. And unlike the factorization\nproblem nor the discrete log problem, there is no known quantum algorithm to solve SVP with the help\nof a quantum computer. In practice, cryptosystems are based on the assumption that the relaxed\nvariants of this problem are still hard to solve. Among all the candidates, the following two deliver best\nperformance and security:\n1. NTRU: The NTRU cryptosystem was proposed by Hoffstein et al. [HPS98] as the first practical\nlattice-based cryptosystem. It is based on the assumptions that lattice problems are hard to\nsolve within a specific family of lattices – the NTRU lattices. In 2011, Stehle and Steinfeld [SS11]\nproposed a variant of the NTRU encryption scheme, SS-NTRU, which had a reduction to\nproblems over ideal lattices – a specific subgroup of lattices that includes NTRU lattices, though\nat the cost of reduced performance. The NTRU encryption scheme beats classical cryptography\nin performance but comes with larger pubic key sizes than RSA.\n2. LWE: The Learning With Error (LWE) problem enables cryptosystems whose security can be\nreduced to lattice problems over general lattices. In [LP11], Lindner and Peikert have created a\nlattice-based cryptosystem called LP-LWE that is proven to be secure as long as worst-case\ninstances of lattice problems are hard. In practice, usually the Ring Learning With Error (R-LWE)\nvariant is used to boost efficiency. The R-LWE and SS-NTRU are reducible to a same lattice\nproblem.\nFigure 6 - Relationship of Lattice-based problems\nIn a series of work, Lyubashevsky et al. proposed lattice-based signature schemes based on short integer\nsolution (SIS). The latest outcome is, called BLISS (Bimodal Lattice Signature Scheme) [DDLL13], is the\ncurrently most efficient signature scheme having approximately 0.6 KB public-key size and 0.25 KB\nprivate key size comparable in strength to AES-128. When compared to RSA-2048, BLISS is roughly 3-10\ntimes faster at signing, and BLISS has similar speed improvements over RSA for verification. BLISS is\nQuantum Safe Cryptography and Security 24"
  },
  {
    "input": "What are the key differences between classical and quantum-safe public key cryptographic schemes in terms of performance, key sizes, and security considerations?",
    "summary": "The text discusses quantum-safe cryptographic schemes, focusing on lattice-based and hash-based signatures like BLISS and XMSS, which are more efficient than traditional ones. It also covers multivariate schemes such as Rainbow and UOV, which are promising but have varying efficiency. A comparison between classical and quantum-safe cryptography highlights that while quantum-safe schemes perform similarly or better in terms of speed, their key and message sizes are generally larger, and they are less studied than their classical counterparts.",
    "output": "basically a translation of discrete-logarithm-based Schnorr signatures [Sch91] to lattices with several\noptimizations with respect to distributions and efficient sampling from those. A very recent result\nimproves BLISS further to enable an implementation of BLISS on embedded devices [PDG14].\nAs opposed to code-based and multivariate-based cryptography, there exists a couple of practical key\nexchange protocols based on lattice problems. A current matter of research is to implement those key\nexchange protocol into the TLS framework [BCNS14] and derive variants with additional entity\nauthentication.\n3.2.4 Hash based cryptosystems\nHash-based cryptography offers one-time signature schemes based on hash functions such as Lamport-\nDiffie or Winternitz signatures. The security of such one-time signature schemes relies solely on the\ncollision-resistance of the chosen cryptographic hash function.\nSince Winternitz and Lamport-Diffie signatures cannot be used more than once securely, they are\ncombined with structures like binary trees so that instead of using a signing key for a single one-time use\nsignature, a key may be used for a number of signatures limited and bounded by the size of the binary\ntree. The main concept behind using a binary tree with hash signature schemes is that each position on\nthe tree is calculated to be the hash of the concatenation of their children nodes. Nodes are thus\ncomputed successively, with the root of the tree being the public key of the global signature scheme.\nThe leaves of the tree are built from one-time signature verification keys.\nThis idea was introduced by Merkle in 1979 [Merkle79] and suffered a number of efficiency drawbacks\nsuch as large keys, large signature sizes and slow signature generation.\nXMSS is a more current scheme and is in the process of becoming standardized3. It builds on Merkle\nTrees with the following improvements:\n More efficiency of the tree traversal, i.e. the computation of the path of nodes relating a given\none-time signature to the root of the tree and the overall public key.\n Reduced private key sizes and forward secrecy through the use of a pseudo-random number\ngenerator for the creation of the one-time signature keys.\nA significant strength of hash-based signature schemes is their flexibility as they can be used with any\nsecure hashing function, and so if a flaw is discovered in a secure hashing function, a hash-based\nsignature scheme just needs to switch to a new and secure hash function to remain effective.\nAn important drawback of Merkle-related schemes is their statefullness in that the signer must keep\ntrack of which one-time signature keys have already been used. This can be tricky in large-scale\nenvironments. Stateless variants are a matter of current research4.\nIn terms of efficiency, successive iterations have greatly improved hash-based signature schemes, yet\nsome drawbacks remain. For a comparable level of bit security, XMSS instantiated with AES-128\n3 http://gepris.dfg.de/gepris/projekt/251300380?language=en\n4 https://huelsing.files.wordpress.com/2013/04/20140710_sphincs_darmstadt.pdf\nQuantum Safe Cryptography and Security 25\nproduces signatures over ten times larger than RSA-2048. Timings for signature and verification are\ncomparable and additional improvements are expected in the future.\n3.2.5 Multivariate cryptosystems\nThe most promising multivariate encryption scheme is currently the Simple Matrix (or ABC) encryption\nscheme [DPW14]. In this scheme, all computations are done over one finite field and the decryption\nprocess consists only of the solution of linear systems, which makes the scheme very efficient.\nThere are a number of other multivariate encryption schemes including PMI [Ding04] and ipHFE [DS05],\nhowever, these encryption systems tend to be inefficient because the decryption process includes some\nguessing, which is a required part of the algorithm that ensures its security.\nMultivariate cryptosystems are public key based systems and can be used for digital signatures. The\nmost promising signature schemes include UOV [Patarin96] and Rainbow [DS05, DYCCC05].\nUOV and Rainbow are SingleField schemes, which means that all computations are performed over a\nsingle finite field. UOV has a large ratio between the number of variables and equations on the order of\n3:1, which means that signatures are three times longer than hash values and the public key sizes are\nalso large. Rainbow is more efficient; it is secure using smaller ratios, which has the impact of reducing\ndigital signature and key sizes. Signature and key sizes can be further reduced for UOV and Rainbow\n[PBB10, SSH11] at the expense of increasing the time it takes to generate a key pair.\nThere also exist BigField schemes such as HFE (Hidden Field Equations) and pFLASH. A recent variant\nknown as HFEv- is able to obtain secure signatures that are comparable in size to schemes like RSA and\nECC. Another candidate BigField scheme is known as pFLASH [DDYCC08] which is a modified version of\nthe C* scheme of Matsumoto and Imai.\n3.3 Comparison: classical and quantum safe\nThe following tables compare the practical factors between public key cryptography schemes that are\npopular, but vulnerable to quantum attack, and quantum safe public key schemes that were introduced\nin prior sections above. The important factors being compared include key generation time, signing\ntime, verification time, encryption time, and decryption time. The data represented in the tables is not\nbenchmark data, but instead are values that are relative to an RSA signing operation where 1 unit of\ntime is equivalent to producing an RSA signature using a 3072 bit private key.\nEach quantum resistant cryptographic scheme may have multiple versions. Instead of using the specific\nacronyms, a more general name is used in the tables for each scheme and a reference is given that\nidentifies the exact scheme.\nThe quantum safe encryption schemes used in the table comparisons include:\n1. NTRU encryption scheme [HHHW09]\n2. McEliece encryption scheme [NMBB12]\n3. A variant of McEliece encryption scheme from Moderate Density Parity-Check (MDPC) codes\nand another from quasi-cyclic MDPC codes [MTSB12].\nThe time values are extrapolated from EBACS [EBACS] and the referred papers specifying the selected\nschemes. In addition to comparing the time taken to perform cryptographic operations, the key sizes of\nQuantum Safe Cryptography and Security 26\nthe public key and private key, and the size of the resulting the cipher text are shown. These\ncomparisons all assume an equivalent effective symmetric key strength of 128 bits and are represented\nby the value k (i.e. k = a key that is as strong as a 128 bits of symmetric key). The time scaling and key\nscaling columns describe the rate at which operation time increases and the size of keys increase in\norder to increase the security level.\nThe following table comparisons are not exact and are intended for illustration only. Comparisons were\ncomposed from multiple referenced external sources and are not the result of tests conducted in the\nsame controlled environment.\nTable 2 - Comparison on encryption schemes\n(RSA decryption = 1, size in bits, k security strength)\nAlgorithm KeyGen Decryption Encryption PubKey PrivateKey Cipher text Time Key\n(time (time (time (key size in (key size in (size of Scaling Scaling\ncompared compared compared bits to bits to resulting\nto RSA to RSA to RSA achieve achieve cipher text)\ndecrypt) decrypt) decrypt) 128 bits of 128 bits of\nsecurity) security\nNTRU 5 0.05 0.05 4939 1398 4939 k2 k\nMcEliece 2 0.5 0.01 1537536 64861 2860 k2 k2\nQuasi- 5 0.5 0.1 9857 19714 19714 k2 k\nCyclic\nMDPC\nMcEliece\nRSA 50 1 0.01 3072 24,576 3072 k6 k3\nDH 0.2 0.2 0.2 3072 3238 3072 k4 k3\nECDH 0.05 0.05 0.05 256 256 512 k2 k\nNote: in key scaling, the factor log k is omitted.\nThe quantum safe digital signature schemes used in the following table comparisons include:\n1. Hash tree based signature from [BDH11];\n2. BLISS -Lattice based signature [DDLL13];\n3. Rainbow signature (Multivariate) [PBB10].\nHash tree based signatures are unique in that their keys can only be used to produce a limited number\nof signatures. The maximum number of signatures for a hash tree scheme needs to be chosen at the\ntime of key generation. For the purpose of comparisons below, hash tree scheme keys are set at a fixed\n220 signatures.\nQuantum Safe Cryptography and Security 27\nTable 3 - Comparison on signatures (RSA signing = 1, size in bits, k security strength)\nAlgorithm\nNum\nof Key Gen Signing Verifying PubKey PrivateKey Signature Time Key\nsign (time (time (time (size in bits (size in bits (size in bits Scaling Scaling\ncompared compared compared to achieve to achieve of resulting\nto RSA to RSA to RSA 128 bits of 128 bits of digital\nsign) sign) sign) security) security signature)\nXMSS 220 100000 2 0.2 7296 152 19608 k2 k2\nsignatures\n(hash based)\nBLISS (lattice- 0.005 0.02 0.01 7000 2000 5600 k2 k\nbased)\nRainbow 20 0.02 0.02 842400 561352 264 k3 k3\nsignature\n(multivariate)\nRSA 50 1 0.01 3072 24,576 3072 k6 k3\nDSA 0.2 0.2 0.2 3072 3328 3072 k4 k3\nECDSA 0.05 0.05 0.05 512 768 512 k2 k\nNote: in key scaling, the factor log k is omitted.\nCurrently, the actual implementation benchmarks for these quantum safe schemes are not generally\navailable. The data on performance provided in Table 1 and Table 2 is based on estimations to obtain\napproximate scaling about the performance. In other words, the performance data should not be\nconsidered as a precise comparison. It is worth noting that QKD is a quantum-safe key agreement\nprimitive, but it has not been included in the table, because the relevant parameters and performance\nfigures are different from those of mathematics based cryptographic primitives.\nBased on Table 1, the key pair generation of the selected quantum safe schemes are far better than RSA.\nBut they are not as good as DH and ECDH. Therefore, using a one-time key pair to achieve perfect\nforward secrecy is possible during a key establishment scheme, however, it will be slower than an\nephemeral Diffie-Hellman key agreement.\nFor the selected digital signature schemes, XMSS has the asymmetry property of RSA, i.e. verifying is\nfaster than signing. Likewise, for the selected encryption schemes, the McEliece variants also share the\nasymmetry property of RSA, i.e. encryption is faster than decryption.\nThe selected quantum safe schemes generally have performance comparable to or better than pre-\nquantum schemes of the same security level. However, key, message, and signature sizes are generally\nlarger. In the cases of McEliece and Rainbow, key sizes are a lot larger. Also, quantum safe schemes\nhave not been studied as thoroughly as the listed pre-quantum schemes.\nQuantum Safe Cryptography and Security 28"
  },
  {
    "input": "What are the challenges and recommendations for making existing security protocols like X.509 certificates, IKEv2, TLS, and S/MIME quantum-safe?",
    "summary": "Security protocols are designed with current cryptographic tools and can be updated to support quantum-safe algorithms, though this is challenging due to factors like adoption rates and backwards compatibility. X.509 certificates can be made quantum-safe by adding new OID identifiers for quantum-resistant algorithms, but existing standards like IKEv2 and TLS may require more significant changes to be secure against quantum threats. TLS can be upgraded to quantum-safe cryptography through a two-stage process, replacing key exchange mechanisms and later adopting quantum-safe digital signatures, while S/MIME may need to replace its public key algorithms to ensure long-term security.",
    "output": "4 Security protocols: potential for upgrade\nSecurity protocols are designed with the most effective cryptographic tools available at the time, and if\nsuccessfully adopted by the security community, these protocols tend to be long lived in products and\nnetworks. Designers of security protocols tend to anticipate that the security level of cryptography used\nin their protocols will degrade over time, and they will allow for corrections in the future by supporting\nchanges to key sizes and cryptographic parameters. Protecting against quantum attacks may require\nmore drastic changes than designers have historically anticipated. Cryptographic primitives may need to\nbe replaced entirely, and protocol-level changes may be necessary to accommodate the new primitives.\nIt can be a great challenge to insulate an established standard against quantum attacks because non-\nsecurity issues such as adoption rates, backwards compatibility and performance characteristics must\nalso be considered. Changing cryptographic systems in a standard can be done, however, the pace is\nslow and requires strong demand from the market.\nThe following sections explore the cryptographic agility that is currently built into some of today’s most\nwidely used security protocols. Each protocol’s tolerance for accommodating quantum-safe controls is\nevaluated and recommendations are made outlining a migration path to a quantum safe security\nposture. In some cases this can be achieved using existing cryptographic agility features that are already\nbuilt into the protocol, but unfortunately some protocols are too rigid and require fundamental\nmessaging and data structure changes to safeguard them from quantum threats.\n4.1 X.509 certificates\nMany applications involving public key cryptography rely on certificates – these are cryptographically\nsigned documents, often issued by a trusted third party or certificate authority (CA), who attests to the\nownership of a particular public key by a particular entity. A certificate includes information identifying\nits owner, a public key for the owner, a validity period, and a signature binding this information together\nand certifying its authenticity. Certificates are often chained together, enabling one CA to certify all of\nthe certificates of another CA.\nThe X.509 standard specifies a common format for public key certificates, mechanisms for managing and\nrevoking certificates, a set of valid attributes of certificates, and an algorithm for validating the\ncertificates. X.509 is not a protocol but rather a suite of data formats and algorithms that collectively\nconstitute a public key infrastructure (PKI).\nX.509 certificates play a central role in the use of SSL/TLS on the Internet, as servers are authenticated\nto clients using X.509v3 certificates. Every web server supporting TLS must have a certificate, the vast\nmajority of which are issued by one of the several hundred commercial CAs that are recognized by\nmajor web browsers. X.509v3 certificates are also used in other contexts, including secure email\n(S/MIME), web services (XML Digital Signatures), and code signing.\n4.1.1 Analysis of current algorithms\nThe X.509v3 standard allows for algorithm agility in that an ASN.1 Object Identifier (OID) defines the\nformats of public keys. The OID scheme is highly extensible and any organization holding an OID can\nissue further OIDs within their hierarchy and so new ciphers can be defined by any organization that\nparticipates in the OID hierarchy.\nQuantum Safe Cryptography and Security 29\nAdding a new cipher OID is the first step needed to extend X.509, but what is also needed is for software\nthat reads X.509 certificates to be able to comprehend the new OID and be able to process the X.509\nsignatures according to the new cipher definition.\nThe vast majority of certificates issued by commercial CAs contain RSA public keys, and a small number\nof CAs are starting to issue certificates containing elliptic curve public keys. Similarly most certificates\non the internet today are signed with an RSA key. There are currently no CAs issuing certificates for\nquantum-safe public keys, and no CAs signing their certificates with a quantum-safe signature algorithm.\nRegardless, the X.509 certificate structure is extensible and can be made to support quantum-safe\nalgorithms with relative ease.\n4.1.2 Recommendations for quantum-safe X.509 certificates\nUsing quantum-safe algorithms and public keys in X.509 certificates does not require a change to the\nstandard; it simply requires OIDs to be created for quantum-safe algorithms, something that can easily\nbe done by any organization already holding an OID. However, X.509 is a standard that is used in many\nother standards that would require an update to support the newly defined quantum-safe algorithm\nidentifiers. For example, TLS would require new ciphersuites to be introduced.\nThe importance of using quantum-safe X.509 certificates now depends on the application in which they\nare used.\n Some X.509 certificates are relatively short-lived. For example, the certificates used to\nauthenticate websites using TLS typically have validity periods between 1 and 5 years and will\nexpire before quantum computers are available. Using a quantum computer to break\nauthentication after the validity period would have no impact on current TLS sessions.\n Some X.509 certificates are longer-lived. For example, certificates that are used for signing legal\ndocuments may need to have validity for decades. As a result, applications requiring long-term\nsecurity from X.509 certificates should place higher priority on migrating to quantum-safe\nalgorithms in X.509 certificates due to higher likelihood of exposure to quantum threats in the\nfuture.\nIn practice, adoption of new algorithms in X.509 certificates is constrained by choices of major software\ndevelopers as well as commercial CAs. Deployment of new algorithms is generally slow.\n4.1.3 Technical concerns\nThe X.509 data format allows for very long public keys and signatures, so post-quantum schemes with\nlarge public keys should not be problematic for X.509 certificates directly. However, some applications\nmay put size limits on X.509 fields, not anticipating future cipher changes.\n4.1.4 QKD and X.509 certificates\nQKD when used in combination with a quantum safe public key algorithm could make use of X.509\ncertificates to authenticate the service channel that is required by a QKD system during the key\ndistillation phase of the QKD protocol.\n4.2 Internet key exchange version 2 (IKEv2)\nInternet Key Exchange (IKEv2) is a protocol used to establish keys and security associations (SAs) for the\npurpose of setting up a secure Virtual Private Network (VPN) connection that protects network packets\nQuantum Safe Cryptography and Security 30\nfrom being read or intercepted over a public Internet connection. This allows a remote computer on a\npublic network to access resources and benefit from the security of a private closed network without\ncompromising security.\nThe IKE protocol standard is rigid and does not permit VPN designers to choose beyond a small set of\ncryptographic algorithms. At present, none of the permitted algorithms are completely quantum safe.\n4.2.1 Analysis\nIn a typical IKE protocol three exchanges are used to setup a Security Association. In the first exchange,\na common key is derived using the Diffie-Hellman key agreement algorithm. This common key is\nauthenticated in a second exchange using either certified digital signatures, or a pre-shared\nauthentication key. In the third exchange, Diffie-Hellman key agreement is conducted again to generate\nnew ephemeral keys for encrypting or authenticating IP packets, these keys makeup a Security\nAssociation.\nThere is no alternative to Diffie-Hellman for key agreement specified in the standard. Since Diffie-\nHellman is not a quantum safe algorithm, it would need to be replaced in order for IKE to be secure\nagainst quantum attacks. Of the authentication methods given, only the pre-shared key option may be\nconsidered quantum-safe.\nAs currently deployed, IKE session establishment data and the subsequent VPN traffic is vulnerable to\nbeing captured, stored in an encrypted state, and later decrypted when quantum computing is available.\n4.2.2 Important security aspects of IKE\nIKE offers very useful security properties that would need to be maintained if cryptographic agility were\nintroduced to the standard. IKE security associations are built on the concept of Perfect Forward\nSecrecy (PFS); in conventional security terms this means that ephemeral, one-time-use, keys are created\nfor every new secure connection. This ensures that the compromise of a long-term key does not affect\nthe confidentially of sessions established prior to the compromise. Furthermore, the compromise of an\nephemeral key does not affect the confidentially of sessions in which that key was not used.\nIKE also provides authenticated connections, using RSA, DSS or MAC with a pre-shared secret. While the\nMAC option with proper key and MAC tag length justification is quantum safe, RSA and DSS algorithms\nare not. Simply specifying the use of a MAC with pre-shared secret is not an adequate substitute for a\npublic key based algorithms because a large network with individual pre shared secrets for every\nconnection does not scale well and quickly becomes a key management problem as the network grows.\nPre-shared keys are also problematic in a large network because, if a global key is being used it is very\nhard to keep such a global key a secret, representing a vulnerability with a single point of failure.\n4.2.3 Recommendations for quantum safe IKE\nAny option to make IKE quantum safe would require a change to the standard. Specifically, these\nchanges would include:\n A replacement algorithm for the first and third exchanges, for instance, a quantum-safe\nalternative to Diffie-Hellman key agreement that maintains PFS. Note that there is not a well\nstudied alternative, however, university level research is occurring and has resulted in some\nproposals from the academic community. These proposals should be reviewed and evaluated by\nQuantum Safe Cryptography and Security 31\nstandards bodies as potential avenues to create a quantum safe IKE that maintains desirable PFS\nsecurity features.\n A replacement algorithm for the second exchange, public key based, authentication schemes for\nsetting up a security association. Currently these are based on RSA and DSS, a quantum safe\nalgorithm should also be specified as an option giving an alternative to the logistics problems\nassociated with MAC using pre-shared secrets.\n4.2.4 On the use of QKD in IKE\nQKD may be used as a replacement for Diffie-Hellman key agreement to establish the shared secret for\nan IKE SA with perfect forward security. Together with a quantum-resistant authentication algorithm\nthis would enable IKE to negotiate quantum safe symmetric keys. The shared secrets provided by QKD\nmay either be used with conventional encryption ciphers, or for one-time pad encryption in high\nsecurity applications.\nQKD may also be used for the second pass to solve the key management problem of distributing shared\nsecret keys for message authentication. Instead of calculating shared secrets and computing secret keys,\nQKD keys could be used to protect integrity.\n4.3 Transport layer security (TLS) version 1.2\nThe Transport Layer Security (TLS) protocol, earlier versions of which were called the Secure Sockets\nLayer (SSL) protocol, establishes a protected tunnel between a client and server for transmission of\napplication data. The handshake sub-protocol is used to perform server-to-client and optional client-to-\nserver authentication, and to establish shared secret keys. Shared secrets are subsequently used in the\nrecord layer sub-protocol to encrypt and authenticate application data.\nTLS is used to secure a variety of applications, including web traffic (the HTTP protocol), file transfer\n(FTP), and mail transport (SMTP). The design of TLS is largely independent of cryptographic algorithms,\nand allows for parties to negotiate ciphersuites (combinations of cryptographic algorithms to use). As of\nTLSv1.2, all cryptographic components (public key authentication, key exchange, hash functions, bulk\nencryption) can be negotiated, although generally all must be negotiated at once in a single ciphersuite\nrather than independently.\nCertain ciphersuite selections like Ephemeral Diffie-Hellman allow for perfect forward secrecy.\n4.3.1 Analysis of current TLS ciphersuites\nThe handshake sub-protocol is used to perform authentication and establish shared secret keys. In\nalmost all cases, these operations involve public key operations.\nCurrently, the majority of servers are authenticated using X.509 certificates containing RSA public keys,\nand thus cannot be considered quantum safe.\nPublic key operations are also used to establish shared secret keys, which are then used for encryption\nin the record layer sub-protocol. There are two main types of key exchange used in the TLS handshake\nsub-protocol:\n1. RSA key transport: The client picks a random secret key, encrypts it using the server's RSA public\nkey, and sends the ciphertext to the server, who decrypts the secret key. Notably, this scheme\ndoes not offer perfect forward secrecy, meaning compromise of the server's long-term key leads\nto the immediate compromise of all sessions, past and future, established with that key.\nQuantum Safe Cryptography and Security 32\n2. Ephemeral Diffie–Hellman key agreement: The client and server generate ephemeral Diffie–\nHellman public keys, which they exchange and use to generate a shared secret key. Their\nephemeral Diffie–Hellman public keys are authenticated using digital signatures based on\ncertificates. This scheme does offer perfect forward secrecy, meaning compromise of the\nserver's long-term key does not help in computing the shared secret session keys. TLS includes\nciphersuites utilizing both traditional Diffie-Hellman and Elliptic Curve Diffie-Hellman. Neither\nvariant is quantum-safe.\nThe remaining operations in the TLS protocol involve symmetric primitives, such as hash functions,\nmessage authentication codes, and block or stream ciphers. In general, quantum computers have less of\nan effect on such primitives: Shor's algorithm does not apply, so exponential speedups are not expected.\nGrover's search algorithm would allow quantum computers a quadratic speedup in brute force search,\nwhich means that the primitives need to double the key length to maintain the same level of security\nagainst a quantum computer.\n4.3.2 Recommendations for quantum-safe TLS\nAny option to make TLS quantum-safe would require a change to the standards. New ciphersuites can\nbe proposed and standardized by a Request for Comments (RFC).\nThe following two-stage approach can be used to introduce quantum-safe cryptography into TLS:\n1. A quantum-safe key exchange mechanism with perfect forward secrecy replaces existing key\nexchange mechanisms. To ease adoption, non-quantum-safe digital signatures, such as RSA, can\ncontinue to be used to provide authentication. Quantum-safe ciphersuites should match the\nsecurity estimates of their symmetric primitives to the security estimates of their public key\nprimitives. As an example, a ciphersuite utilizing a quantum-safe public key algorithm at the\n128-bit security level should use symmetric primitives at the 256-bit level to account for the\nimpact of quantum search attacks.\n2. Quantum-safe digital signatures are deployed in certificates and used for authentication of the\npurely quantum-safe key exchange mechanism introduced in stage 1.\nThe use of a quantum-safe key exchange mechanism with non-quantum-safe digital signatures is\nsuitable in the short term: future quantum computers will still not be able to decrypt the messages\nencrypted using the key from the quantum-safe key exchange mechanism.\nIn the short term, it may also be appropriate to consider a “hybrid” key exchange mechanism, which\nemploys both quantum-safe key exchange and non-quantum-safe exchange (such as elliptic curve\nDiffie–Hellman). A hybrid approach, securely implemented, allows early adopters to have the potential\nof quantum-safe cryptography without abandoning the security offered by existing mechanisms at\npresent, while maintaining with existing regulations such as FIPS.\nThese replacements are currently at the stage of \"university-level\" research. Various academic groups\nhave proposed a variety of key exchange protocols based on quantum-safe primitives\n[FSXY13,SecInn13,Pei14], and early implementation results indicate that performance of quantum-safe\nkey exchange in TLS can be competitive with elliptic curve ciphersuites [SecInn13,BCNS14].\n4.3.3 Technical concerns\nQuantum-safe algorithms with large public keys or signatures may require additional changes to the\nstandard. At present, TLS record layer fragments can be at most 214 B = 16 KB long, though messages\nQuantum Safe Cryptography and Security 33\ncan be split across multiple fragments, certificates can be at most 224 B = 16 MB; these sizes could be\nincreased in a future version of TLS.\n4.3.4 On the use of QKD in TLS\nTLS currently supports ciphersuites where the parties use a pre-shared key (PSK) for encryption, and\nperform key confirmation for authentication [RFC4279, RFC5487]. Some of these PSK ciphersuites use\nsolely symmetric key operations such as AES-256 for encryption and HMAC-SHA384 for message\nintegrity and authentication. This seems a suitable mechanism for incorporating key material\nestablished from a quantum key distribution channel into TLS, as it would allow parties to achieve a high\nlevel of computational security from a relatively short QKD key. An alternative mechanism would have\nto be developed to incorporate QKD keys directly into the TLS standard if information-theoretic security\nwere desired. It would be possible, for instance, to define ciphersuites which make use of a long QKD\nkey for one-time pad for encryption and a short pre-shared key for Wegman-Carter MAC based\nauthentication.\n4.4 S/MIME\nSecure/Multipurpose Internet Mail Extension [RFC2311, RFC2312, RFC2632, RFC2633, RFC2634,\nRFC5751] is a standard for digital signatures and public-key encryption used to securely send email\nmessages. It offers origin authentication non-repudiation, data integrity, and confidentiality through use\nof digital signatures and message encryption. This standard is widely adopted throughout government\nand enterprise. S/MIME, and a similar scheme called OpenPGP, allow email to remain encrypted during\nthe entire path from sender to recipient, meaning that at the email servers of both the sender and\nreceiver, as well as the links between sender, sender's email server, recipient's email server, and\nreceiver, the plaintext cannot be read or modified by an adversary. This contrasts with other protocols\nlike SMTP-over TLS and IMAP/POP3-over-TLS which are used to secure the individual links between\nintermediate mail servers, but do not preserve end-to-end confidentiality and data integrity.\nBy far the strongest alternative to S/MIME for preserving end-to-end security is OpenPGP. They are very\nsimilar at a protocol level, but OpenPGP relies on a Web of Trust, while S/MIME uses Certificate\nAuthorities and Public Key Infrastructure (PKI) to overcome key distribution issues that seriously hinder\nthe usability of OpenPGP. For usability reasons, S/MIME continues to be a preferred choice within large\nenterprise email environments. S/MIME requires recipients to publish a public key signed by a\ncertificate authority. As is usual within a PKI, this allows users with a signed public key to be\nauthenticated and enables secure emails from the first instance of communication.\n4.4.1 Analysis of current algorithms in S/MIME version 3.2\nIn the S/MIME protocol, digital signatures are used for authentication, data integrity guarantees, and\nnon-repudiation of origin. Within version 3.2, a digital signature or certificate is required. Digital\nsignatures within version 3.2 require the use of asymmetric keys of at least 1024 bits for the generation\nand verification of key pairs, using one of the following algorithms: DSA (with SHA-256), RSA (with SHA-\n256), or RSA-PSS (with SHA-256). While the hash algorithms selected are quantum-safe, the use of DSA\nor RSA(-PSS) provides inadequate security in the presence of a quantum computer, and therefore\nrequires replacement in all implementations of S/MIME. Similarly, the allowed public key encryption\nprimitives are based on either RSA, or Diffie-Hellman. Neither of these primitives are quantum-safe.\nContent encryption itself in S/MIME relies upon symmetric ciphers like AES that are believed to be\nquantum-safe. Unfortunately, the aforementioned key establishment algorithms for these symmetric\nQuantum Safe Cryptography and Security 34"
  },
  {
    "input": "What are the main technical challenges and recommendations for making S/MIME and SSH protocols quantum-safe?",
    "summary": "S/MIME and SSH version 2 both rely on cryptographic algorithms that are vulnerable to quantum attacks. S/MIME can be upgraded to use quantum-safe algorithms, but early versions may have backward compatibility issues. SSH requires replacing key exchange and authentication algorithms with quantum-safe ones to maintain security, as current methods like Diffie-Hellman and RSA are not safe in a post-quantum world.",
    "output": "keys – in addition to the algorithms used for digital signatures – are insecure in a post-quantum\nenvironment. It is important to note, however, that S/MIME supports extended key size and encryption\nmethods of the sender's choice, offering the potential for security engineers to upgrade signature and\nkey-establishment algorithms, to ensure respectively, data/origin authentication and integrity, as well as\nmessage security.\n4.4.2 Recommendations for quantum-safe S/MIME\nS/MIME relies on uses of MIME (Multipurpose Internet Mail Extension) wrapped around content\nproduced in Cryptographic Message Syntax (CMS), which is data-protection encapsulation syntax\n[RFC5652]. Consequently, many of its security properties rely on the parameters of CMS. Fortunately,\nCMS offers a variety of customizable parameters, including algorithm selection. This means that the\nprotocol has the potential to transition to quantum-safe cryptography. The SMIME Capabilities attribute\n(which includes algorithms for signatures, content encryption, and key encryption) was designed to be\nflexible and extensible so that other capabilities added later would not break earlier clients. However\nsome very early versions of S/MIME may present backward-compatibility issues. Requirements and\nrecommendations are in the CMS Request for Comments to ensure a basic level of interoperability\nbetween S/MIME implementations. Since some clashes between versions seem unavoidable, it is highly\nrecommended that users be warned of instances when the use of S/MIME relies only upon weak\ncryptography. There currently exists a parameter within S/MIME where an agent can state whether or\nnot to allow the use of weak encryption (currently defined as use of 40 bit keys), which overrides all\nspecific algorithm preferences of that user. It would be valuable to update this parameter to define\n'weak' as any cryptographic primitive that is not quantum-safe at any point in the protocol.\n4.4.3 Technical concerns\nThe primary technical challenge of this implementation will be the backward compatibility with clients\nof versions 3.1 or earlier that may use cryptographic primitives that are not quantum safe. For example,\nsome implementations of S/MIME from earlier versions may only include RSA. This may instead present\ndifficulty to one party trying to communicate securely with another party, who might then be forced to\ncommunicate using weak encryption. Furthermore, some implementations based on S/MIME version\n3.1 or earlier may lack cryptographic agility due to reduced available key sizes, and therefore security\narchitects must be mindful of backwards compatibility with respect to key length when selecting\nquantum-safe cryptographic primitives to substitute into existing frameworks.\n4.5 Secure shell (SSH) version 2\nSSH (Secure Shell) version 2 [RFC4250, RFC4251, RFC4252, RFC4253, RFC4254] is a cryptographic\nnetwork protocol used to encrypt information sent over an insecure network such as the Internet. In\nessence, it relies on a client-server model to allow a user on one computer to remotely log-in, send\ncommands, and transfer files on another computer, without compromise of data integrity or\nconfidentiality. It has a wide range of uses, with some implementations of SSH (namely OpenSSH)\nenabling users to create fully encrypted Virtual Private Networks (VPNs). This allows users to treat a\npublic network such as the Internet as if it were a more secure, private network.\nSecure Shell (SSH) is a secure remote-login protocol. It has pervasive and diverse applications, and can\nbe used for a variety of purposes, including the construction of cost-effective secure Wide Local Area\nNetworks (WLAN), secure connectivity for cloud-based services, and essentially any other enterprise\nprocess that requires secure access to a server from a remote client.\nQuantum Safe Cryptography and Security 35\n4.5.1 Analysis of current algorithms\nThe SSH protocol involves three major sub-protocols [RFC4251]: the Transport Layer Protocol, the User\nAuthentication Protocol, and the Connection Protocol. Each uses its own set of algorithms to perform\nspecific functions at different network layers.\nThe Transport Layer Protocol [RFC4253] creates the secure channel used for server (host)\nauthentication, and ensures the confidentiality and integrity of data sent over an insecure network. It\nruns over top of TCP/IP. The generation of a unique session ID occurs within this protocol. Within this\nprotocol, several parameters are negotiated between server and client, including symmetric encryption\nalgorithms, message authentication algorithms, and hash algorithms – all of which are quantum-safe.\nHowever, much like S/MIME, the methods of key exchange and public key authentication rely upon\nalgorithms that are insecure in the presence of quantum adversaries. Specifically, the current\nstandardized key exchange algorithms each rely on some form of the Diffie-Hellman protocol, and the\nstandardized authentication algorithms are all based on RSA, DSA, or ECDSA. None of these primitives\nare quantum-safe.\nThe User Authentication Protocol [RFC4252] authenticates the client to the server, using the Transport\nLayer Protocol's session ID. Its security/integrity properties are dependent upon those defined within\nthe initial algorithm negotiation of the Transport Layer Protocol.\nSimilarly, the Connection Protocol [RFC4254] takes the encrypted tunnel generated by the Transport\nLayer protocol and multiplexes it into several channels for actions such as shell/login access, proxy\nforwarding of external protocols and TCP/IP or X11 connections through the secure tunnel, and\naccessing the server host's secure subsystems. It runs on top of both the Transport Layer Protocol and\nthe User Authentication Protocol. Its security/integrity properties are dependent upon those defined\nwithin the initial algorithm negotiation of the Transport Layer Protocol.\n4.5.2 Recommendations for quantum-safe SSH\nThe SSH protocol was specified with a high level of cryptographic agility and allows servers and clients to\nnegotiate the algorithms used for encryption, data integrity, authentication and key exchange. The\naddition of quantum-safe controls will not require significant changes to the base SSH protocol. It is\nintegral that all versions of SSH include quantum-safe algorithms for all parameters in the Transport\nLayer Protocol, since the SSH Transport Layer Protocol looks for the first algorithm that both server and\nclient will support for key exchange. Should one of these parties fail to have a quantum-safe algorithm\navailable, the tunnel becomes insecure for both parties – not only at the Transport level, but also for the\ndependent User Authentication and Connection layers. The following recommendations are suggested\nat the level of the Transport Layer Protocol:\n Use of the Diffie-Hellman (DH) key exchange must be replaced by use of a quantum-safe\nalgorithm that offers fast key-pair generation and perfect forward secrecy.\n Use of the Digital Signature Algorithm (DSA), the Elliptic Curve Digital Signature Algorithm (ECDSA)\nand the RSA Signature Algorithm (RSA-SSA) for host authentication must be replaced by use of\nquantum-safe authentication mechanisms such as quantum-safe digital signatures or message\nauthentication codes based on pre-shared symmetric keys.\n It may be in the best interest of users for standards organizations to solicit and distribute an\nupdated specification for SSH that adds quantum-safe algorithms to the list “required” algorithms\nwithin each of the protocol-specification documents for SSH.\nQuantum Safe Cryptography and Security 36\n4.5.3 Technical concerns for SSH\nThere also exists a possibility, even with a quantum-safe suite of algorithms in the SSH protocol, that via\nSSH proxy forwarding of other protocols (SMTP, HTTP, etc) may compromise machines when versions of\nthese external protocols that are not quantum-safe are used. The security properties of SSH are not\ntransitive to the security properties of proxied protocols, which illustrate the importance of\ncomprehensive and cohesive adoption of quantum-safe cryptography. Not only can weak cryptography\ncompromise an otherwise secure network security protocol, but additionally, compromised protocols\nthemselves can further jeopardize machines within the network when integrated with other protocols\nthat are quantum-resistant.\n4.5.4 On the use of QKD in the context of SSH\nQuantum Key Distribution appears to be a viable method for secret key generation within the SSH\nprotocol. The use of QKD would bypass issues related to the presently unsafe methods of secret key\nexchange, and could potentially replace the current key-establishment methods for symmetric (AES)\nkeys.\nThe major concern is the rate of key generation for QKD, which depends largely on the distance\ntravelled – regardless of whether the implementation occurs through optical fiber or free space. Since\ncurrent SSH security parameters suggest that keys should be changed after every gigabyte of\ntransmitted data [RFC4253], the specific key rate of a specific implementation of QKD will likely\ndetermine whether key material can be generated sufficiently quickly for real-time use.\nQuantum Safe Cryptography and Security 37"
  },
  {
    "input": "What are the key areas of application and use cases that are particularly vulnerable to quantum attacks and why is quantum-safe cryptography important in these areas?",
    "summary": "The text discusses the potential threats posed by quantum computing to current cryptographic systems, highlighting vulnerabilities in endpoint devices, network infrastructure, cloud storage, big data, and SCADA systems. It emphasizes the need for transitioning to quantum-safe cryptography to prevent data breaches and ensure long-term security. The text also outlines challenges in adopting quantum-safe solutions, including the need for standardization, and suggests strategies for managing transition costs and promoting quantum-safe technologies in various industries.",
    "output": "5 Fields of Application and Use Cases\nThe impending realization of scalable quantum computing will have damaging and pervasive effects for\ngovernments, enterprises, and individuals, who are caught relying on products and protocols that are\nnot using quantum-safe cryptography. The following section describes some fields that may be\nparticularly vulnerable to quantum attacks.\nBroadly speaking, there are two states of data under which it is vulnerable: in transmission, and at rest.\nEach of these presents its own needs and challenges for encryption. For instance, encrypting data while\nit is in transit over the Internet, point-to-point leased lines, or even an internal network has a different\nset of considerations than encrypting data at rest, which may include protecting large cloud databases,\nPCs, smartphones and other end-user devices.\nThe following section broadly highlights some use cases where technological infrastructures appear\nparticularly vulnerable to an adversary with a quantum computer. Subsequently, some major industries\nare highlighted where these use cases are likely to arise.\n5.1 Use Cases\n5.1.1 Encryption and authentication of endpoint devices\nEndpoint devices include any piece of hardware that a user utilizes to interact with a distributed\ncomputing system or network. This can include canonical examples such as personal computers and\nmobile phones, as well as kiosks/terminals in banks, stores, and airports, as well as any kind of\nembedded technology connected to a broader network. Encryption of endpoint devices refers to the\npractice of making the contents of the device unreadable to unauthorized parties through the use of\ncryptography and security protocols. This is an important practice to prevent unauthorized data transfer\nand access, to ensure that only approved devices are allowed access to the system, and to deal\nappropriately with rogue or compromised devices that threaten system security through intrusions such\nas malware, key loggers, or viruses.\nQuantum computing presents several potential threats to the security of endpoint devices. Even if an\nendpoint device's contents are completely encrypted through the use of full-disk encryption, they may\nstill be vulnerable to decryption by an adversary employing quantum algorithms, depending on the\nalgorithms used for the initial encryption of the device. Software implementations of disk encryption\nrely on symmetric key cryptography, which is generally considered quantum safe. However, the\nvulnerability in this design is that key generation relies on existing asymmetric key signature and key\nestablishment protocols such as DSA (for AES), RSA (for Triple-DES) or ECDSA, none of which are\nquantum-safe. This means that it is conceivable that even fully encrypted endpoint devices are\nvulnerable to adversarial decryption. This results in a number of potential vulnerabilities:\n If an adversary were able to hijack an authenticated endpoint device, they will have access to the\nsame ports, devices, networks, and classes of information as the intended enterprise user. This\ncould conceivably enable certificate hijacking and the installation or execution of unauthorized\nrootkits or other malware.\n An adversary on a compromised device may make use of vulnerabilities in secure remote access\nprotocols (such as implementations of SSH relying upon quantum-unsafe algorithms) to use these\nQuantum Safe Cryptography and Security 38\ndevices to additionally forge undesirable tunnels between devices to create further nodes of\ndamage within an enterprise network.\n Adversaries with illicit access to a central server or network node (through a malicious SSH tunnel\nor comparable access point) may be able to compromise an entire network, including:\no Taking control of read/write/copy/file-transfer access and the types of files, devices, and\nremovable media allowed to access the network by specific users or endpoint devices.\no Undoing control parameters (such as location, user, or device authentication) used to\npreviously prevent endpoint devices from ''bridging'' from an enterprise Local Area\nNetwork (LAN) to Wi-Fi, enabling easier extraction of sensitive content from the\nenterprise network.\n False indications of compliance with network access control parameters, whereby an adversarial-\ncontrolled endpoint device may fraudulently indicate that it has the required anti-virus and\npatches, and then intentionally or unintentionally bring malware onto the enterprise network.\nIn addition to the threats to information security, compromised endpoint devices may also result in legal\npenalty in jurisdictions in which occurrences of breached personal information due to inadequate\nencryption must be disclosed by law.\n5.1.2 Network infrastructure encryption\nIn addition to endpoint devices and storage servers, data must be secured throughout its' entire transfer\nthrough a network from one location to another. Network infrastructure encryption refers to the idea\nthat as data moves throughout a network, the reliant network infrastructure must use cryptography in a\nway that is impervious to an adversary's attempt to undermine data integrity, confidentiality, or\nauthenticity. Areas of concern include the Internet backbone over which much of the principal internet\ntraffic travels between the Internet's many networks, as well as the encryption between linked\nenterprise data centers, and the encryption used to secure wide-area networks (WAN).\nFiber optic cables can easily be tapped and data can be copied as a form of physical attack on the\nnetwork infrastructure. These cables can either be part of the Internet backbone itself, or else used\ninternally for enterprise network objectives such as communications between a company's cloud servers\nor their data centres [EFF14]. Consequently, it is clear that even without the present threat of a\nquantum computer, unencrypted data (at the very least) is vulnerable to adversarial observation and\nmanipulation. At present, not all data transmitted over the Internet is encrypted, which leaves it open to\nattack. However, the deployment of quantum algorithms means that encrypted information may also be\ncompromised, depending on the method of encryption.\nOne of the most common methods used to encrypt web browser data traffic over networks is the\nHypertext Transfer Protocol Secure (HTTPS), which layers regular HTTP traffic on top of TLS/SSL. This\noffers authentication of client and server in addition to encryption. Unfortunately, present\nimplementations of TLS/SSL rely upon RSA public keys for server authentication and Diffie-Hellman for\nkey agreement, both of which are susceptible to attack by Shor's algorithm. Consequently, a quantum\ncomputer could decrypt all traffic sent between the server and client side web browser.\nOrganizations protect their network by encryption communication either at OSI Layer 2 (Ethernet) or\nOSI Layer 3 (IP) implemented in dedicated encryption hardware or networking gear such as a switch or\nrouter. There are currently no widely used standardized protocols for layer 2 encryption and each\nQuantum Safe Cryptography and Security 39\nvendor develops its own cryptographic implementation. Most vendors rely on RSA or Diffie-Hellman for\nkey agreement, making the solution vulnerable to an adversary equipped with a quantum computer.\nHowever, there are quantum safe layer 2 encryption solutions, commercially available today, consisting\nof a quantum key distribution system providing keys to layer 2 encryption devices. As for layer 3\nencryption, it is typically based on IPsec that relies on the IKE protocol for key establishment. IKE is not\nconsidered quantum-safe, implying that communication exchanged over these networks can be\ndecrypted using a quantum computer.\nIn general, should network infrastructure be encrypted using algorithms that are not quantum-safe, all\ndata that is transmitted over that network is vulnerable to immediate or later decryption by an\nadversary in possession of a quantum computer. Importantly, it should be noted that an adversary could\nstore this encrypted information for years into the future, when a quantum computer that would enable\nthem to read it.\n5.1.3 Cloud Storage and computing\nCloud storage is a high-level term describing computing as a service, rather than a product. This allows\nusers to utilize centralized, shared resources (both hardware and software) over a network. Cloud\nservices have become ubiquitous due to the rise of high-capacity networks, the decreased cost of\ncomputers and data storage devices, and trends toward hardware virtualization as well as\ninfrastructure-, platform-, and software-as-a-service models. Cloud computing has numerous benefits,\nincluding accessibility from multiple devices/locations, a reduction in a business' need for in-house IT\nsolutions, and an optimized use of computing power distributed across many users and businesses.\nHowever, a major issue with the use of cloud computing is that since these services are shared by many\nusers and often not offered over a private network – but rather to large organizations on an opt-in basis,\nencryption is essential.\nOptions for quantum-safe cloud computing are subsumed by quantum-safe server, endpoint, and\nnetwork infrastructure security. Key exchange parameters for protocols such as HTTPS should no longer\nmake use of RSA, DSA, or ECDSA. Fortunately, cloud computing offers the distinct advantage of having a\ncentralized IT security management system across many applications and businesses, reducing security\noverhead for individual enterprises and consequently offering easier transition to quantum-safe\nprotocols. This transition is essential in particular due to both the fact that cloud storage is – by\ndefinition – remotely accessed, requiring data to traverse a public network between the user and the\ncloud. The need for strong encryption is further amplified by the multitude of distinct and untrusted\nusers sharing the infrastructure.\n5.1.4 Big data, data mining and machine learning\nBig Data describes any practice of collecting, searching, analyzing and sharing any data set so large that\nthese efforts are beyond the scope of traditional data management tools. Increasingly powerful\ncomputer hardware and efficient software have enabled the use of these large data sets to find\nimportant patterns in fields as diverse as physics, genomics, environmental science, life sciences\nresearch, criminology, and business informatics. Applying the techniques of data mining, it is possible to\nextract valuable information from these data sets and to build networks of association. This offers\nenterprises and governments power to discover important patterns despite the once-obscuring scope\nand level of detail of these databases. There even exist techniques that enable researchers to see these\npatterns without revealing to themselves identifying information about the individual data points\n[VBF04]. It is important to encrypt and secure these systems because should they be left exposed, the\nQuantum Safe Cryptography and Security 40\nsame power offered to these organizations to identify individual users can also be obtained by hostile\nadversaries.\nThe vulnerabilities to big data (and security architecture recommendations) in the presence of a\nquantum computer are generally those associated with big data's supporting technologies – particularly,\ndata/cloud storage and data transmission through a network.\nQuantum-safe solutions for securing big data are essential because large data sets offer unprecedented\ninsights into the details of their subjects – so intricate and detailed that they cannot even be analyzed by\nconventional means. Consequently, all of this knowledge leads to a great deal of power in the hands of\nan adversary. Organizations must ensure their storage/disk and communication encryption systems\ncomply with quantum safe cryptographic primitives.\n5.1.5 SCADA (Supervisory Control and Data Acquisition) systems\nSCADA systems are a type of industrial control system used for remote monitoring and control of\nindustrial processes. These can be anything from resource extraction and distribution (oil, natural gas,\nmining), to national utilities/infrastructures (electric grids, railway and traffic systems control, water\ntreatment and distribution systems), to manufacturing, to facility processes (HVAC, energy\nconsumption, etc.). Failure to encrypt and secure SCADA systems offers an adversary the opportunity of\nthe remote take-over of factories, oil pipes, electrical grids, airports, mining operations, and the power\nsupply. The potential for destruction in these cases is self-evident and beyond quantification.\nHistorically, the security of SCADA systems has been poorly researched, due in part to the initially\nproprietary nature of these systems. However, in the light of newer, networked methods of industrial\ncontrol, the “security by obscurity” approach no longer will suffice. In the years following the damage by\nthe Stuxnet worm, penetration testing has revealed an overall bleak picture of the security of these\nsystems. While some elements of some systems in the post-Stuxnet era are encrypted using Advanced\nEncryption System (AES) – which is quantum-safe – it is important to remember that any weak link in\nthe security model of these systems is vulnerable to attack by an adversary with a quantum computer.\nFurther work must be done to identify vulnerable links in the information flow through SCADA systems,\nand to bring the majority of systems – which have poor encryption or even none at all – up to date\nthrough the use of AES as recommended in numerous standards [IEEEP1711]. These symmetric keys\nmust be established using a quantum-safe key exchange algorithm.\nThe projected future trend of use of satellites for large distributed control systems and the internet of\nthings for intelligent remote monitoring emphasizes a particular need for designers and administrators\nof SCADA systems to migrate toward quantum-safe security, in an increasingly connected and\nvulnerable world.\n5.2 Fields of application\n5.2.1 Medicine and health\nMedicine and health services in industrialized countries share core values of patient confidentiality,\nwhich is increasingly important giving the rising ubiquity of regional and national public health\ninformation networks, as well as multi-clinic information systems for centralized patient records. Many\ncountries impose legal liability for clinics whose patient data is compromised due to inadequate security\nmeasures.\nQuantum Safe Cryptography and Security 41\nParticular vulnerabilities for health-care providers resulting from quantum computers include, but are\nnot limited to:\n Data breaches of patient information through poorly encrypted staff endpoint devices, or due to\npoorly encrypted data links between health care centres within a regional network.\n Unauthorized access to individual patient data points in a research environment through use of\ndata mining practices that are not privacy preserving in a post-quantum world.\n Fraudulent acquisition of patient files through improperly authenticated channels.\n The releasing of vulnerable scientific information that may be stored on clinic computers (such as\ncertain genetic patterns) that would also undermine biometric security identifiers.\nProtecting information related to medicine and healthcare using quantum-safe solutions is particularly\nimportant, as this type of information typically requires long-term confidentiality, at least equal to the\nlife expectancy of the patient and possibly extending even beyond in the case of genetic data. These\nrequirements are often integrated in legislation. German law for example stipulates that medical data\nmust remain confidential even after the death of a patient.\n5.2.2 Financial Services\nBanks and financial services rely heavily on information technology in their operations, and as a\nconsequence are extensive users of cryptography to guarantee authenticity, integrity and confidentiality\nof the information they process. Cryptography within this industry is used in the following examples:\n Intra-organizational communications sent within the corporate network or between data centers\nfor information transfer, backup, and disaster recovery need to be protected. Typically, these\nsystems are implemented as hardware or software AES encryption, and are vulnerable in the\nrespect that they use a public key system of key distribution.\n Interbank financial messaging across the SWIFT network is used to transfer payment orders,\nallowing for standardized, encrypted transactions between different banks around the world.\nSWIFT operates a Public Key Infrastructure to digitally sign and encrypt messages sent over\nSWIFTNet. Crucially, these messages require a migration to quantum-safe forms of digital\nsignatures and encryption in order to remain secure.\n Credit card information is protected according to the Payment Card Industry Data Security\nStandard (PCIDSS). Cardholder data is typically encrypted for transmission for example at a point\nof sale prior to transmission to the bank. This encryption utilizes symmetric key cryptography,\nhowever, the keys are exchanged using public key cryptosystems that require a quantum-safe\nalternative.\n Stored data such as tapes and hard disks are encrypted by organizations for secure offsite\narchiving. These solutions are typically based on hardware AES encryption.\n Online banking relies upon the TLS protocol to secure web traffic, and consequently is vulnerable\nto post-quantum issues with server authentication using X.509 certificates and RSA public keys, as\nwell as session key establishment.\nQuantum computing creates numerous, high impact challenges for organizations in this sector. They are\nindeed faced both with the challenge of long-term security for certain types of information (e.g.\ncustomer data) and of extremely high value electronic transactions (e.g. SWIFT messaging). Moreover, in\nQuantum Safe Cryptography and Security 42\nthe event of a threat arising from quantum computing, the sector will have a high chance of being\ntargeted first because of the financial benefits that can be directly derived from cryptographic\nvulnerabilities.\nThe implementation details for the financial services industry, in particular, require consideration of\nproblem specific requirements for timing and information payload. Due to criticality of the speed at\nwhich many of these transactions must be completed, solutions providers are advised to carefully\nevaluate quantum safe schemes for key generation, encryption, and decryption speeds.\n5.2.3 Mobile Applications\nMobile applications may or may not be owned and controlled by a Mobile Network Operator (MNO),\nthe availability of these applications and services are often a deciding factor for users as to which\nhandset they will purchase and to which mobile network they will subscribe.\n Ecosystem Identification, a single sign on feature for a brand-name company that offers an\numbrella of services, often their brand id is attached to account information that includes the\nuser’s credit card and can be used for digital purchases at the brand’s on line store. Digital\npurchases can include movies, games or apps and transactions will be protected by some end-to-\nend security mechanism such as TLS and employing a userid and password.\n Near Field Communication (NFC), used for mobile contactless payment, mobile ticketing and\nother applications involving a Secure Element that is embedded in the handset using a discrete\nchip, a special uSIM or uSD card, or a handset that supports Trustzone/Trusted Execution\nEnvironment (TEE). The secure element is like a digital locker for cryptographic keys, where an\nMNO or 3rd party may setup their own Security Domain in order to host an application such as a\nmobile payment based credit card, access control or ticketing.\n Digital Rights Management (DRM), used to protect movies and television shows which allow\ncontent producers to sell or rent premium video content to end users through an online store.\nContent is protected by Microsoft PlayReady, Google Widevine or Adobe Access. These\ntechnologies separately encrypt the content with a title key, and the title key is distributed to\nusers via license file that is purchased from an online store.\n Enterprise Mobility Management, software solutions used by enterprises to manage and secure\ncorporate data on employees’ mobile devices. These types of solutions will either install a work\ncontainer on a mobile device, or assume complete control of the mobile device so that it can be\nremotely managed, located or wiped of its data. Software applications can also be remotely\ninstalled; typically these are digitally signed to prevent tampering.\n Cloud Applications/Services, are popular with companies who subscribe to an application for all\nof their employees with a 3rd party provider who then makes the application broadly available via\na web browser and mobile device applications. A very common cloud based application for\ncorporations is a Customer Relationship Management (CRM) service used for sales employees.\nDepending on cost, and sensitivity of the data, companies are moving many traditional on-\npremise corporate software services into the cloud by transitioning from in house built and\nsupported applications, to a 3rd party cloud based application provider. Confidentiality of\ncorporate data is a large component of these types of software sales; often data is protected in\ntransit using TLS/SSL.\nQuantum Safe Cryptography and Security 43\n5.2.4 Mobile Network Operator Wholesale\n Internet of Things - M2M, sensors are used everywhere to remotely monitor assets and\ncommunicate back to their owners. Electrical meters, vending machines, shipping containers,\nmedical monitoring equipment are some of the examples of embedded devices that require\nremote connectivity that either uses a proprietary dedicated wireless network or purchases\nwireless cellular bandwidth from an MNO as a wholesale application. Many commercial\napplications have regulated security requirements, often with unique and constrained\ncryptographic key management needs.\n Connected Vehicles, telematics and emerging vehicle-to-vehicle communications used for fleet\nlogistics and public safety applications. Many of these applications rely on confidential and\nauthentic communications.\nQuantum Safe Cryptography and Security 44\n6 Economics of quantum safe security\n6.1 Benefits of quantum safe security\nCryptography has a very rich and entertaining history that weaves stories of clandestine communication\nand cat-and-mouse detective work. For the past century alone, some of the historical tales include: The\nBlack Chamber, a forerunner to the American National Security Agency which decoded foreign\ndiplomatic codes; the work performed by British GCHQ to solve World War II era ciphers, leading to\nbreakthroughs in computation and machine computing; the advent of wide scale commercial use of\ncryptography starting in the 1970’s with the invention of DES through research performed at IBM.\nPopular documentaries are broadcast on television that glamorize encryption systems that have come\nand gone over past decades, and when these cryptographic systems fade, they are always replaced with\nstronger, faster algorithms and technologies because the global research community is forever\nredefining the state of the art.\nIf history can be used to accurately predict events yet to come, then breaking a cryptographic cipher can\nhave catastrophic repercussions for anyone using a cipher who is ignorant of its compromise. And great\nadvantages are bestowed upon anyone who takes advantage of their adversary’s ignorance.\nIn most cases, when a cipher is secretly broken by an adversary it is unfair for the historical record to\ncriticize past choices to continue using the cipher, because history has the benefit of hindsight. After all,\nwhat indications were visible at the time to suggest to a reasonable person that a cipher had been\nbroken and that an adversary was profitably taking advantage? But in the case of today’s state of\ncommunications, security practitioners are giving early warning of the wide scale security collapse of\ncommunications infrastructure due to heavy reliance on Diffie-Hellman, RSA and ECC. These\ncryptographic systems are increasingly vulnerable to quantum attacks as quantum computing matures\nand the state of the art in computation and algorithm design is redefined.\nQuantum Safe Security is a concept that is less about moving from an old technology to something that\nis a new. It is more about promoting the idea that communication standards are inflexible and often\nmake a naive assumption that current ciphers will remain good enough until replaced by something\nsuperior. This assumption is true sometimes, however, cryptography as a field of research is strange\nand unique in that old ciphers get weaker simply because new researchers get smarter.\nIntroducing Quantum safe security schemes and cryptographic agility into protocols promotes rigour\nand quality amongst the security engineering profession. It is hard to design a technology that assumes\nits underlying security mechanisms will erode over time. But introducing quantum safety into systems\nprovides an exit strategy from RSA and ECC.\nRegardless of the critics of quantum computing, history can be used to predict the future of a\ncryptographic algorithm, and RSA and ECC will eventually be broken by either quantum attacks or new\nmathematical techniques. And with the benefit of hindsight, future critics will certainly conclude, “they\nhad adequate warning, how could they possibly have let history repeat itself?”\n6.2 Challenges for quantum safe security\nMany of the challenges for the adoption of quantum safe security are rooted in common best practices\nwithin the security industry. Very early in their careers security practitioners are taught to avoid new\ncryptographic algorithms that have not received years of public scrutiny, to not design their own\nQuantum Safe Cryptography and Security 45\nsecurity protocols, and rely only on well-established security standards. These security tenants are still\nsound and very relevant in a world with quantum computing but the industry needs to recognize the\namount of lead-time required to make systemic changes to existing security products and infrastructure\nbecause of the pragmatic security mind-set. These best security practices that routinely block and\nprotect against bad or questionable security schemes also slow the adoption of changes meant to\nprotect against never-before-seen attacks. Some of the main barriers in security culture that need to be\nrecognized and addressed before quantum safety will be widely adopted:\n Confidence in Algorithms. There are many well-studied public key based cryptographic algorithm\noptions that could be used as a substitute for RSA or ECC, however, many of these substitutes do\nnot have the benefit of wide spread practical use.\n Rigidity of Security Protocols. Quantum safe ciphers may not fit into an established protocol\nbecause of historical protocol design assumptions, key size choices and tolerance for message\nexpansion. Earlier sections in this whitepaper give examples of common security protocols that\ndemonstrate the varying degree to which quantum safe cryptography can be used effectively.\nMany protocols were not designed with cryptographic agility in mind, and may not easily\naccommodate a change of cipher.\n Perception of non-urgency. An exact date for the arrival of general purpose quantum computing\ncannot be given, however, global interest is growing and steady progress is being made. As\nquantum computing matures, computer security weakens. Some businesses require their\nsecurity to have medium longevity in the sense that confidential information that is worth\nprotecting now, will also remain sensitive and should be kept private a year or two in the future.\nOther businesses require their security to have greater longevity, keeping information private for\ndecades. Quantum safety is “not urgent” only for those with short term security needs but any\nbusiness that requires its secrets to remain secret will need to consider their quantum safe\ntransition strategy now. A quantum attack is just as effective at divulging all past\ncommunications, i.e. encrypted military information residing on physical storage medium.\n6.3 Risk management: cryptography or insurance premiums\nWhile cryptography is the art of writing secret messages, security is an art form as well, with a primary\nfocus of managing risk. What things are worth protecting? If something were to happen to these\nthings, what are the likely consequences and how can the potential damage be limited?\nSecurity uses cryptography as a fundamental building block. Consider transferring money from one\nbank account to another, the account holder may write a cheque and sign it with their personal\nsignature, or they may initiate an electronic money transfer where two banks electronically\ncommunicate using cryptography and digital signatures. In both cases, the bank relies on some type of a\nsignature to authorize the money transfer, either an ink signature or a digital one. But signatures alone\nare not the only safeguard at work protecting the financial system, the risk of banking fraud is managed\ncarefully with many more checks and balances, above and beyond that of simply requiring an\nauthorizing signature. After these checks and balances are in place, any residual risk is then either\naccepted as a cost of doing business or it is transferred to someone else using insurance.\nThis banking example is not an attempt to marginalize the importance of cryptography; instead it is\ncritical to point out that the use of cryptography in day-to-day life is deceivingly innocuous and\ntremendously pervasive. How important is a digital signature really? Cryptography is a tool and a\nfoundational building block that is used by security practitioners everywhere to protect anything that\nQuantum Safe Cryptography and Security 46\nrelies on electronic communication. It looks like a small thing to have to worry about, but in its absence,\nlarger sweeping consequences emerge.\nWhat would happen if cryptography stopped working? One side effect would be a dramatic rise in\nbanking fees and insurance premiums. There may even be a rise in the creation of economic substitutes\nfor the banking system itself. This has occurred in recent times in countries where the population lost\ntrust in banks and preferred to convert funds into precious metals stored outside of the banking system.\nRisk is managed in a multitude of ways. Preventative steps can be taken that reduce risk, for instance, in\nthe case of a digital signature on a money transfer, safeguards are put in place to reduce the chance of\nbank fraud. If these automatic and invisible safeguards were not in place, banks would still operate and\nmoney would still change hands, but it would be a more costly proposition because of higher rates of\nbank fraud, the cost of which would be passed onto the consumer in the form of higher transaction fees.\nAnother example can be found in the business of comprehensive auto insurance. Insurance premium\nrates are quoted based on a number of factors; including rates of theft based on make and model years.\nEngine ignition inhibitors use cryptography by embedding special electronics in the ignition key to\nreduce rates of theft. This in turn keeps insurance premiums low because the particular car model is\nless likely to be stolen. Were these technologies suddenly to stop working, automobiles would still be\ndriven, but they would be easier to steal and insurance premiums would inevitable rise to compensate.\nThe world will not come to an end without cryptography; it will just be a lot more expensive to live in it.\nQuantum computing threatens modern cryptographic tools and renders them ineffective. It does not\nnegate all of the cryptography tools at society’s disposal, just the tremendously popular ones. The gains\nthat are promised by mature quantum computing are exciting with a great potential for capitalization,\nhowever, the unintended costs to our existing communications infrastructure will be extremely\nexpensive, starting on the very day that quantum computers graduate from the lab to commercially\navailable. Fraud and insurance premium hikes will be noticed first, followed by expensive infrastructure\nupgrades and wasteful disorganized repairs.\nQuantum computing is itself a risk to businesses, the likelihood is growing that quantum computing will\nbecome commercially available at a reasonable cost and the impact is a many fold increase in the\nseverity and occurrences of Cybersecurity events throughout a business. The way to prevent this risk is\nto migrate systems away from cryptography that is vulnerable to quantum attack, while keeping in mind\nthe potential costs of making such a transition. Handled in an organized fashion, and with enough lead-\ntime, technology switching costs are manageable because efforts can focus on hardening today’s\nexisting security safeguards so that they remain effective as quantum computing matures and becomes\nubiquitous.\n6.4 Technology switching costs: gradual vs. immediate\nIt can take years for a standards body to significantly alter a well-established and popular standard. This\nis because it is usually much simpler to create a new standard than it is to retrofit an old one with\nsweeping new features. Nevertheless, without technology standards, the market will still find a solution\nto its problems, often resulting in a number of expensive proprietary methods vying for market\ndominance until an oligopoly of winners emerge who will sacrifice interoperability for market share and\nprice premiums. Historically, widespread adoption of any technology is simply not economically feasible\nin the absence of standardisation.\nQuantum Safe Cryptography and Security 47\nBut what should be standardized? In most cases, the elements that interface with the components and\nsystems are the only ones that require standardisation. The internal workings of a system can often\nremain not standardised, and be treated as an economic differentiator by its respective manufacturer.\nMost commercial communication and security products are built on top of standards based\ncryptography and protocols because designing and building a secure system is tricky in the sense that a\nsecurity system appears to be working, until sometime after it has been successfully exploited.\nSeemingly innocuous errors in design and implementation are routinely demonstrated as the cause of\nsecurity vulnerabilities with seemingly disproportionate and vastly negative commercial ramifications.\nAs a result, security practitioners have been trained that, to prevent these problems from occurring, it is\nimportant to layer security controls on top of each other and to use standards based cryptography and\nprotocols to limit the impact of system flaws and oversights. This approach to layering suggests that in\nsome cases, it may indeed be a better choice to build a new standard than to retrofit an existing one\nwith very many new features that may increase the risk of breaking the existing standard.\nIf standards are updated or new quantum safe variants of standards emerge then security products can\nbe more transparently upgraded over a gradual period of time, e.g. adding a new layer of quantum-\nsafety to an existing system. Gradual and transparent upgrades are much less costly than requiring an\nimmediate or urgent transition, in theory. While it sounds like a rational argument that careful planning\nis superior to having to perform urgent patchwork, in practice, a gradual process of standard evolution\ncan also lead to high technology switching costs if left unchecked and without the benefit of real world\ncommercial experimentation. A balance must be struck between the choices made by standards bodies\nto close exposures to quantum attacks, and the choices of commercial IT organizations with an eye\ntowards justifying solution, deployment and ongoing operation costs given a number of secure\nalternatives. Simply asking standards researchers to change their cryptography, in the absence of\ncommercial viability testing, is a sure way to land in the high technology switching cost trap.\n6.4.1 Avoiding technology switching costs\nTechnology switching costs occur anytime a change is made in a basic technological system such as a\ndata center, core network, wireless sub-system, etc. These costs can often be avoided by reasonable\nplanning before the switch from one technology to another must be made. For many categories of\nsecure information, there may be no need to introduce quantum-safe techniques into systems for some\ntime. For other such categories, action may be required within a relatively short time period.\nThe time to start planning is nevertheless now. Standards groups and product vendors need to see a\ndemand to justify time and effort investments. Demonstrating demand does not necessarily translate to\npaying price premiums often characterized by technology early adopters, but instead, leveraging well\nestablished and commoditized security products and influencing their respective product roadmaps in\nparallel to the associated standard’s evolution. This can be done with some straightforward and low\nbusiness impact changes to existing standard IT practices present in most organizations.\n Review proprietary in house IT systems, for areas where simple cryptographic primitives are used\nwithout the need of more elaborate security protocols. For instance, log files and backups are\noften digitally signed for integrity and authentic audit trail purposes and signatures are stored in a\ndatabase. Extending the database tables to include a second quantum safe signature is low\nimpact to existing systems and has desirable side effects. IT staff gain initial experience and\nexposure to quantum safe technologies, and trusted vendors who provide product support\nQuantum Safe Cryptography and Security 48\nwitness steps being taken towards quantum safety and report to their own internal sales and\nproduct teams.\n Evaluate vendor products with quantum safe features using non-production and staging IT\nenvironments, IT equipment and software is often evaluated and compared to other solutions\nprior to making purchasing decisions. Ensuring that solutions under review contain a mix of\nvendors, some of which offer quantum safe features, will naturally drive competitive positioning\nand competitive evaluation by each vendor’s sales and product teams. Demonstrating a buying\npreference for products with quantum-safe features will ultimately drive quantum safety into\nproducts, however, simply evaluating products with quantum features can also drive adoption,\nregardless of purchasing decisions, because forward thinking vendors will pay close attention to\nthe features being offered by their competitors and whether or not those competitive features\nare being taken seriously by their customers.\n Ask vendors for quantum safe features in procurement templates. Larger organizations use\nprocurement teams for IT capital expenditures and use standard templates for Request for\nInformation (RFI) or Request for Proposal (RFP) documents that are sent to vendors. These\ndocuments will have a checklist of feature related questions ranging from hard requirements to\noptional nice-to-have features that vendors are asked to answer in an effort to help buyers\nevaluate and compare competitive offerings from multiple vendors. A procurement team will\ntypically have a list of standard security questions that are included in RFPs that are sent to IT\nproduct vendors, and this security template is a good place to add questions about quantum safe\nfeatures because it will broadcast a customer’s interest within the sales and marketing teams of\nthe product vendors for quantum safety. Initially, responses from vendors will be “not\nsupported”, but overtime, savvy vendors will respond “roadmap feature” if enough of their\ncustomers and prospects demonstrate an interest in quantum safe features.\n Lobby government organizations to include quantum-safety in legislation and\nrecommendations. Security investments are usually a zero-sum game, where a fixed sum of\nmoney is allocated to different solutions. While this allocation should theoretically be based on\nrisk and impact, larger organizations tend to prioritize based on compliance with legislation and\ngovernment regulations. This implies that risk with dramatic impact but small probability (at least\nin the foreseeable future) is typically not well covered. Government organizations such as NIST in\nthe US or ENISA in the European Union can have a strong impact in ensuring that quantum-safe\nalternatives become available and are seriously considered by users.\nQuantum Safe Cryptography and Security 49\n7 Conclusions and opportunities for further work\nQuantum computing indeed poses a credible threat to conventional information security systems. The\nICT community nevertheless has the ability to analyse and better understand this threat and its\nconsequences for the various categories of information that requires protection. Following are several\nrecommendations and opportunities for further work:\nRecommendations for enterprises:\n It is advisable for ICT organisations to consider how long the information they handle in each\ncategory needs to be secure, and to analyse the consequences of having their various categories\nof secure information made available to the public via future quantum computing attacks.\nGenerally speaking, if the organization has a need to archive certain information or protect the\nprivacy of online transactions for more than 10 years, and currently uses encryption techniques,\nthen these security methods should be upgraded to known quantum safe algorithms and\ntechniques in order to protect long-term privacy.\n Investigate quantum safe products that are currently on the market and prototype within a\nnetwork-staging environment in order to evaluate the production readiness of available\ncommercial solutions and to develop an internal knowledge base amongst IT staff.\n Examine cost saving strategies to reduce technology switching costs, outlined in section 6.4.1\nabove as part of a broad CIO strategy to address and mitigate potentially high switching costs that\nmay be involved when switching to a quantum-safe networking and security environment.\n Enterprises with advanced research teams should document quantum safe use cases for their\nindustry and publish within standards groups such as ETSI who maintain a standards leadership\nrole in quantum safe technologies.\n Further work within the global standards community should include an effort to identify what\nquantum-safe techniques and/or portions of quantum-safe systems require standardisation and\nwhich ones do not.\nRecommendations for security product vendors:\n Perform product and market research to determine if there is a justified opportunity to add\nquantum safe features to product roadmaps.\n Market test quantum safe features and products with existing customer base to determine if\nthere is a business case for offering new quantum safe products or upgrades to an existing install\nbase.\nOpportunities for further research:\n Security researchers should examine security protocols and standards for opportunities to\nupgrade with quantum safe cryptography. Section 4: Security protocols and potential for\nupgrade, examines a small number of prevalent security protocols and identifies areas that could\nQuantum Safe Cryptography and Security 50\nbe improved to accommodate quantum safe techniques. This work should be extended further to\nexamine other security protocols to determine if there is potential for upgrade.\n Cryptographers should submit performance benchmark data to EBACS for algorithms and\ntechniques that are considered quantum safe.\n Cryptographic researchers should study quantum safe primitives and attempt to break their\nsecurity. The security research community will trust only ciphers and techniques that have been\nstudied and scrutinized by the cryptographic and security research community.\n Researchers should interview and discuss quantum safe use cases with security specialists\nworking in particular industries to better describe various niche applications and fields of use for\nquantum safe security controls.\n Quantum Computing Researchers should track the latest progress of quantum computing\nresearch and develop a model for the purpose of forecasting the availability of general purpose\nquantum computing that can break or impact popular cryptographic algorithms and key sizes\nused within today’s information security infrastructure.\nQuantum Safe Cryptography and Security 51"
  },
  {
    "input": "What are the key references and their significance in the context of quantum-safe cryptography and security?",
    "summary": "The text provides references to various academic papers and resources related to quantum cryptography and post-quantum security. It explains that specific references cite a particular version, while non-specific ones refer to the latest available version. Some references are to foundational works in quantum cryptography, such as those by Bennett and Brassard, and others discuss practical implementations and security analyses of quantum key distribution and post-quantum cryptographic schemes.",
    "output": "8 References\nReferences are either specific (identified by date of publication and/or edition number or version\nnumber) or non-specific. For specific references, only the cited version applies. For non-specific\nreferences, the latest version of the referenced document (including any amendments) applies.\nReferenced documents which are not found to be publicly available in the expected location might be\nfound at http://docbox.etsi.org/Reference.\nNOTE: While any hyperlinks included in this clause were valid at the time of publication,\nETSI cannot guarantee their long term validity.\n[A+13] Alaoui, S. M. E. Y., Cayrel, P. L., El Bansarkhani, R., & Hoffmann, G. (2013). Code-based\nidentification and signature schemes in software. In Security Engineering and Intelligence\nInformatics (pp. 122-136). Springer Berlin Heidelberg.\n[BB84] C. H. Bennett, G. Brassard. Quantum cryptography: Public key distribution and coin tossing. In\nProceedings of IEEE International Conference on Computers, Systems, and Signal Processing,\npages 175-179 (1984).\n[BCNS14] J.W. Bos, C. Costello, M. Naehrig, and D. Stebila. Post-quantum key exchange for the TLS\nprotocol from the ring learning with errors problem. Cryptology ePrint Archive, report\n2014/599. http://eprint.iacr.org/2014/599\n[BDH11] Buchmann, Dahmen, and Hülsing, “XMSS - A Practical Forward Secure Signature Scheme\nbased on Minimal Security Assumptions” https://eprint.iacr.org/2011/484.pdf\n[BEN97] C. Bennett, E. Bernstein, G. Brassard, U. Vazirani. Strengths and weaknesses of quantum\ncomputation. SIAM Journal on Computing 26 (5), 1510 (1997).\n[BHL05] M. Ben-Or, M. Horodecki, D. Leung, D. Mayers, J. Oppenheim. The universal composable\nsecurity of quantum key distribution. In Theory of Cryptography, Proceedings of TCC 2005,\n3378, 386-406, (2005).\n[BHM96] Eli Biham, Bruno Huttner, and Tal Mor. Quantum cryptographic network based on quantum\nmemories. Physical Review A, 54(4):2651–2658, 1996.\n[CHA09] T. E. Chapuran et al. Optical networking for quantum key distribution and quantum\ncommunications. New Journal of Physics 11, 105001 (2009).\n[CHE10] T.-Y. Chen et al. Metropolitan all-pass and intercity quantum communication network. Optics\nExpress 18(26), :27217 (2010).\n[CVE10] Cayrel, P.-L., Véron, P., El Yousfi Alaoui, S.M.: A Zero-Knowledge Identification Scheme Based on\nthe q-ary Syndrome Decoding Problem. In: Biryukov, A., Gong, G., Stinson, D.R. (eds.) SAC\n2010. LNCS, vol. 6544, pp. 171–186. Springer, Heidelberg (2011)\n[CW79] J. L. Carter, M. N. Wegman. Universal classes of hash functions. Journal of Computer and System\nSciences, 18 (2), pp. 143-154 (1979).\nQuantum Safe Cryptography and Security 52\n[DDLL13] Lucas et al. , “Lattice Signatures and Bimodal Gaussians”. https://eprint.iacr.org/2013/383.pdf\n[Ding04] J. Ding: A new Variant of the Matsumoto-Imai Cryptosystem through Perturbation. PKC 04,\nLNCS vol. 2947, p.305-318. Springer (2004)\n[DS05] J.Ding, D. Schmidt: Cryptanalysis of HFEv and Internal Perturbation of HFE. PKC 05, LNCS vol.\n3386, p. 288-301. Springer (2005)\n[DPW14] J.Ding, A. Petzoldt, L.-C. Wang: The cubic Simple Matrix Encryption Scheme. PQCrypto 2014,\nLNCS vol. 8772, pp. 76-87. Springer (2014)\n[DDYCC08] J.Ding, V. Dubois, B.Y. Yang, C.-H. O. Chen, C.-M. Cheng: Could SFlash be repaired? Automata,\nLanguages and Programming (ICALP 2008), LNCS vol. 5126, pp. 691 – 701. Springer (2008)\n[DYCCC05] Ding, J., Yang, B.-Y., Chen, C.-H. O., Chen, M.-S, and Cheng, C.M.: New Differential-Algebraic\nAttacks and Reparameterization of Rainbow. In: LNCS 5037, pp.242-257, Springer, Heidelberg\n(2005)\n[EBACS] EBACS web site http://bench.cr.yp.to/ebasc.html\n[EFF14] Electronic Frontier Foundation “Encrypt the Web” Report. https://www.eff.org/encrypt-the-\nweb-report\n[EKE91] A. K. Ekert. Quantum cryptography based on Bell's theorem. Physical Review Letters, 67, 661-\n663, (1991). doi:10.1103/PhysRevLett.67.661.\n[ELS12] D. Elser et al. Network architectures for space-optical quantum cryptography services. ICSOS\n2012 International Conference on Space Optical Systems and Applications, (2012).\n[ERE10] P. Eraerds et al. Quantum key distribution and 1 Gbps data encryption over a single fibre. New\nJournal of Physics 12 063027 (2010).\n[FSXY13] A. Fujioka, K. Suzuki, K. Xagawa, and K. Yoneyama. Practical and post-quantum authenticated\nkey exchange from one-way secure key encapsulation mechanism. In Proc. ASIACCS 13, pages\n83–94. ACM, May 2013.\n[GIS02] N. Gisin, G. Ribordy, W. Tittel, H. Zbinden. Quantum cryptography. Review of Modern Physics 74,\n145–95 (2002).\n[GRO02] F. Grosshans, P. Grangier. Continuous variable quantum cryptography using coherent states.\nPhys. Rev. Lett. 88:057902 (2002).\n[Gro96] Lou Grover. A fast quantum mechanical algorithm for database search. Proceedings, 28th\nAnnual ACM Symposium on the Theory of Computing, 212, 1996.\n[HHHW09] P. Hirschhorn, et al. “Choosing NTRUEncrypt Parameters in Light of Combined\nLattice Reduction and MITM Approaches” Applied Cryptography and Network Security,\nSpringer, LNCS 5536, 2009. https://www.securityinnovation.com/uploads/Crypto/params.pdf\n[HWA03] W. Y. Hwang. Quantum Key Distribution with High Loss: Toward Global Secure\nCommunication. Phys. Rev. Lett. 91, 057901 (2003).\n[IDQ] ID Quantique SA. www.idquantique.com\nQuantum Safe Cryptography and Security 53\n[IM11] Lawrence M. Ioannou and Michele Mosca. A new spin on quantum cryptography: Avoiding\ntrapdoors and embracing public keys. In BoYin Yang, editor, Proc. 4th International Workshop\non PostQuantum Cryptography (PQCrypto) 2011, LNCS, volume 7071, pp. 255–274. Springer,\n2011.\n[Ina02] Hitoshi Inamori. Security of practical timereversed EPR quantum key distribution. Algorithmica,\n34(4):340–365, 2002.\n[LCQ12] H.-K. Lo, M. Curty, B. Qi. Measurement-device-independent quantum key distribution. Phys.\nRev. Lett., 108, 130503 (2012).\n[LAN13] Thomas Länger. Information Security and the Enforcement of Secrecy: The Practical Security of\nQuantum Key Distribution. Ph.D. Thesis University of Lausanne (2013)\n[LIM13] C. W. Lim et al. Device-Independent Quantum Key Distribution with Local Bell Test. Phys. Rev. X\n3, 031006 (2013).\n[LUC13] M. Lucamarini et al. Efficient decoy-state quantum key distribution with quantified security.\nOptics Express 21(21), 24550 (2013).\n[MAU11] U. Maurer, R. Renner. Abstract cryptography. In Proceedings of Innovations in Computer\nScience, ICS 2010, 1-21, (2011).\n[Merkle79] Ralph C. Merkle, Method of providing digital signatures, US Patent 4309569-A, Filed\nSeptember 5, 1979.\n[Mosca13] M. Mosca, “Setting the Scene for the ETSI Quantum-safe Cryptography Workshop”, e-\nproceedings of “1st Quantum-Safe-Crypto Workshop”, Sophia Antipolis, Sep 26-27, 2013.\nhttp://docbox.etsi.org/Workshop/2013/201309_CRYPTO/e-proceedings_Crypto_2013.pdf\n[MSU13] M. Mosca, D. Stebila, B. Ustaoglu, \"Quantum Key Distribution in the Classical Authenticated\nKey Exchange Framework\", In Proceedings of the 5th International Conference on\nPostQuantum Cryptography (PQCrypto 2013), Lecture Notes in Computer Science, Vol. 7932,\npp. 136154, Springer (2013).\n[MTSB12] R. Misoczki, et al. “MDPC-McEliece: New McEliece Variants from Moderate Density Parity-\nCheck Codes” Information Theory Proceedings (ISIT), 2013 IEEE International Symposium on\nInformation Theory. https://eprint.iacr.org/2012/409.pdf\n[NMBB12] R. Niebuhr, et al. “Selecting Parameters for Secure McEliece-based Cryptosystems”\nInformational Journal of Information Security, June 2012, Volume 11, Issue 3, pp 137-147.\nhttps://eprint.iacr.org/2010/271.pdf\n[PAT14] K. A. Patel et al. Quantum key distribution for 10 Gb/s dense wavelength division multiplexing\nnetworks. Applied Physics Letters 104 (5), 051123 (2014).\n[Patarin96] Patarin, J.: Hidden Field equations (HFE) and Isomorphisms of Polynomials (IP). In:\nProceedings of EUROCRYPT’96, pp. 38-48, Springer, Heidelberg (1996)\n[PBB10] Petzoldt , Bulygin, and Buchmann “Selecting Parameters for the Rainbow Signature Scheme”\nhttps://eprint.iacr.org/2010/437.pdf\nQuantum Safe Cryptography and Security 54\n[PBB11] A. Petzoldt, S. Bulygin, J. Buchmann: Linear Recurring Sequences for the UOV Key Generation.\nPKC 2011, LNCS vol. 6571, p. 335-350, Springer, 2011.\n[PDG14] Pöppelmann, Thomas, Léo Ducas, and Tim Güneysu. \"Enhanced Lattice-Based Signatures on\nReconfigurable Hardware.\" to appear inCHES 2014.\n[Pei14] C. Peikert. Lattice cryptography for the Internet. In Proc. 6th International Conference on Post-\nQuantum Cryptography (PQCrypto) 2014, LNCS. Springer, 2014. To appear. Full version\navailable at http://eprint.iacr.org/2014/070.\n[PER09] R. Perlner, D. Cooper. Quantum Resistant Public Key Cryptography: A Survey. Proc. of IDtrust\n2009, pp. 85 (2009).\n[PET09] N. A. Peters et al. Dense wavelength multiplexing of 1550 nm QKD with strong classical channels\nin reconfigurable networking environments. New J. Phys. 11, 045012 (2009).\n[PPS07] Kenneth G. Paterson, Fred Piper, and R¨udiger Schack. Quantum cryptography: A practical\ninformation security perspective. In Marek Zukowski, Sergei Kilin, and Janusz Kowalik, editors,\nProc. NATO Advanced Research Workshop on Quantum Communication and Security, NATO\nScience for Peace and Security Series, Sub-Series D: Information and Communication Security,\nvolume 11. IOS Press, 2007.\n[QBC13] T. Lunghi et al. Experimental Bit Commitment Based on Quantum Communication and Special\nRelativity, Phys. Rev. Lett. 111, 180504 (2013).\n[QLI] QuintessenceLabs Inc. www.quintessencelabs.com\n[QPQ11] Markus Jakobi et al. Practical private database queries based on a quantum-key-distribution\nprotocol. Phys. Rev. A 83, 022301 (2011).\n[SARG04] V. Scarani, A. Acin, G. Ribordy, and N. Gisin. Quantum cryptography protocols robust against\nphoton number splitting attacks for weak laser pulse implementations. Phys. Rev. Lett. 92(5),\n057901 (2004).\n[SAS11] M. Sasaki et al. Field test of quantum key distribution in the Tokyo QKD Network. Optics\nExpress, 19, (11), 10387-10409 (2011). doi: 10.1364/OE.19.010387.\n[SEC09] M. Peev et al. The SECOQC quantum key distribution network in Vienna. New Journal of Physics\n11 075001 (2009).\n[SecInn13] Security Innovation, Inc. ntru-crypto: Open Source NTRU Public Key Cryptography Algorithm\nand Reference Code. Github. https://github.com/NTRUOpenSourceProject/ntru-crypto\n[SHA49] C. Shannon. Communication Theory of Secrecy Systems. Bell System Technical Journal 28 (4),\n656 (1949).\n[SMA07] T. Schmitt-Manderbach et al. Experimental demonstration of free-space decoy-state quantum\nkey distribution over 144 km. Phys. Rev. Lett. 98, 010504 (2007).\n[SSH11] K. Sakumoto, T. Shirai and H. Hiwatari: Public-Key Identification Schemes based on Multivariate\nQuadratic Polynomials. CRYPTO 2011, LNCS vol. 6841, pp. 706 – 723, Springer 2011.\nQuantum Safe Cryptography and Security 55\n[Stern94] Stern, J.: A New Identification Scheme Based on Syndrome Decoding. In: Stinson, D.R. (ed.)\nCRYPTO 1993. LNCS, vol. 773, pp. 13–21. Springer, Heidelberg (1994)\n[STU09] D. Stucki et al. High rate, long-distance quantum key distribution over 250 km of ultra-low loss\nfibres. New Journal of Physics 11, 075003 (2009).\n[STU11] D. Stucki et al. Long-term performance of the SwissQuantum quantum key distribution network\nin a field environment. New Journal of Physics 13, 123001 (2011).\n[VBF04] V. Verykios et al. State-of-the-art in privacy-preserving data mining. ACM SIGMOD Record, 33\n(1), 2004\n[WAL14] N. Walenta et al. A fast and versatile quantum key distribution system with hardware key\ndistillation and wavelength multiplexing. New Journal of Physics 16, 013047 (2014).\n[WAN12] Shuang Wang et al. 2 GHz clock quantum key distribution over 260 km of standard telecom\nfiber. Optics Letters, 37 (6), 1008 (2012).\n[ZZDS14] Jiang Zhang and Zhenfeng Zhang and Jintai Ding and Michael Snook, Authenticated Key\nExchange from Ideal Lattices, http://eprint.iacr.org/2014/589 (2014)\nQuantum Safe Cryptography and Security 56"
  },
  {
    "input": "What are the key definitions and concepts related to information security, cryptography, and quantum-safe cryptography as outlined in this section?",
    "summary": "The text defines key terms in information security and cryptography, including concepts like adversaries, block ciphers, digital certificates, and authentication. It also explains quantum-related terms such as the discrete log problem, integer factorization problem, and the no-cloning theorem, which are important for quantum-safe cryptography. Additionally, it covers quantum computing applications like Grover's algorithm and quantum key distribution methods such as free-space QKD.",
    "output": "9 Definitions, symbols and abbreviations\n9.1 Definitions\nFor the purposes of the present document, the following terms and definitions apply:\nAdversary: In information security, a malicious opponent who wants to prevent authorized users in the\nsecurity system from achieving their goals. These goals may include confidentiality, data integrity, or\ncorrect authentication.\nASN.1: An ITU specification for a self-defining data type structure. Digital Certificates follow the ITU\nX.509 standard that defines a certificate structure using ASN.1 data types.\nAuthentication: A means of corroborating the source of data, where \"source\" could refer to a person,\nplace, or specific machine.\nBlock Cipher: A symmetric key cryptography algorithm that operates on fixed sized units of plaintext to\nproduce fixed sized units of cipher text. Block ciphers can be configured to operate in different modes,\nmost commonly: ECB, CBC, OFB, CFB, CTR.\nCertificate Authority: An entity that is trusted by all participants within a PKI system that signs and\npublishes Digital Certificates.\nCertificate Chain: X.509 Digital Certificates contain an issuer field that points to the issuer’s certificate.\nThis allows certificates to form a linked list of related certificates where the first certificate in a chain is\n“self-signed”, this is the Certificate Authority. Validating a certificate chain means checking the\nsignature of every certificate in the chain for authenticity.\nCipher: Short form name meaning an “encryption algorithm” or “encipherment algorithm”.\nCiphersuite: Used in the context of the SSL/TLS protocol it is a combination of algorithms that perform\npublic key based authentication, key agreement, encryption, and MAC.\nConfidentiality: A measure of how secret data has been kept from all but those authorized to see it.\nCryptographic Agility: Describes whether or not a security protocol was designed with the capacity to\nchange underlying cryptographic ciphers.\nData Integrity: A term describing the degree to which data has been lost or altered by unauthorized\nmeans. Maintaining data integrity implies that the data is consistent, and accurate to the authorized\nrepresentation of it, across its' lifecycle.\nDiffie-Hellman: A prevalent key agreement protocol based on public key cryptography.\nDigital Certificate: Main purpose is to cryptographically bind a public key with identifying information of\nthe owner. A Certificate Authority issues a Digital Certificate. See also X.509.\nDigital Signature: Used to authenticate a message, it is a code that can only be generated, using a\nprivate key known only to the signer, and can be verified by anyone with an associated public key. The\npublic and private keys make a key pair and are mathematically related.\nDiscrete Log Problem: A mathematical problem that is considered hard for a conventional computer to\nsolve, but is easily solved by a quantum computer. The problem requires an understanding of the\nQuantum Safe Cryptography and Security 57\nconcept of an algebraic group. Solve for k, where b^k=g and b and g are elements in the same algebraic\ngroup.\nEndpoint Device: A device utilized by a user to interact with a distributed computing system. Common\nexamples include PCs and smartphones.\nEntanglement: A quantum mechanical phenomenon, where separate photons cannot be described and\ntreated independently, such that measurements of their physical properties obey non-local correlation\nwhich cannot be observed in classical mechanics.\nEphemeral Key: A short-lived cryptographic key used for a discrete communication session and then\nthrown away and never used again. Central to implementing a system that features Perfect Forward\nSecrecy (PFS).\nFree-space QKD: An implementation of quantum key distribution that involves sending polarized light\nphotons through the air, often to a satellite as a trusted intermediary node. This is in contrast to Optical\nFibre QKD, which utilizes optical fibres for photon transmission. Free-space QKD is a superior candidate\nfor QKD over several hundred kilometers, because it introduces less noise than within current\nimplementations of Optical Fibre QKD.\nGrover's algorithm: A probabilistic quantum algorithm that provides a quadratic speedup over search\nalgorithms implemented on classical computers. Specifically, average-case sorting of an unsorted\ndatabase takes N/2 steps on a classical computer, and only O(√n) steps using Grover's algorithm on a\nquantum computer.\nHash Tree: See Merkle Tree.\nInformation Theoretic Secure: A cipher that cannot be broken, even when analyzed with unlimited\ncomputing power.\nInteger Factorization Problem: A mathematical problem that is considered hard for a conventional\ncomputer to solve, but is easily solved by a quantum computer. The problem starts with the fact that\nany number is a “product of prime numbers”, and is described as: given an arbitrary number, find the\nprime numbers that when multiplied together produce the given arbitrary number.\nInternet Backbone: The physical infrastructure of which the Internet is built; the principal data routes\nbetween the major networks that make up the Internet.\nIPSec: Internet Protocol Security is a layer 2 networking security protocol used to setup a Virtual Private\nNetwork (VPN).\nKey Agreement: A type of algorithm, based on public key cryptography, that allows two remote parties\nto each exchange some information publicly, that can be intercepted by anyone, and then privately\ncompute the same secret key. The secret key can only be computed by the two participants, anyone\nelse who intercepted the information sent publicly cannot derive the same secret value. Most prevalent\nkey agreement algorithm is Diffie-Hellman.\nKey Pair: Used in the context of public key cryptography, refers to 2 values that are calculated and\nmathematically related to each other. One value remains secret and is called private key. One value is\nmade public and is called the public key.\nQuantum Safe Cryptography and Security 58\nKey Size: The number of bits of the key used in a cryptographic primitive. Key sizes (or \"lengths\") are\nrelated to the security of a given algorithm because the length directly affects how quickly an encrypted\nmessage can be attacked by brute force by simply testing all potential keys of that length.\nMessage Authentication Code: A short code that is computed on some information using a key. The\ncode can be used to check the integrity and authenticity of the information.\nMerkle Tree: A quantum safe public key cryptography system based on a tree of message digests where\neach child leaf is computed using a cryptographic hash function that is keyed with a key derived from it’s\nparent.\nM2M: Abbreviation for Machine-to-Machine, describing a networked communication system in which\nan autonomous device communicates with another autonomous device without the participation of a\nhuman.\nNear Field Communication: A standards based method for two devices to communication when placed\nin very close proximity, often touching or tapping together.\nNetwork Infrastructure: The software and hardware that makes up a network, allowing multi-user\ncommunication, and distributed processes, applications and services.\nNo-Cloning Theorem: An important idea in quantum mechanics that forbids the copying of an unknown\nquantum state. This means that if you do not know the exact value of a quantum state, you cannot\nmake a copy that will be guaranteed to have the same value. The no-cloning theorem is the basis for\ninformation-theoretic security in QKD, as well as what necessitates quantum repeaters for quantum key\ndistribution over distances exceeding 200 kilometers.\nNTRU: A type of lattice based cryptographic public key cipher.\nOne-time pad: An unconditionally secure encryption method, where a plaintext is encrypted with a\nrandom secret key (or pad) of same length as the message. The secret key needs to be known by the\nsender and receiver and must be used only once.\nPublic Key Infrastructure: A set of defacto standards and protocols used to distribute and manage\ncryptographic keys using certificates.\nPerfect Forward Secrecy: An attribute of a security protocol that means that temporary/ephemeral\ncryptographic keys are used in the protocol so that if an adversary breaks the keys and can listen to\ntraffic in the session, they can only listen for the current session, and need to break the keys again in any\nfuture secure session.\nPolynomial Time: A term used by computer scientists to describe the amount of computing time that is\nrequired to solve a mathematical problem as the problem scales upwards in size. A polynomial time\nalgorithm, in short, means that the algorithm solves a problem very fast. In contrast, a sub exponential\ntime algorithm or an exponential time algorithm runs very slow as the size of the problem grows.\nEncryption that can be solved, without knowing the key, in polynomial time is considered broken and\nnot suitable for providing security.\nPrivate Key: Used in the context of public key cryptography to describe one of 2 values in a key pair that\nremains secret and is used for either decipherment, key agreement, or creating a digital signature.\nPublic Key Cryptography: A type of encryption, key agreement or digital signature algorithm, sometimes\ncalled asymmetric cryptography, is characterized by methods using 2 cryptographic keys, one key is\nQuantum Safe Cryptography and Security 59"
  }
]