[
  {
    "input": "1.1. Scope and Purpose",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n88 1. Introduction\n89 Cryptographic algorithms are vital for safeguarding confidential electronic information from\n90 unauthorized access. For decades, these algorithms have proved strong enough to defend\n91 against attacks using conventional computers that attempt to defeat cryptography. However,\n92 future quantum computing may be able to break these algorithms, rendering data and\n93 information vulnerable. Countering this future quantum capability requires new cryptographic\n94 methods that can protect data from both current conventional computers and the quantum\n95 computers of tomorrow. These methods are referred to as post-quantum cryptography (PQC).\n96 In response, NIST has released three PQC standards to start the next and significantly large\n97 stage of working on the transition to post-quantum cryptography: the Module-Lattice-Based\n98 Key-Encapsulation Mechanism [FIPS203], the Module-Lattice-Based Digital Signature Algorithm\n99 [FIPS204], and the Stateless Hash-Based Signature Algorithm [FIPS205]. Historically, the journey\n100 from algorithm standardization to full integration into information systems can take 10 to 20\n101 years. This timeline reflects the complexity of companies building the algorithms into products\n102 and services, procuring those products and services, and integrating those products and\n103 services into technology infrastructures.\n104 Even though the transition to post-quantum cryptography is starting before a cryptographically\n105 relevant quantum computer has been built, there is a pressing threat. Encrypted data remains\n106 at risk because of the “harvest now, decrypt later” threat in which adversaries collect encrypted\n107 data now with the goal of decrypting it once quantum technology matures. Since sensitive data\n108 often retains its value for many years, starting the transition to post-quantum cryptography\n109 now is critical to preventing these future breaches. This threat model is one of the main reasons\n110 why the transition to post-quantum cryptography is urgent.\n111 1.1. Scope and Purpose\n112 Updating cryptographic technology has occurred many times at different scales, such as\n113 increasing key sizes or phasing out insecure hash functions and block ciphers. While the\n114 transition to PQC is unprecedented in scale, it benefits from a level of awareness and\n115 understanding that previous cryptographic changes did not have. NIST recognizes the\n116 complexity of migrating the vast array of systems that currently rely on public-key cryptography\n117 and acknowledges that this transition will demand substantial effort across diverse applications\n118 and infrastructures with specific requirements and constraints.\n119 This report serves as the initial step in a broader strategy to manage and guide the transition to\n120 post-quantum cryptography. This transition will involve the adoption of new PQC algorithms as\n121 well as the careful deprecation, controlled legacy use, and eventual removal of quantum-\n122 vulnerable algorithms that are currently widespread in technological infrastructures. Public-\n123 private engagement will be crucial on the path toward PQC. Additionally, this report continues\n124 NIST’s ongoing dialogue with industry, standards organizations, and relevant agencies to\n125 develop a clear roadmap and realistic timeline for transitioning to PQC. NIST is committed to\n1"
  },
  {
    "input": "1.2. Audience",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n126 ensuring that this transition is as smooth and coordinated as possible, balancing the urgency of\n127 adopting PQC with the need to minimize disruption across critical systems.\n128 1.2. Audience\n129 This document is intended for a broad audience, including federal agencies, technology\n130 providers, standards organizations, and Cryptographic Module Validation Program (CMVP)\n131 laboratories. These groups play a critical role in preparing for the migration to PQC by\n132 developing, implementing, and standardizing the new cryptographic methods necessary to\n133 secure information in the era of quantum computing. This document should inform these\n134 stakeholder’s efforts and timelines for migrating information technology products, services, and\n135 infrastructure to PQC.\n2"
  },
  {
    "input": "2.1.1. Digital Signature Algorithms",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n136 2. Background\n137 2.1. Cryptographic Standards\n138 Federal Information Processing Standards (FIPS) and the NIST Special Publication (SP) 800-series\n139 specify a broad set of cryptographic primitives, algorithms, and schemes, including many public-\n140 key cryptosystems that will be deprecated and ultimately disallowed as part of the transition to\n141 post-quantum cryptography. This section identifies quantum-vulnerable algorithms in NIST’s\n142 existing cryptographic standards as well as the post-quantum algorithm standards that have\n143 been recently published. Section 4.1 provides the transition plan for the quantum-vulnerable\n144 algorithms in these standards.\n145 2.1.1. Digital Signature Algorithms\n146 Digital signature algorithms are used to provide identity authentication, integrity\n147 authentication, source authentication, and support for non-repudiation. Digital signature\n148 algorithms are used in conjunction with hash functions or eXtendable-Output Functions (XOFs)\n149 to sign messages of arbitrary length.\n150 NIST-approved digital signature algorithms were historically specified in FIPS 186 [FIPS186]. The\n151 current revision of FIPS 186 specifies the Elliptic Curve Digital Signature Algorithm (ECDSA) and\n152 adopts the RSA algorithm specified in RFC 8017 and PKCS 1 (version 1.5 and higher) and the\n153 Edwards-Curve Digital Signature Algorithm (EdDSA) specified in RFC 8032. The related SP 800-\n154 186 [SP800186] specifies the elliptic curves to be used with ECDSA and the elliptic curve\n155 cryptography (ECC) based key establishment schemes in SP 800-56A [SP80056A]. These\n156 algorithms are vulnerable to Shor’s Algorithm on a cryptographically relevant quantum\n157 computer.\n158 FIPS 204 and 205 each specify quantum-resistant digital signature schemes. FIPS 204 specifies\n159 the Module-Lattice-Based Digital Signature Algorithm (ML-DSA) [FIPS204], which is derived\n160 from the CRYSTALS-Dilithium submission. FIPS 205 specifies the Stateless Hash-Based Digital\n161 Signature Algorithm (SLH-DSA), which is derived from the SPHINCS+ submission [FIPS205].\n162 SP 800-208, Recommendation for Stateful Hash-Based Signature Schemes, specifies two stateful\n163 hash-based signature (HBS) schemes — the Leighton-Micali Signature (LMS) system and the\n164 eXtended Merkle Signature Scheme (XMSS) — along with their multi-tree variants, the\n165 Hierarchical Signature System (HSS) and multi-tree XMSS (XMSSMT) [SP800208]. These schemes\n166 are also resistant to attacks by quantum computers. In stateful hash-based signature (HBS)\n167 schemes, the HBS private key consists of a large set of one-time signature (OTS) private keys.\n168 The security of these schemes relies on the signer to ensure that no individual OTS key is ever\n169 used to sign more than one message. Due to this need to maintain state, HBS schemes are not\n170 intended for general use.\n171 In the future, NIST intends to develop a FIPS that specifies a digital signature algorithm derived\n172 from FALCON as an additional alternative to these standards. In addition, NIST is evaluating\n173 other proposed digital signature algorithms for possible standardization through the Additional\n3"
  },
  {
    "input": "2.1.3. Symmetric Cryptography",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n174 Digital Signature Schemes for the NIST Post-Quantum Cryptography Standardization Process\n175 [NISTIR8528].\n176 2.1.2. Key Establishment\n177 Key establishment is the means by which keys are generated and provided to the entities that\n178 are authorized to use them. Current NIST-approved key-establishment schemes are specified in\n179 SP 800-56A, Recommendation for Pair-Wise Key-Establishment Schemes Using Discrete\n180 Logarithm-Based Cryptography [SP80056A], and SP 800-56B, Recommendation for Pair-Wise\n181 Key Establishment Schemes Using Integer Factorization Cryptography [SP80056B].\n182 SP 800-56A specifies key-establishment schemes based on the discrete logarithm problem over\n183 finite fields and elliptic curves, including several variations of Diffie-Hellman and Menezes-Qu-\n184 Vanstone (MQV) key establishment schemes.\n185 SP 800-56B specifies key-establishment schemes based on the RSA public key cryptosystem.\n186 This publication includes approved methods for both key agreement and key transport.\n187 FIPS 203 specifies a cryptographic scheme called Module-Lattice-Based Key-Encapsulation\n188 Mechanism (ML-KEM), which is derived from the CRYSTALS-KYBER submission. A key-\n189 encapsulation mechanism (KEM) is a particular type of key-establishment scheme that can be\n190 used to establish a shared secret key between two parties communicating over a public\n191 channel. The fourth round of the NIST PQC Standardization process is evaluating additional KEM\n192 algorithms, and NIST anticipates selecting one or more alternatives to ML-KEM in the future.\n193 2.1.3. Symmetric Cryptography\n194 Symmetric-key algorithms (sometimes called secret-key algorithms) use a single key to both\n195 apply cryptographic protection and to remove or check the protection (i.e., the same key is\n196 used for a cryptographic operation and its inverse). For example, the key used to encrypt data\n197 (i.e., apply protection) is also used to decrypt the encrypted data (i.e., remove the protection).\n198 In the case of encryption, the original data is called the plaintext, while the encrypted form of\n199 the data is called the ciphertext. The key must be kept secret if the data is to remain protected.\n200 Several classes of symmetric-key algorithms have been approved: those based on block cipher\n201 algorithms (e.g., AES) and those based on the use of hash functions (e.g., a keyed-hash message\n202 authentication code based on a hash function).\n203 Symmetric-key algorithms are used for:\n204 • Block ciphers\n205 • Hash functions\n206 • Encryption using block cipher modes of operation\n207 • Data authentication using block cipher modes of operation\n208 • Data authentication using key-hash constructions\n4"
  },
  {
    "input": "2.2.2. Software Cryptographic Libraries",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n209 • Key derivation\n210 • Key wrapping\n211 • Random bit generation\n212 As discussed in Sec. 4.1.3, the existing algorithm standards for symmetric cryptography are less\n213 vulnerable to attacks by quantum computers. NIST does not expect to need to transition away\n214 from these standards as part of the PQC migration.\n215 2.2. Cryptographic Technologies and Components\n216 Once PQC algorithms have been standardized, applications will need to be modified to make\n217 use of them. Many applications include components that are based on standardized protocols\n218 and security technologies that will need to be revised to support the use of the PQC algorithms.\n219 In addition, applications are built on top of software cryptographic libraries that either provide\n220 the implementations of the cryptographic algorithms or provide an interface to hardware\n221 cryptographic modules. Any software cryptographic libraries and hardware cryptographic\n222 modules used by an application will also need to be revised to support the PQC algorithms.\n223 Applications may also rely upon infrastructure components, such as public key infrastructures\n224 (PKI), that would need to be updated to support the PQC algorithms before the applications\n225 themselves can migrate to using the PQC algorithms.\n226 2.2.1. Network Protocol and Security Technology Standards\n227 Network protocols and security technology standards define the rules for data exchange over\n228 networks and ensure secure and reliable communication. Examples include Transport Layer\n229 Security (TLS), Secure Shell (SSH), Internet Protocol Security (IPsec), and Cryptographic Message\n230 Syntax (CMS).\n231 These protocols and security technologies often rely on classical cryptographic algorithms that\n232 are vulnerable to quantum attacks. Updating them to incorporate PQC algorithms is essential to\n233 maintaining data confidentiality and integrity. This involves revising protocol specifications to\n234 support new key exchange mechanisms and authentication methods that are quantum-\n235 resistant. In some cases, this will involve simply assigning an identifier for the new algorithm. In\n236 other cases, more significant changes will be required to accommodate the larger sizes of the\n237 PQC algorithms or as a result of the new algorithms having different interfaces.\n238 2.2.2. Software Cryptographic Libraries\n239 Software cryptographic libraries are collections of cryptographic algorithms and protocols that\n240 are implemented in software to provide essential cryptographic functions to applications.\n241 OpenSSL, BoringSSL, Libsodium, and the Java Cryptography Architecture (JCA) are a few\n242 examples of cryptographic libraries that are used to provide cryptographic support for\n243 applications.\n5"
  },
  {
    "input": "2.2.5. IT Applications and Services",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n244 These libraries need to incorporate PQC algorithms that are standardized by bodies like NIST.\n245 Updating them ensures that developers have access to quantum-resistant cryptographic\n246 functions without implementing complex algorithms themselves. This transition involves adding\n247 new algorithms, optimizing their implementations for performance, and ensuring those\n248 implementations are secure against side-channel attacks.\n249 2.2.3. Cryptographic Hardware\n250 Cryptographic hardware modules, such as hardware security modules (HSMs) and Trusted\n251 Platform Modules (TPMs), provide secure environments for performing cryptographic\n252 operations and storing sensitive keys. They are used in various applications, from securing\n253 server infrastructure to protecting cryptographic keys on personal devices.\n254 Hardware modules must be upgraded or redesigned to support PQC algorithms, which often\n255 have larger key sizes and different computational requirements. This includes updating\n256 firmware or hardware to handle new algorithms and ensuring that the modules can perform\n257 quantum-resistant cryptographic operations efficiently while maintaining the high security\n258 standards expected of these devices.\n259 2.2.4. PKI and Other Infrastructure Components\n260 Public key infrastructure (PKI) systems manage digital certificates and public-private key pairs to\n261 enable secure communication and authentication across networks. Other infrastructure\n262 components include certification authorities (CAs), registration authorities, key management\n263 systems, and directory services.\n264 PKI components must be updated to issue, distribute, and manage certificates that use PQC\n265 algorithms and to sign certificates and revocation status information using PQC algorithms. This\n266 includes supporting new cryptographic algorithms in certificate issuance processes and\n267 modifying validation and revocation mechanisms. Ensuring backward compatibility and\n268 interoperability during the transition period is crucial to maintaining trust and security across\n269 the network.\n270 2.2.5. IT Applications and Services\n271 IT applications and services encompass a wide array of software and platforms used by\n272 organizations, including web applications, databases, communication tools, cloud services, and\n273 enterprise software. These applications rely on cryptography for securing data, authenticating\n274 users, and ensuring secure transactions.\n275 Applications and services must be modified to support PQC algorithms for encryption, digital\n276 signatures, and key exchange. This requires updating the underlying cryptographic\n277 implementations, adjusting to changes in key sizes and algorithm performance, and ensuring\n278 compatibility with updated protocols and libraries. Developers need to refactor code, conduct\n279 extensive testing, and potentially redesign user interfaces to accommodate these changes.\n6"
  },
  {
    "input": "3.1.2. User and Machine Authentication",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n280 3. Migration Considerations\n281 Even though there are no existing cryptographically relevant quantum computers that currently\n282 threaten levels of security, it will take a significant amount of time to transition to new post-\n283 quantum algorithms. Past cryptographic migrations have taken over a decade, and this more\n284 complex migration will likely take at least that long.\n285 Mosca’s theorem emphasizes the urgency of migrating to post-quantum algorithms by\n286 introducing a simple but powerful timeline: if “X” represents the number of years that data\n287 must be kept secure, and “Y” is the estimated time needed to complete the transition, then\n288 organizations must start transitioning to post-quantum algorithms before X + Y exceeds the\n289 expected time Z for a cryptographically relevant quantum computer to be built. This means that\n290 even if quantum computers are a decade away, organizations must begin the migration to post-\n291 quantum cryptography today to avoid having their encrypted data exposed once quantum\n292 computers become operational in the future. This threat, often referred to as “harvest now,\n293 decrypt later,” underscores the necessity of acting immediately, especially for data with long-\n294 term sensitivity, such as government secrets or medical records. Ensuring security today will\n295 safeguard it for the future.\n296 3.1. Use Cases\n297 3.1.1. Code Signing\n298 Code signing involves digitally signing executables and software packages to verify the author’s\n299 identity and ensure that the code has not been tampered with. This process is critical for\n300 maintaining trust in software distribution channels and preventing the spread of malicious\n301 code.\n302 The devices that install and execute this code need the ability to verify the signatures on the\n303 code. In some cases, it is not feasible to update the code that performs the signature\n304 verification after the devices have been manufactured. When this is the case, it is important for\n305 the devices to be designed to require quantum-resistant signatures on the executables, if there\n306 is a risk that the devices will still be in use after cryptographically relevant quantum computers\n307 become available.\n308 3.1.2. User and Machine Authentication\n309 User and machine authentication systems verify identities to control access to resources. This\n310 often involves cryptographic protocols that use asymmetric algorithms for secure key exchange\n311 and authentication, ensuring that only authorized users or devices can access sensitive data or\n312 services. Depending on the protocol, authentication may be performed using either a digital\n313 signature algorithm or a key-establishment scheme.\n314 Unlike with encryption, where there is a threat of “harvest now, decrypt later,” an\n315 authentication system remains secure as long as the cryptographic algorithms and keys used to\n316 perform the authentication are secure when the authentication is performed. Authentication\n7"
  },
  {
    "input": "3.2. PQC-Classical Hybrid Protocols",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n317 systems may continue to use quantum-vulnerable algorithms until quantum computers that are\n318 capable of breaking current, quantum-vulnerable algorithms become available, at which point\n319 authentication using these algorithms will need to be disabled.\n320 Supporting quantum-resistant algorithms for authentication will require upgrades to both the\n321 system performing and accepting the authentication, as well as to any supporting\n322 infrastructure, such as a PKI. It may also require obtaining hardware cryptographic tokens that\n323 support the quantum-resistant algorithms.\n324 3.1.3. Network Security Protocols\n325 Network security protocols like TLS and virtual private networks secure data transmission over\n326 public networks. They use cryptographic techniques to provide confidentiality, integrity, and\n327 authentication between communicating parties.\n328 Modern network security protocols tend to use separate asymmetric keys for key\n329 establishment and authentication. While long-term keys are used for authentication, key-\n330 establishment keys are used for a short period of time, usually for a single key establishment.\n331 This provides the property of forward secrecy, where the compromise of a long-term key does\n332 not result in the compromise of communication sessions that occurred before the compromise.\n333 As symmetric keys that are established through the key-establishment process are used to\n334 provide confidentiality, the “harvest now, decrypt later” threat needs to be considered when\n335 determining a migration timeline for the key-establishment scheme. The cryptographic\n336 algorithm used for authentication may be transitioned at a different time, and for that the\n337 considerations in Sec. 3.1.2 apply.\n338 3.1.4. Email and Document Signing and Encryption\n339 Email and document signing employ digital signatures to verify the authenticity and integrity of\n340 electronic communications and documents. Common algorithms like RSA and ECDSA are widely\n341 used to create a cryptographic binding between the content and the sender’s identity, ensuring\n342 that the message has not been altered and that it originates from a legitimate source.\n343 Secure/Multipurpose Internet Mail Extensions (S/MIME) is a standard for public-key encryption\n344 and the signing of MIME data. It provides end-to-end encryption and authentication for email\n345 and file exchanges to ensure that only intended recipients can access the content. As with other\n346 applications providing data confidentiality, email encryption is subject to “harvest now, decrypt\n347 later.”\n348 3.2. PQC-Classical Hybrid Protocols\n349 The migration to post-quantum cryptography may initially include hybrid solutions that\n350 incorporate the use of quantum-resistant and quantum-vulnerable algorithms when\n351 establishing cryptographic keys or generating digital signatures. These hybrid solutions are\n352 typically designed to remain secure if at least one of the component algorithms is secure.\n8"
  },
  {
    "input": "3.2.1. Hybrid Key-Establishment Techniques",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n353 Such hybrid solutions are often utilized as a hedge against a cryptographic or implementation\n354 flaw in one of the underlying component algorithms. It may also provide a path for\n355 accommodating the use of PQC if sector-specific requirements still require legacy quantum-\n356 vulnerable algorithms. However, hybrid solutions add complexity to implementations and\n357 architectures, which can increase security risks and costs during the transition to PQC. When\n358 used, hybrid solutions are typically expected to be temporary measures that lead to a second\n359 transition to cryptographic tools that use only PQC algorithms.\n360 These trade-offs will vary based on the hybrid techniques used, the applications involved, and\n361 the vendor and user communities that will develop and deploy them. Implementers and\n362 standards organizations that specify cryptographic protocols and technologies need to carefully\n363 consider the security, costs, and complexity of hybrid solutions in their environments.\n364 Industry and standards organizations are considering a variety of techniques for hybrid\n365 solutions with key-establishment schemes and digital signatures. NIST intends to accommodate\n366 the use of hybrid techniques in its cryptographic standards to facilitate the transition to PQC\n367 where their use is desired.\n368 Whether hybrid solutions are used or not, quantum-vulnerable and quantum-resistant\n369 cryptographic algorithms will be fielded and used alongside each other in many applications\n370 and systems during the transition to PQC to facilitate interoperability. For example, many\n371 network security protocols support the use of multiple sets of cryptographic algorithms and\n372 allow two communicating parties to negotiate which algorithms to use in each session.\n373 Similarly, during the transition to PQC, public key infrastructures using quantum-vulnerable\n374 digital signature algorithms are expected to be deployed and used alongside those using\n375 quantum-resistant algorithms. Such approaches are not considered hybrid solutions if each\n376 session only uses a single cryptographic algorithm for key establishment and/or digital\n377 signatures.\n378 3.2.1. Hybrid Key-Establishment Techniques\n379 A hybrid key-establishment mode is defined here to be a key establishment scheme that is a\n380 combination of two or more components that are themselves cryptographic key-establishment\n381 schemes. The hybrid key-establishment scheme becomes a composite of these component\n382 schemes.\n383 NIST currently allows a generic composite key-establishment technique described in SP 800-56C\n384 [SP80056C]. Assume that the value Z is a shared secret that was generated as specified by SP\n385 800-56A or 800-56B and that a shared secret T is generated or distributed through other\n386 schemes. The value Z’=Z||T may then be treated as a shared secret and any of the key\n387 derivation methods given in SP 800-56C may be applied to Z’ to derive secret keying material.\n388 NIST intends to update SP 800-56C so that the value Z may be generated as specified by any\n389 current and future NIST key-establishment standards. This will include SP 800-56A, SP 800-56B,\n390 FIPS 203, and any additional post-quantum key-establishment standards. The desired property\n391 of hybrid techniques is that derived keys remain secure if at least one of the component\n392 schemes is secure. Security properties can be complex, and for composite key establishment\n9"
  },
  {
    "input": "3.2.2. Hybrid Digital Signature Techniques",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n393 schemes they will need to be analyzed on a case-by-case basis with the requirements of the\n394 application in mind. NIST intends to offer guidance on various key combiners in the forthcoming\n395 SP 800-227, Recommendations for Key Encapsulation Mechanisms.\n396 Additionally, the output of the key-establishment scheme specified in FIPS 203 is a shared\n397 secret key which is a shared secret that does not require further key derivation. NIST\n398 emphasizes that any shared secret key generated as specified in FIPS 203 may be used as the\n399 value Z in the generic composite mode described in SP 800-56C. These same properties will\n400 apply to any future FIPS which standardize KEMs.\n401 3.2.2. Hybrid Digital Signature Techniques\n402 Common techniques for hybrid digital signatures involve the use of dual signatures, which\n403 consist of two or more signatures on a common message. It may also be known as a hybrid\n404 signature or composite signature. The verification of the dual signature requires all of the\n405 component signatures to be successfully verified, such as by creating a single logical composite\n406 signature from two or more component signature algorithms.\n407 Dual signatures could be used to sign user data (e.g., a document or e-mail) or digital\n408 certificates that contain references to user key pairs within a PKI. Existing NIST standards and\n409 guidelines accommodate their use provided that at least one component digital signature\n410 algorithm is NIST-approved.\n411 NIST leaves the decision to each specific application as to whether it can afford the\n412 implementation cost, performance reduction, and engineering complexity (including proper\n413 and independent security reviews) of a hybrid mode for key establishment or the use of dual\n414 signatures. To assist external parties that desire such a mechanism, NIST will accommodate the\n415 use of a hybrid key-establishment mode and dual signatures in FIPS 140 validation when\n416 suitably combined with a NIST-approved scheme.\n10"
  },
  {
    "input": "4.1. NIST Cryptographic Algorithm Standards and Guidelines",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n417 4. Towards a PQC Standards Transition Timeline\n418 NIST’s cryptography standards provide comprehensive guidance on a broad spectrum of\n419 cryptographic mechanisms that are essential for securing sensitive information across both\n420 federal and nonfederal systems. These standards cover fundamental areas that are crucial for\n421 ensuring the confidentiality, integrity, and authenticity of data, such as encryption algorithms,\n422 digital signatures, hash functions, key establishment, and random number generation.\n423 Additionally, NIST’s standards define key-management practices and offer frameworks for\n424 securely generating, storing, distributing, and destroying cryptographic keys.\n425 Beyond individual algorithms, NIST standards provide guidance on cryptographic protocols that\n426 secure communications, such as the TLS protocol, which protects internet data exchanges. They\n427 also specify requirements for cryptographic modules through the CMVP to ensure that\n428 implementations meet stringent security standards. NIST has also developed PQC standards to\n429 safeguard systems against future quantum attacks. Through collaboration with industry,\n430 academia, and other stakeholders, NIST continually updates its cryptographic standards to\n431 address evolving security threats and technological advances.\n432 National Security Memorandum 10 (NSM-10) establishes the year 2035 as the primary target\n433 for completing the migration to PQC across Federal systems [NSM10]:\n434 “Any digital system that uses existing public standards for public key cryptography, or\n435 that is planning to transition to such cryptography, could be vulnerable to an attack by a\n‑\n436 Cryptographically Relevant Quantum Computer (CRQC). To mitigate this risk, the United\n437 States must prioritize the timely and equitable transition of cryptographic systems to\n438 quantum-resistant cryptography, with the goal of mitigating as much of the quantum\n439 risk as is feasible by 2035.”\n440 This date reflects the urgency of transitioning to cryptographic methods that can withstand\n441 future quantum threats. However, it is important to recognize that migration timelines may\n442 vary based on the specific use case or application. Some systems, particularly those with long-\n443 term confidentiality needs or more complex cryptographic infrastructures, may require earlier\n444 transitions, while others may adopt PQC at a slower pace due to legacy constraints or lower risk\n445 profiles. Flexibility in migration planning is essential to balance the urgency of securing critical\n446 systems with the practical challenges that different sectors face during this transition. NIST will\n447 work to ensure that these varying timelines are acknowledged and supported while maintaining\n448 the overall goal of achieving widespread PQC adoption by 2035.\n449 4.1. NIST Cryptographic Algorithm Standards and Guidelines\n450 SP 800-131A [SP800131A] [SP800131A] describes the transitions associated with the use of\n451 cryptography by Federal Government agencies to protect controlled unclassified information.\n452 The document addresses the use of algorithms and key lengths specified in FIPS and NIST SPs.\n453 During the transition to post-quantum cryptography, NIST will revise SP 800-131A with more\n454 detailed guidelines and schedules.\n11\nNIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n455 The terms “acceptable,” “deprecated, “disallowed,” and “legacy use” are used throughout SP\n456 800-131A to indicate the approval status of an algorithm:\n457 • Acceptable means that the algorithm and key length/ strength in a FIPS or SP are\n458 approved for use in accordance with any associated guidance.\n459 • Deprecated means that the algorithm and key length/strength may be used, but there is\n460 some security risk. The data owner must examine this risk potential and decide whether\n461 to continue to use a deprecated algorithm or key length.\n462 • Disallowed means that the algorithm, key length/strength, parameter set, or scheme is\n463 no longer allowed for the stated purpose.\n464 • Legacy use means that the algorithm, scheme, or parameter set may only be used to\n465 process already protected information (e.g., to decrypt ciphertext data or to verify a\n466 digital signature).\n467\n468 Transition schedules are primarily driven by the level of cryptographic protection that a given\n469 algorithm and associated parameter set can provide, which is described as a rough measure\n470 known as security strength. Historically, the security strength that an algorithm could provide\n471 was defined in terms of the amount of work (i.e., the number of operations) that is required to\n472 break the algorithm (i.e., an algorithm has s bits of security strength if breaking the algorithm\n473 requires 2s operations of some kind, where s = 112, 128, 192, or 256). However, there are\n474 significant uncertainties in estimating the security strengths of post-quantum cryptosystems\n475 given the difficulty of accurately predicting the performance characteristics of future quantum\n476 computers, such as their cost, speed, and memory size.\n477 While NIST guidelines continue to use bit-length security strengths to describe the level of\n478 protection offered by an algorithm and parameter set against attacks by classical computers,\n479 post-quantum security is described using a collection of broad security categories. Each\n480 category is defined by a comparatively easy-to-analyze reference primitive, whose security\n481 serves as a floor for a wide variety of metrics that are deemed potentially relevant to practical\n482 security. NIST based its classification on the range of security strengths offered by the existing\n483 standards in symmetric cryptography. Table 1 provides a summary of these security categories.\n484 Table 1: Post-Quantum Security Categories\nSecurity\nAttack Type Example\nCategory\n1 Key search on a block cipher with a 128-bit key AES-128\n2 Collision search on a 256-bit hash function SHA-256\n3 Key search on a block cipher with a 192-bit key AES-192\n4 Collision search on a 384-bit hash function SHA3-384\n5 Key search on a block cipher with a 256-bit key AES-256\n12"
  },
  {
    "input": "4.1.1. Digital Signatures",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n485 4.1.1. Digital Signatures\n486 Table 2 lists currently approved quantum-vulnerable digital signature algorithm standards.\n487\n488 Table 2: Quantum-vulnerable digital signature algorithms\nDigital Signature\nParameters Transition\nAlgorithm Family\nDeprecated after 2030\n112 bits of security strength\nECDSA\nDisallowed after 2035\n[FIPS186]\n≥ 128 bits of security strength Disallowed after 2035\nEdDSA\n≥ 128 bits of security strength Disallowed after 2035\n[FIPS186]\nDeprecated after 2030\n112 bits of security strength\nRSA\nDisallowed after 2035\n[FIPS186]\n≥ 128 bits of security strength Disallowed after 2035\n489\n490\n491 NIST’s long-term cryptographic algorithm transition plans are outlined in SP 800-57pt1 (Part 1)\n492 [SP80057]. These guidelines had projected that NIST would disallow public-key schemes that\n493 provide 112 bits of security on January 1, 2031. However, based on the need to migrate to\n494 quantum-resistant algorithms during this timeframe, NIST intends to instead deprecate classical\n495 digital signatures at the 112-bit security level. Organizations may continue using these\n496 algorithms and parameter sets as they migrate to the post-quantum signatures identified in\n497 Table 3.\n498\n499 Table 3. Post-quantum digital signature algorithms\nDigital Signature Parameter Sets Security Security\nAlgorithm Family Strength Category\nML-DSA ML-DSA-44 128 bits 2\n[FIPS204]\nML-DSA-65 192 bits 3\nML-DSA-87 256 bits 5\n13"
  },
  {
    "input": "4.1.2. Key Establishment",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\nDigital Signature Parameter Sets Security Security\nAlgorithm Family Strength Category\nSLH-DSA SLH-DSA-SHA2-128[s/f] 128 bits 1\n[FIPS205] SLH-DSA-SHAKE-128[s/f]\nSLH-DSA-SHA2-192[s/f] 192 bits 3\nSLH-DSA-SHAKE-192[s/f]\nSLH-DSA-SHA2-256[s/f] 256 bits 5\nSLH-DSA-SHAKE-256[s/f]\nLMS, HSS With SHA-256/192 192 bits 3\n[SP800208] With SHAKE256/192\nWith SHA-256 256 bits 5\nWith SHAKE256\nXMSS, XMSSMT With SHA-256/192 192 bits 3\n[SP800208] With SHAKE256/192\nWith SHA-256 256 bits 5\nWith SHAKE256\n500\n501 4.1.2. Key Establishment\n502 Table 4 lists currently approved quantum-vulnerable key-establishment.\n503 Table 4: Quantum-vulnerable key-establishment schemes\nKey\nEstablishment Parameters Transition\nScheme\nDeprecated after 2030\nFinite Field 112 bits of security strength\nDH and MQV Disallowed after 2035\n[SP80056A]\n≥ 128 bits of security strength Disallowed after 2035\nDeprecated after 2030\nElliptic Curve 112 bits of security strength\nDH and MQC Disallowed after 2035\n[SP80056A]\n≥ 128 bits of security strength Disallowed after 2035\nDeprecated after 2030\n112 bits of security strength\nRSA\nDisallowed after 2035\n[SP80056B]\n≥ 128 bits of security strength Disallowed after 2035\n504\n14"
  },
  {
    "input": "4.1.3. Symmetric Cryptography",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n505 Similar to the transition for digital signature algorithms, NIST intends to instead deprecate\n506 rather than fully disallow classical key-establishment schemes at the 112-bit security level.\n507 Organizations may continue using these algorithms and parameter sets as they migrate to ML-\n508 KEM or other approved quantum-resistant techniques. However, in order to mitigate the risk of\n509 “harvest now, decrypt later” attacks on network communications, application-specific\n510 guidance, as described in Sec. 4.2, may require or recommend migration to quantum-resistant\n511 key establishment schemes before the classical schemes are generally disallowed.\n512 Table 5 lists current quantum-resistant key establishment schemes. At this time, ML-KEM is the\n513 only approved post-quantum key-establishment scheme based on public key cryptography.\n514 Additional algorithms are still being considered as part of the fourth round of the NIST PQC\n515 Standardization process. NIST expects to select one or more alternatives to ML-KEM in the\n516 future.\n517 Table 5: Post-quantum key-establishment schemes\nKey Establishment Scheme Parameter Sets Security Strength Security Category\nML-KEM ML-KEM-512 128 bits 1\n[FIPS203]\nML-DSA-768 192 bits 3\nML-DSA-1024 256 bits 5\n518\n519 4.1.3. Symmetric Cryptography\n520 NIST’s existing standards in symmetric cryptography — including hash functions, XOFs, block\n521 ciphers, KDFs, and DRBGs — are significantly less vulnerable to known quantum attacks than\n522 the public-key cryptography standards in SP 800-56A, SP 800-56B, and FIPS 186. In particular, all\n523 NIST-approved symmetric primitives that provide at least 128 bits of classical security are\n524 believed to meet the requirements of at least Category 1 security within the system of five\n525 security strength categories for evaluating parameter sets in the NIST PQC standardization\n526 process (see Table 1). NIST has a few symmetric cryptography standards at the 112-bit security\n527 level, which will be disallowed in 2030. Applications should move away from these when\n528 transitioning to post-quantum cryptography.\n529 Table 6: Block ciphers\nBlock Cipher Parameter Sets Security Security\nStrength Category\nAES AES-128 128 bits 1\n[FIPS197]\nAES-192 192 bits 3\nAES-256 256 bits 5\n15"
  },
  {
    "input": "4.2. Application-Specific Standards and Guidelines",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n530\n531 Table 7: Hash functions and XOFs\nHash/XOF Variants Collision Collision Preimage Preimage\nAlgorithm Security Security Security Security\nFamily Strength Category Strength Category\nSHA-1 SHA-1 80 bits < 1 160 bits 1\n[FIPS180]\nSHA-2 SHA-224 112 bits < 1 224 bits 3\n[FIPS180] SHA-512/224\nSHA-256 128 bits 2 256 bits 5\nSHA-512/256\nSHA-384 192 bits 4 384 bits 5\nSHA-512 256 bits 5 512 bits 5\nSHA-3 SHA3-224 112 bits < 1 224 bits 3\n[FIPS202]\nSHA3-256 128 bits 2 256 bits 5\nSHAKE128 128 bits 2 128 bits 2\nSHA3-384 192 bits 4 384 bits 5\nSHA3-512 256 bits 5 512 bits 5\nSHAKE256 256 bits 5 512 bits 5\n532\n533 4.2. Application-Specific Standards and Guidelines\n534 NIST develops and maintains standards and guidelines addressing cryptography used in certain\n535 security technologies, protocols, and systems. For example, FIPS 201-3 and its supporting\n536 technical guidelines in NIST Special Publications specify the Personal Identity Verification\n537 standard, including security and interoperability requirements for PKI-based credentials used to\n538 authenticate federal employees and contractors. Other Special Publications provide guidance\n539 on the configuration and use of cryptographic technologies, such as NIST SP 800-52 Revision 2\n540 on the use of TLS servers and clients. These standards and guidelines are regularly updated to\n541 address changes to underlying standards and technologies as well as new threats.\n542 Throughout the migration to PQC, NIST will revise its documents to provide more detailed\n543 guidelines for deprecating quantum-vulnerable algorithms, tailored to relevant applications.\n544 While NIST’s cryptographic algorithm standards may continue to specify quantum-vulnerable\n16\nNIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n545 techniques until 2035 and generally allow their use, these application-specific standards and\n546 guidelines may specify earlier transitions for certain cryptographic algorithms, techniques, and\n547 protocols used within these applications. These guidelines will be developed based on the\n548 expected impact that a cryptographically relevant quantum computer would have on these\n549 applications as well as the level of support for PQC in the relevant standards, products, and\n550 services. NIST expects to prioritize the migration to quantum-resistant key-establishment\n551 schemes within these updates to protect against “harvest now, decrypt later” attacks,\n552 particularly in interactive protocols like TLS and IKE.\n553 NIST will also coordinate with standards-developing organizations and industry to ensure that\n554 critical security protocols and technologies are updated to support PQC in a timely manner,\n555 recognizing that different application areas will have different risks, security needs, and\n556 adoption challenges.\n557\n17"
  },
  {
    "input": "References",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n558 References\n559 [FIPS140] National Institute of Standards and Technology (2019) Security Requirements\n560 for Cryptographic Modules. (Department of Commerce, Washington, DC),\n561 Federal Information Processing Standards Publication (FIPS) FIPS 140-3.\n562 https://doi.org/10.6028/NIST.FIPS.140-3\n563 [FIPS180] National Institute of Standards and Technology (2015) Secure Hash Standard\n564 (SHS). (Department of Commerce, Washington, DC), Federal Information\n565 Processing Standards Publication (FIPS) FIPS 180-4.\n566 https://doi.org/10.6028/NIST.FIPS.180-4\n567 [FIPS186] National Institute of Standards and Technology. Digital signature standard\n568 (DSS). (Department of Commerce, Washington, DC), Federal Information\n569 Processing Standards Publication (FIPS) FIPS 186-5.\n570 https://doi.org/10.6028/NIST.FIPS.186-5\n571 [FIPS197] National Institute of Standards and Technology (2001) Advanced Encryption\n572 Standard (AES). (Department of Commerce, Washington, DC), Federal\n573 Information Processing Standards Publication (FIPS) FIPS 197.\n574 https://doi.org/10.6028/NIST.FIPS.197\n575 [FIPS198] National Institute of Standards and Technology (2008) The Keyed-Hash\n576 Message Authentication Code (HMAC). (Department of Commerce,\n577 Washington, DC), Federal Information Processing Standards Publication (FIPS)\n578 FIPS 198-1. https://doi.org/10.6028/NIST.FIPS.198-1\n579 [FIPS202] National Institute of Standards and Technology (2015) SHA-3 Standard:\n580 Permutation-Based Hash and Extendable-Output Functions. (Department of\n581 Commerce, Washington, DC), Federal Information Processing Standards\n582 Publication (FIPS) FIPS 202. https://doi.org/10.6028/NIST.FIPS.202\n583 [FIPS203] National Institute of Standards and Technology (2024) Module-Lattice-Based\n584 Key-Encapsulation Mechanism Standard. (Department of Commerce,\n585 Washington, DC), Federal Information Processing Standards Publication (FIPS)\n586 FIPS 203. https://doi.org/10.6028/NIST.FIPS.203\n587 [FIPS204] National Institute of Standards and Technology (2024) Module-Lattice-Based\n588 Digital Signature Standard. (Department of Commerce, Washington, DC),\n589 Federal Information Processing Standards Publication (FIPS) FIPS 204.\n590 https://doi.org/10.6028/NIST.FIPS.204\n591 [FIPS205] National Institute of Standards and Technology (2024) Stateless Hash-Based\n592 Digital Signature Standard. (Department of Commerce, Washington, DC),\n593 Federal Information Processing Standards Publication (FIPS) FIPS 205.\n594 https://doi.org/10.6028/NIST.FIPS.205\n595 [NISTIR8528] Alagic G, Bros M, Ciadoux P, Cooper D, Dang Q, Dang T, Kelsey J, Lichtinger J,\n596 Liu YK, Miller C, Moody D, Peralta R, Perlner R, Robinson A, Silberg H, Smith-\n597 Tone D, Waller N (2024) Status Report on the First Round of the Additional\n598 Digital Signature Schemes for the NIST Post-Quantum Cryptography\n599 Standardization Process. (National Institute of Standards and Technology,\n600 Gaithersburg, MD), NIST IR 8528.\n18\nNIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n601 https://doi.org/10.6028/NIST.IR.8528\n602 [NSM10] Biden J (2022) National Security Memorandum on Promoting United States\n603 Leadership in Quantum Computing While Mitigating Risks to Vulnerable\n604 Cryptographic Systems. (The White House, Washington, DC), National Security\n605 Memorandum 10, May 4 2022. Available at\n606 https://www.whitehouse.gov/briefing-room/statements-\n607 releases/2022/05/04/national-security-memorandum-on-promoting-united-\n608 states-leadership-in-quantum-computing-while-mitigating-risks-to-vulnerable-\n609 cryptographic-systems/\n610 [SP80056A] Barker EB, Chen L, Roginsky A, Vassilev A, Davis R (2018) Recommendation for\n611 Pair-Wise Key-Establishment Using Schemes Using Discrete Logarithm\n612 Cryptography. (National Institute of Standards and Technology, Gaithersburg,\n613 MD), NIST Special Publication (SP) NIST SP 800-56Ar3.\n614 https://doi.org/10.6028/NIST.SP.800-56Ar3\n615 [SP80056B] Barker EB, Chen L, Roginsky A, Vassilev A, Davis R, Simon Scott (2019)\n616 Recommendation for Pair-Wise Key-Establishment Schemes Integer\n617 Factorization Cryptography. (National Institute of Standards and Technology,\n618 Gaithersburg, MD), NIST Special Publication (SP) NIST SP 800-56Br2.\n619 https://doi.org/10.6028/NIST.SP.800-56Br2\n620 [SP80056C] Barker E, Chen L, Davis R (2020) Recommendation for Key-Derivation Methods\n621 in Key-Establishment Schemes. (National Institute of Standards and\n622 Technology, Gaithersburg, MD), NIST Special Publication (SP) NIST SP 800-\n623 56Cr2. https://doi.org/10.6028/NIST.SP.800-56Cr2\n624 [SP80057] Barker EB, Barker WC (2020) Recommendation for Key Management: Part 1 –\n625 General. (National Institute of Standards and Technology, Gaithersburg, MD),\n626 NIST Special Publication (SP) NIST SP 800-57pt1r5.\n627 https://doi.org/10.6028/NIST.SP.800-57pt1r5\n628 [SP800131A] Barker E, Roginsky A (2019) Transitions: Recommendation for Transitioning the\n629 Use of Cryptographic Algorithms and Key Lengths. (National Institute of\n630 Standards and Technology, Gaithersburg, MD), NIST Special Publication (SP)\n631 NIST SP 800-131Ar2. https://doi.org/10.6028/NIST.SP.800-131Ar2\n632 [SP800185] Kelsey JM, Chang S-jH, Perlner RA (2016) SHA-3 Derived Functions: cSHAKE,\n633 KMAC, TupleHash, and ParallelHash. (National Institute of Standards and\n634 Technology, Gaithersburg, MD), NIST Special Publication (SP) NIST SP 800-185.\n635 https://doi.org/10.6028/NIST.SP.800-185\n636 [SP800186] Chen L, Moody D, Regenscheid A, Robinson A, Randall K (2023)\n637 Recommendations for Discrete Logarithm-based Cryptography: Elliptic Curve\n638 Domain Parameters (National Institute of Standards and Technology,\n639 Gaithersburg, MD), NIST Special Publication (SP) NIST SP 800-186.\n640 https://doi.org/10.6028/NIST.SP.800-186\n641 [SP800208] Cooper DA, Apon DC, Dang QH, Davidson MS, Dworkin MJ, Miller CA (2020)\n642 Recommendation for Stateful Hash-Based Signature Schemes, (National\n643 Institute of Standards and Technology, Gaithersburg, MD), NIST Special\n644 Publication (SP) NIST SP 800-208. https://doi.org/10.6028/NIST.SP.800-208\n19"
  },
  {
    "input": "Appendix A. Glossary",
    "output": "NIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n645 Appendix A. Glossary\n646 acceptable\n647 Approved for use. An allowed algorithm and key length/strength in a FIPS or SP is approved for use in accordance\n648 with any associated guidance.\n649 approved\n650 FIPS-approved and/or NIST-recommended. An algorithm or technique that is either 1) specified in a FIPS or NIST\n651 recommendation, 2) adopted in a FIPS or NIST recommendation, or 3) specified in a list of NIST-approved security\n652 functions.\n653 asymmetric (cryptography)\n654 Cryptography that uses two separate keys to exchange data — one to encrypt or digitally sign the data and one to\n655 decrypt the data or verify the digital signature. Also known as public-key cryptography.\n656 block cipher\n657 An invertible symmetric-key cryptographic algorithm that transforms one block of information at a time using a\n658 cryptographic key. The resulting output block is the same length as the input block.\n659 certificate\n660 A set of data that uniquely identifies a public key that has a corresponding private key and an owner that is\n661 authorized to use the key pair. The certificate contains the owner’s public key and possibly other information and\n662 is digitally signed by a certification authority (i.e., a trusted party), thereby binding the public key to the owner.\n663 cryptographic module\n664 The set of hardware, software, and/or firmware that implements approved cryptographic functions (including key\n665 generation) that are contained within the cryptographic boundary of the module.\n666 cryptographically relevant quantum computer\n667 A quantum computer which is capable of actually attacking real world cryptographic systems that would be\n668 infeasible to attack with a normal computer.\n669 deprecated\n670 The algorithm and key length may be used, but the user must accept some security risk. The term is used when\n671 discussing the key lengths or algorithms that may be used to apply cryptographic protection.\n672 digital certificate\n673 See certificate.\n674 digital signature\n675 The result of a cryptographic transformation of data that, when properly implemented, provides a mechanism to\n676 verify origin authenticity and data integrity and to enforce signatory non-repudiation.\n677 disallowed\n678 The algorithm or key length is no longer allowed for applying cryptographic protection.\n679 dual signature\n680 A dual signature consists of two (or more) signatures on a common message. It may also be known as a hybrid\n681 signature or composite signature.\n682 encryption\n683 The process of transforming plaintext into ciphertext using a cryptographic algorithm and key.\n684 eXtendable-Output Function (XOF)\n685 A function on bit strings in which the output can be extended to any desired length.\n686\n20\nNIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n687 forward secrecy\n688 Providing protection against the use of compromised old keys that could be used to attack the newer derived keys\n689 still in use for integrity and confidentiality protection.\n690 hash function\n691 A function on bit strings in which the length of the output is fixed. Approved hash functions (such as those\n692 specified in FIPS 180 and FIPS 202) are designed to satisfy the following properties:\n693 1. (One-way) It is computationally infeasible to find any input that maps to any new pre-specified output.\n694 2. (Collision-resistant) It is computationally infeasible to find any two distinct inputs that map to the same\n695 output.\n696 KEM combiner\n697 A function that takes in two or more shared secret keys and returns a combined shared secret key.\n698 key agreement\n699 A (pair-wise) key-establishment procedure where the resultant secret keying material is a function of information\n700 contributed by two participants so that no party can predetermine the value of the secret keying material\n701 independently from the contributions of the other party. Contrast with key-transport.\n702 key derivation\n703 The process of deriving a key in a non-reversible manner from shared information, some of which is secret.\n704 key encapsulation mechanism (KEM)\n705 A set of three cryptographic algorithms (KeyGen, Encaps, and Decaps) that can be used by two parties to establish\n706 a shared secret key over a public channel.\n707 key establishment\n708 A procedure that results in establishing secret keying material that is shared among different parties.\n709 key transport\n710 A (pair-wise) key-establishment procedure whereby one party (the sender) selects a value for the secret keying\n711 material and then securely distributes that value to another party (the receiver). Contrast with key agreement.\n712 key wrapping\n713 A method of protecting secret keying material (along with associated integrity information) that provides both\n714 confidentiality and integrity protection when using symmetric-key algorithms.\n715 legacy use\n716 The algorithm or key length may be used only to process already protected information (e.g., to decrypt ciphertext\n717 data or to verify a digital signature).\n718 message authentication code (MAC)\n719 A cryptographic checksum on data that uses a symmetric key to detect both accidental and intentional\n720 modifications of data.\n721 mode of operation\n722 An algorithm for the cryptographic transformation of data that features a symmetric key block cipher.\n723 public key infrastructure (PKI)\n724 A framework that is established to issue, maintain and revoke public key certificates.\n725 public key cryptography\n726 Cryptography that uses two separate keys to exchange data — one to encrypt or digitally sign the data and one to\n727 decrypt the data or verify the digital signature. Also known as asymmetric cryptography.\n21\nNIST IR 8547 ipd (Initial Public Draft) Transition to Post-Quantum Cryptography Standards\nNovember 2024\n728 security category\n729 A number associated with the security strength of a post-quantum cryptographic algorithm, as specified by NIST.\n730 security strength\n731 A number associated with the amount of work (i.e., the number of operations) that is required to break a\n732 cryptographic algorithm or system.\n733 shared secret\n734 A secret value that has been computed during a key-establishment scheme, is known by both participants, and is\n735 used as input to a key-derivation method to produce keying material.\n736 shared secret key\n737 A shared secret that can be used directly as a cryptographic key in symmetric-key cryptography. It does not require\n738 additional key derivation. The shared secret key must be kept private and must be destroyed when no longer\n739 needed.\n740 symmetric key cryptography\n741 A cryptographic algorithm that uses the same secret key for its operation and, if applicable, for reversing the\n742 effects of the operation (e.g., an AES key for encryption and decryption).\n22"
  }
]